{"version":3,"sources":["DialogContainer.js","DisplayCode.js","ReactTreeVanillaApp.js","code-ReactTreeVanillaApp.js","ReactTreeContextApp.js","code-ReactTreeContextApp.js","actions.js","reducers.js","ReactTreeReduxApp.js","code-ReactTreeReduxApp.js","ReactTreeHooksApp.js","code-ReactTreeHooksApp.js","HigherOrderFunctionApp.js","code-HigherOrderFunctionApp.js","JavaScriptExercises.js","code-JavaScriptExercises.js","PlaygroundApp.js","code-playground.js","ReactTreeHooksAndContextApp.js","code-ReactTreeHooksAndContextApp.js","DummyApp.js","code-GiphyGetterApp.js","GiphyGetterApp.js","ReactTreeApp.js","serviceWorker.js","index.js"],"names":["DialogContainer","props","this","show","Fragment","id","style","width","height","title","onClick","onCancel","dialogContent","React","Component","DisplayCode","code","GrandChild1","className","name","value","GrandChild2","Child1","Child2","Parent","state","count","handleClick","bind","myFunction","setState","prev","setTimeout","color","paddingLeft","from","to","borderColor","borderStyle","borderWidth","fromAnchor","toAnchor","delay","ReactTreeVanillaApp","goBack","openDisplayCode","onCancelDisplayCode","showCode","ReactDOM","render","document","getElementById","position","border","textAlign","backgroundColor","paddingBottom","fontSize","marginLeft","marginRight","onCancelLogout","userContext","createContext","Consumer","data","update","Context","Provider","ReactTreeContextApp","incrementAction","type","reducer","action","newState","Object","assign","store","createStore","increment","Redux","ReactTreeReduxApp","connect","ownProps","dispatch","decrement","incrementCount","useState","setCount","ReactTreeHooksApp","Memoize","result","theFunction","input","onInputChange","e","target","originalFunction","cache","num","undefined","output","memoize","func","marginBottom","toString","onChange","HigherOrderFunctionApp","RemoveDuplicatesFromArray","Set","arr","filter","item","index","indexOf","ReplaceValueInArray","originalArr","MapArrayWithoutMap","friends","age","Array","EmptyArray","length","ConvertArrayToObject","values","FillArrayWithData","fill","MergeArrays","mergedArr","arr1","arr2","IntersectionOfTwoArrays","x","RemoveFalsyValuesFromArray","Boolean","GetRandomValueFromArray","ReverseArray","LastIndexOf","SumAllValuesInArray","JavaScriptExercises","NaN","styled","div","keyframes","bounce","shake","hinge","Recruit","vvalue","array","Giphy","search","images","tempImages","fetch","then","res","json","map","imageObj","push","original","url","catch","error","console","log","image","key","src","alt","PlaygroundApp","useContext","context","ReactTreeHooksAndContextApp","DummyApp","onChangeSearch","onChangeQty","quantity","onFetch","GiphyGetterApp","ReactTreeApp","DynamicComponent","vanilla","hooks","redux","hof","exercises","play","giphy","hookscontext","dummy","marginTop","window","location","hostname","match","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mOAmCeA,G,kBA/Bb,WAAYC,GAAQ,qEACZA,I,sEAKN,OAAIC,KAAKD,MAAME,KAKb,kBAAC,IAAMC,SAAP,KACE,yBAAKC,GAAG,uBACN,yBAAKA,GAAG,mBAAmBC,MAAO,CAACC,MAAOL,KAAKD,MAAMM,MAAOC,OAAQN,KAAKD,MAAMO,SAC7E,yBAAKH,GAAG,yBACN,0BAAMA,GAAG,SAASH,KAAKD,MAAMQ,OAC7B,oCACA,yBAAKJ,GAAG,WACN,4BAAQK,QAASR,KAAKD,MAAMU,UAA5B,OAGJ,yBAAKN,GAAG,0BACLH,KAAKD,MAAMW,kBAfb,S,GARiBC,IAAMC,YCSrBC,MAVf,SAAqBd,GACnB,OACE,6BACE,8BACE,6BAAMA,EAAMe,SCKpB,SAASC,EAAYhB,GACnB,OACE,yBAAKI,GAAG,mBAAmBa,UAAU,MACnC,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,MAET,6BACA,yBAAKD,UAAU,aACb,4BAAQR,QAAST,EAAMS,SAAvB,UAEF,yBAAKQ,UAAU,YACb,2BAAIjB,EAAMmB,UAQpB,SAASC,EAAYpB,GACnB,OACE,yBAAKI,GAAG,mBAAmBa,UAAU,MACnC,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,MAET,6BACA,yBAAKD,UAAU,aACb,4BAAQR,QAAST,EAAMS,SAAvB,UAEF,yBAAKQ,UAAU,YACb,2BAAIjB,EAAMmB,UAQpB,SAASE,EAAOrB,GACd,OACE,yBAAKI,GAAG,aAAaa,UAAU,MAC7B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,MAET,6BACA,yBAAKD,UAAU,aACb,4BAAQR,QAAST,EAAMS,SAAvB,UAEF,yBAAKQ,UAAU,YACb,2BAAIjB,EAAMmB,UAOpB,SAASG,EAAOtB,GACd,OACE,oCACE,yBAAKI,GAAG,aAAaa,UAAU,MAC7B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,MAET,6BACA,yBAAKD,UAAU,aACb,4BAAQR,QAAST,EAAMS,SAAvB,UAEF,yBAAKQ,UAAU,YACb,2BAAIjB,EAAMmB,UAIhB,kBAACH,EAAD,CAAaE,KAAM,cAAeT,QAAST,EAAMS,QAASU,MAAOnB,EAAMmB,QACvE,kBAACC,EAAD,CAAaF,KAAM,cAAeT,QAAST,EAAMS,QAASU,MAAOnB,EAAMmB,S,IAMvEI,E,YAEJ,WAAYvB,GAAQ,IAAD,8BACjB,4CAAMA,KACDwB,MAAQ,CACXC,MAAO,GAET,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAND,E,0EAUjB1B,KAAK4B,UAAS,SAACC,GACb,MAAO,CAACL,MAAOK,EAAKL,MAAQ,Q,oCAK9BM,WAAW9B,KAAK2B,WAAY,O,+BAI5B,OACE,oCACE,yBAAKxB,GAAG,aAAaa,UAAU,KAC7B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZhB,KAAKD,MAAMkB,KAAK,uBAAGb,MAAO,CAAC2B,MAAO,MAAOC,YAAa,QAAtC,YAEnB,6BACA,yBAAKhB,UAAU,aACb,4BAAQR,QAASR,KAAKyB,aAAtB,UAEF,yBAAKT,UAAU,YACb,2BAAIhB,KAAKuB,MAAMC,UAIrB,kBAACJ,EAAD,CAAQH,KAAM,SAAUT,QAASR,KAAKyB,YAAaP,MAAOlB,KAAKuB,MAAMC,QACrE,kBAAC,EAAD,CAAQP,KAAM,SAAUT,QAASR,KAAKyB,YAAaP,MAAOlB,KAAKuB,MAAMC,QACrE,kBAAC,gBAAD,CAAeS,KAAK,IAAIC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,MAC9I,kBAAC,gBAAD,CAAeP,KAAK,IAAIC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,MAC9I,kBAAC,gBAAD,CAAeP,KAAK,KAAKC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,MAC/I,kBAAC,gBAAD,CAAeP,KAAK,KAAKC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,W,GA3ClI7B,IAAMC,WAwFZ6B,E,YAtCb,WAAY1C,GAAQ,IAAD,8BACjB,4CAAMA,KACD2C,OAAS,EAAKA,OAAOhB,KAAZ,gBACd,EAAKiB,gBAAkB,EAAKA,gBAAgBjB,KAArB,gBACvB,EAAKkB,oBAAsB,EAAKA,oBAAoBlB,KAAzB,gBAC3B,EAAKH,MAAQ,CACXsB,UAAU,GANK,E,sEAWjBC,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,W,wCAIzDjD,KAAK4B,SAAS,CAACiB,UAAU,M,4CAIzB7C,KAAK4B,SAAS,CAACiB,UAAU,M,+BAKzB,OACE,yBAAKzC,MAAO,CAACE,OAAQ,OAAQ4C,SAAU,WAAY7C,MAAO,OAAQ8C,OAAQ,oBACxE,yBAAK/C,MAAO,CAACgD,UAAW,SAAUC,gBAAiB,aAAcC,cAAe,SAC9E,8BAAM,4BAAQ9C,QAASR,KAAK0C,QAAtB,QAA2C,2BAAOtC,MAAO,CAACmD,SAAU,OAAQC,WAAY,OAAQC,YAAa,SAAlE,WAA0F,4BAAQjD,QAASR,KAAK2C,iBAAtB,UAE7I,kBAAC,EAAD,CAAQ3B,UAAU,SAASC,KAAM,WACjC,kBAAC,EAAD,CAAiBhB,KAAMD,KAAKuB,MAAMsB,SAAUpC,SAAUT,KAAK4C,oBAAqBlC,cAAe,kBAAC,EAAD,CAC7FI,KC/KF,g0JD+KcL,SAAUT,KAAK0D,iBAC7BrD,MAAM,SAASC,OAAO,QAAQC,MAAO,gC,GAjCXI,IAAMC,WEpIlC+C,EAAchD,IAAMiD,gBAG1B,SAAS7C,EAAYhB,GACnB,OACE,yBAAKI,GAAG,mBAAoBa,UAAU,KAAKZ,MAAO,CAACiD,gBAAiB,eAClE,yBAAKrC,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,MAET,6BACA,yBAAKD,UAAU,aACb,4BAAQR,QAAST,EAAMS,SAAvB,UAEF,yBAAKQ,UAAU,YACb,2BAAIjB,EAAMmB,UAOpB,SAASC,EAAYpB,GACnB,OACE,kBAAC4D,EAAYE,SAAb,MACG,SAACC,GACA,OACE,yBAAK3D,GAAG,mBAAoBa,UAAU,MACpC,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACdjB,EAAMkB,KAAK,uBAAGb,MAAO,CAAC2B,MAAO,MAAOC,YAAa,QAAtC,UAEZ,6BACA,yBAAKhB,UAAU,aACb,4BAAQR,QAASsD,EAAKC,QAAtB,UAEF,yBAAK/C,UAAU,YACb,2BAAI8C,EAAKtC,aAUzB,SAASJ,EAAOrB,GACd,OACE,kBAAC4D,EAAYE,SAAb,MACG,SAACC,GACA,OACE,yBAAK3D,GAAG,aAAca,UAAU,MAC9B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,KAAK,uBAAGb,MAAO,CAAC2B,MAAO,MAAOC,YAAa,QAAtC,UAEd,6BACA,yBAAKhB,UAAU,aACb,4BAAQR,QAASsD,EAAKC,QAAtB,UAEF,yBAAK/C,UAAU,YACb,2BAAI8C,EAAKtC,a,IAUnBH,E,YACJ,WAAYtB,GAAQ,IAAD,8BACjB,4CAAMA,KACDwB,MAAQ,CACXC,MAAO,GAET,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAND,E,0EAUjB1B,KAAK4B,UAAS,SAACC,GACb,MAAO,CAACL,MAAOK,EAAKL,MAAQ,Q,oCAK9BM,WAAW9B,KAAK2B,WAAY,O,+BAGpB,IAAD,OACP,OACE,kBAACgC,EAAYE,SAAb,MACG,SAACC,GACA,OACE,oCACE,yBAAK3D,GAAG,aAAca,UAAU,MAC9B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZ,EAAKjB,MAAMkB,KAAK,uBAAGb,MAAO,CAAC2B,MAAO,MAAOC,YAAa,QAAtC,gBAEnB,6BACA,yBAAKhB,UAAU,aACb,4BAAQR,QAASsD,EAAKC,QAAtB,UAEF,yBAAK/C,UAAU,YACb,2BAAI8C,EAAKtC,UAIf,kBAAC,EAAD,CAAaP,KAAM,cAAeT,QAAS,EAAKiB,YAAaP,MAAO,EAAKK,MAAMC,QAC/E,kBAAC,EAAD,CAAaP,KAAM,wB,GAzCZN,IAAMC,WAkD3B,SAASoD,EAAQjE,GACf,OACE,yBAAKI,GAAG,cAAca,UAAU,OAC9B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,MAET,yBAAKD,UAAU,YAAf,mBAGA,yBAAKA,UAAU,YAAf,qBAGA,+B,IAMFM,E,YACJ,WAAYvB,GAAQ,IAAD,8BACjB,4CAAMA,KACDwB,MAAQ,CACXC,MAAO,EACPuC,OAAQ,WACN,EAAKnC,UAAS,SAACC,GACb,MAAO,CAACL,MAAOK,EAAKL,MAAQ,QANjB,E,sEAwBT,IAAD,OACP,OACE,oCACE,kBAACmC,EAAYM,SAAb,CAAsB/C,MAAOlB,KAAKuB,OAChC,kBAACoC,EAAYE,SAAb,MACG,SAACC,GACA,OACE,oCACE,yBAAK3D,GAAG,aAAaa,UAAU,KAC7B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZ,EAAKjB,MAAMkB,MAEd,yBAAKD,UAAU,YACb,uBAAGZ,MAAO,CAAC2B,MAAO,MAAOC,YAAa,QAAtC,0BAEF,6BACA,yBAAKhB,UAAU,aACb,4BAAQR,QAASsD,EAAKC,QAAtB,UAEF,yBAAK/C,UAAU,YACb,2BAAI8C,EAAKtC,UAIf,kBAACwC,EAAD,CAAS/C,KAAM,YACf,kBAAC,EAAD,CAAQA,KAAM,WACd,kBAAC,EAAD,CAAQA,KAAM,WACd,kBAAC,gBAAD,CAAegB,KAAK,IAAIC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,MAC9I,kBAAC,gBAAD,CAAeP,KAAK,IAAIC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,MAC9I,kBAAC,gBAAD,CAAeP,KAAK,KAAKC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,MAC/I,kBAAC,gBAAD,CAAeP,KAAK,KAAKC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,gB,GAxD5I7B,IAAMC,WA0GZsD,E,YAtCb,WAAYnE,GAAQ,IAAD,8BACjB,4CAAMA,KACD2C,OAAS,EAAKA,OAAOhB,KAAZ,gBACd,EAAKiB,gBAAkB,EAAKA,gBAAgBjB,KAArB,gBACvB,EAAKkB,oBAAsB,EAAKA,oBAAoBlB,KAAzB,gBAC3B,EAAKH,MAAQ,CACXsB,UAAU,GANK,E,sEAWjBC,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,W,wCAIzDjD,KAAK4B,SAAS,CAACiB,UAAU,M,4CAIzB7C,KAAK4B,SAAS,CAACiB,UAAU,M,+BAIzB,OACE,yBAAKzC,MAAO,CAACE,OAAQ,OAAQ4C,SAAU,WAAY7C,MAAO,OAAQ8C,OAAQ,oBACxE,yBAAK/C,MAAO,CAACgD,UAAW,SAAUC,gBAAiB,aAAcC,cAAe,SAC9E,8BAAM,4BAAQ9C,QAASR,KAAK0C,QAAtB,QAA2C,2BAAOtC,MAAO,CAACmD,SAAU,OAAQC,WAAY,OAAQC,YAAa,SAAlE,WAA0F,4BAAQjD,QAASR,KAAK2C,iBAAtB,UAE7I,kBAAC,EAAD,CAAQ1B,KAAM,WACd,kBAAC,EAAD,CAAiBhB,KAAMD,KAAKuB,MAAMsB,SAAUpC,SAAUT,KAAK4C,oBAAqBlC,cAAe,kBAAC,EAAD,CAC7FI,KC1PF,8qPD0PcL,SAAUT,KAAK0D,iBAC7BrD,MAAM,SAASC,OAAO,QAAQC,MAAO,gC,GAhCXI,IAAMC,W,QE3N3BuD,EAAkB,SAAClD,GAAD,MAAW,CACxCmD,KAAM,YACNnD,KAAMA,I,QCcOoD,EAhBC,WAAgC,IAA/B9C,EAA8B,uDAAtB,CAACC,MAAM,GAAI8C,EAAW,uCACzCC,EAAW,GACf,OAAQD,EAAOF,MACb,IAAK,YAGH,OAFAG,EAAWC,OAAOC,OAAO,GAAIlD,IACpBC,QACF+C,EACT,IAAK,YAGH,OAFAA,EAAWC,OAAOC,OAAO,GAAIlD,IACpBC,QACF+C,EACT,QACE,OAAOhD,ICOPmD,EAAQC,YAAYN,GAE1B,SAAStD,EAAYhB,GACnB,OACE,yBAAKI,GAAG,mBAAmBa,UAAU,MACnC,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,KAAK,uBAAGb,MAAO,CAAC2B,MAAO,MAAOC,YAAa,QAAtC,UAEd,6BACA,yBAAKhB,UAAU,aACb,4BAAQR,QAAST,EAAM6E,WAAvB,UAEF,yBAAK5D,UAAU,YACb,2BAAIjB,EAAMyB,UAOpB,SAASL,EAAYpB,GACnB,OACE,yBAAKI,GAAG,mBAAmBa,UAAU,MACnC,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,KAAK,uBAAGb,MAAO,CAAC2B,MAAO,MAAOC,YAAa,QAAtC,UAEd,6BACA,yBAAKhB,UAAU,aACb,4BAAQR,QAAST,EAAM6E,WAAvB,UAEF,yBAAK5D,UAAU,YACb,2BAAIjB,EAAMyB,UAOpB,SAASJ,EAAOrB,GACd,OACE,yBAAKI,GAAG,aAAaa,UAAU,MAC7B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,KAAK,uBAAGb,MAAO,CAAC2B,MAAO,MAAOC,YAAa,QAAtC,UAEd,6BACA,yBAAKhB,UAAU,aACb,4BAAQR,QAAST,EAAM6E,WAAvB,UAEF,yBAAK5D,UAAU,YACb,2BAAIjB,EAAMyB,U,IAOdH,E,YACJ,WAAYtB,GAAQ,IAAD,8BACjB,4CAAMA,KACDwB,MAAQ,CACXC,MAAO,GAET,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAND,E,0EAUjB1B,KAAK4B,UAAS,SAACC,GACb,MAAO,CAACL,MAAOK,EAAKL,MAAQ,Q,oCAK9BM,WAAW9B,KAAK2B,WAAY,O,+BAI5B,OACE,oCACE,yBAAKxB,GAAG,aAAaa,UAAU,KAAKZ,MAAO,CAACiD,gBAAiB,eAC3D,yBAAKrC,UAAU,WACb,yBAAKA,UAAU,YACZhB,KAAKD,MAAMkB,KAAK,uBAAGb,MAAO,CAAC2B,MAAO,MAAOC,YAAa,QAAtC,YAEnB,6BACA,yBAAKhB,UAAU,aACb,4BAAQR,QAASR,KAAKyB,aAAtB,UAEF,yBAAKT,UAAU,YACb,2BAAIhB,KAAKuB,MAAMC,UAIrB,kBAAC,EAAD,CAAaP,KAAM,gBACnB,kBAAC,EAAD,CAAaA,KAAM,qB,GAtCNN,IAAMC,WA4C3B,SAASiE,EAAM9E,GAEb,OACE,yBAAKI,GAAG,YAAYa,UAAU,OAC5B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,MAET,yBAAKD,UAAU,YAAf,oBAGA,yBAAKA,UAAU,YAAf,WAGA,yBAAKA,UAAU,YAAf,mBAGA,yBAAKA,UAAU,YAAf,sBAGA,+BAMR,SAASM,EAAOvB,GACd,OACE,oCACE,yBAAKI,GAAG,aAAaa,UAAU,KAC7B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,KAAK,uBAAGb,MAAO,CAAC2B,MAAO,MAAOC,YAAa,QAAtC,UAEd,6BACA,yBAAKhB,UAAU,aACb,4BAAQR,QAAST,EAAM6E,WAAvB,UAEF,yBAAK5D,UAAU,YACb,2BAAIjB,EAAMyB,UAIhB,kBAACqD,EAAD,CAAO5D,KAAM,UACb,kBAAC,EAAD,CAAQA,KAAM,WACd,kBAAC,EAAD,CAAQA,KAAM,WAGd,kBAAC,gBAAD,CAAegB,KAAK,IAAIC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,MAC9I,kBAAC,gBAAD,CAAeP,KAAK,IAAIC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,MAC9I,kBAAC,gBAAD,CAAeP,KAAK,KAAKC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,MAC/I,kBAAC,gBAAD,CAAeP,KAAK,KAAKC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,O,IAM/IsC,E,YACJ,WAAY/E,GAAQ,IAAD,8BACjB,4CAAMA,KACD2C,OAAS,EAAKA,OAAOhB,KAAZ,gBACd,EAAKiB,gBAAkB,EAAKA,gBAAgBjB,KAArB,gBACvB,EAAKkB,oBAAsB,EAAKA,oBAAoBlB,KAAzB,gBAC3B,EAAKH,MAAQ,CACXsB,UAAU,GANK,E,sEAWjBC,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,W,wCAIzDjD,KAAK4B,SAAS,CAACiB,UAAU,M,4CAIzB7C,KAAK4B,SAAS,CAACiB,UAAU,M,+BAIzB,OACE,kBAAC,IAAD,CAAU6B,MAAOA,GACf,yBAAKtE,MAAO,CAACE,OAAQ,OAAQ4C,SAAU,WAAY7C,MAAO,OAAQ8C,OAAQ,oBAC1E,yBAAK/C,MAAO,CAACgD,UAAW,SAAUC,gBAAiB,aAAcC,cAAe,SAC9E,8BAAM,4BAAQ9C,QAASR,KAAK0C,QAAtB,QAA2C,2BAAOtC,MAAO,CAACmD,SAAU,OAAQC,WAAY,OAAQC,YAAa,SAAlE,SAAwF,4BAAQjD,QAASR,KAAK2C,iBAAtB,UAG3I,kBAAC,EAAD,CAAQ1B,KAAM,WACd,kBAAC,EAAD,CAAiBhB,KAAMD,KAAKuB,MAAMsB,SAAUpC,SAAUT,KAAK4C,oBAAqBlC,cAAe,kBAAC,EAAD,CAC7FI,KCpNF,8tPDoNcL,SAAUT,KAAK0D,iBAC7BrD,MAAM,SAASC,OAAO,QAAQC,MAAO,+B,GAlCbI,IAAMC,WAiDtCU,EAASyD,aARsB,SAACxD,EAAOyD,GAAR,MAAsB,CACnDxD,MAAOD,EAAMC,MACbP,KAAM+D,EAAS/D,SAEiB,SAACgE,GAAD,MAAe,CAC/CL,UAAW,WAAOK,EAASd,MAC3Be,UAAW,WAAOD,EF7NkB,CACpCb,KAAM,kBE8NCW,CAGPzD,GAWFF,EAAS2D,aARsB,SAACxD,EAAOyD,GAAR,MAAsB,CACnDxD,MAAOD,EAAMC,MACbP,KAAM+D,EAAS/D,SAEiB,SAACgE,GAAD,MAAe,CAC/CL,UAAW,WAAOK,EAASd,MAC3Be,UAAW,WAAOD,EF3OkB,CACpCb,KAAM,kBE4OCW,CAGP3D,GAwBFL,EAAcgE,aARsB,SAACxD,EAAOyD,GAAR,MAAsB,CACxDxD,MAAOD,EAAMC,MACbP,KAAM+D,EAAS/D,SAEsB,SAACgE,GAAD,MAAe,CACpDL,UAAW,WAAOK,EAASd,MAC3Be,UAAW,WAAOD,EFtQkB,CACpCb,KAAM,kBEuQMW,CAGZhE,GAUFI,EAAc4D,aARsB,SAACxD,EAAOyD,GAAR,MAAsB,CACxDxD,MAAOD,EAAMC,MACbP,KAAM+D,EAAS/D,SAEsB,SAACgE,GAAD,MAAe,CACpDL,UAAW,WAAOK,EAASd,MAC3Be,UAAW,WAAOD,EFnRkB,CACpCb,KAAM,kBEoRMW,CAGZ5D,GAGa2D,Q,QElRf,SAAS/D,EAAYhB,GACnB,OACE,yBAAKI,GAAG,mBAAmBa,UAAU,MACnC,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,MAET,6BACA,yBAAKD,UAAU,aACb,4BAAQR,QAAS,kBAAMT,EAAMoF,eAAepF,EAAMyB,MAAQ,KAA1D,UAEF,yBAAKR,UAAU,YACb,2BAAIjB,EAAMyB,UAOpB,SAASL,EAAYpB,GACnB,OACE,yBAAKI,GAAG,mBAAmBa,UAAU,MACnC,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,MAET,6BACA,yBAAKD,UAAU,aACf,4BAAQR,QAAS,kBAAMT,EAAMoF,eAAepF,EAAMyB,MAAQ,KAA1D,UAEA,yBAAKR,UAAU,YACb,2BAAIjB,EAAMyB,UAQpB,SAASJ,EAAOrB,GACd,OACE,yBAAKI,GAAG,aAAaa,UAAU,MAC7B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,MAET,6BACA,yBAAKD,UAAU,aACb,4BAAQR,QAAS,kBAAMT,EAAMoF,eAAepF,EAAMyB,MAAQ,KAA1D,UAEF,yBAAKR,UAAU,YACb,2BAAIjB,EAAMyB,UAOpB,SAASH,EAAOtB,GACd,OACE,oCACE,yBAAKI,GAAG,aAAaa,UAAU,MAC7B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,MAET,6BACA,yBAAKD,UAAU,aACb,4BAAQR,QAAS,kBAAMT,EAAMoF,eAAepF,EAAMyB,MAAQ,KAA1D,UAEF,yBAAKR,UAAU,YACb,2BAAIjB,EAAMyB,UAIhB,kBAAC,EAAD,CAAaP,KAAM,cAAekE,eAAgBpF,EAAMoF,eAAgB3D,MAAOzB,EAAMyB,QACrF,kBAAC,EAAD,CAAaP,KAAM,cAAekE,eAAgBpF,EAAMoF,eAAgB3D,MAAOzB,EAAMyB,SAK3F,SAASF,EAAOvB,GAAQ,IAAD,EACKqF,mBAAS,GADd,mBACd5D,EADc,KACP6D,EADO,KAErB,OACI,oCACE,yBAAKlF,GAAG,aAAaa,UAAU,KAC7B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,KAAK,uBAAGb,MAAO,CAAC2B,MAAO,MAAOC,YAAa,QAAtC,eAEd,6BACA,yBAAKhB,UAAU,aACb,4BAAQR,QAAS,kBAAM6E,EAAS7D,EAAQ,KAAxC,UAEF,yBAAKR,UAAU,YACb,2BAAIQ,MAIV,kBAAC,EAAD,CAAQP,KAAM,SAAUkE,eAAgBE,EAAU7D,MAAOA,IACzD,kBAAC,EAAD,CAAQP,KAAM,SAAUkE,eAAgBE,EAAU7D,MAAOA,IACzD,kBAAC,gBAAD,CAAeS,KAAK,IAAIC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,MAC9I,kBAAC,gBAAD,CAAeP,KAAK,IAAIC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,MAC9I,kBAAC,gBAAD,CAAeP,KAAK,KAAKC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,MAC/I,kBAAC,gBAAD,CAAeP,KAAK,KAAKC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,O,IA2CxI8C,E,YArCb,WAAYvF,GAAQ,IAAD,8BACjB,4CAAMA,KACD2C,OAAS,EAAKA,OAAOhB,KAAZ,gBACd,EAAKiB,gBAAkB,EAAKA,gBAAgBjB,KAArB,gBACvB,EAAKkB,oBAAsB,EAAKA,oBAAoBlB,KAAzB,gBAC3B,EAAKH,MAAQ,CACXsB,UAAU,GANK,E,sEAWjBC,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,W,wCAIzDjD,KAAK4B,SAAS,CAACiB,UAAU,M,4CAIzB7C,KAAK4B,SAAS,CAACiB,UAAU,M,+BAIzB,OACE,yBAAKzC,MAAO,CAACE,OAAQ,OAAQ4C,SAAU,WAAY7C,MAAO,OAAQ8C,OAAQ,oBACxE,yBAAK/C,MAAO,CAACgD,UAAW,SAAUC,gBAAiB,aAAcC,cAAe,SAC9E,8BAAM,4BAAQ9C,QAASR,KAAK0C,QAAtB,QAA2C,2BAAOtC,MAAO,CAACmD,SAAU,OAAQC,WAAY,OAAQC,YAAa,SAAlE,SAAwF,4BAAQjD,QAASR,KAAK2C,iBAAtB,UAE3I,kBAAC,EAAD,CAAQ1B,KAAM,WACd,kBAAC,EAAD,CAAiBhB,KAAMD,KAAKuB,MAAMsB,SAAUpC,SAAUT,KAAK4C,oBAAqBlC,cAAe,kBAAC,EAAD,CAC7FI,KC1JF,+nJD0JcL,SAAUT,KAAK0D,iBAC7BrD,MAAM,SAASC,OAAO,QAAQC,MAAO,8B,GAhCbI,IAAMC,WEnGhC2E,E,YACJ,WAAYxF,GAAQ,IAAD,8BACjB,4CAAMA,KAYR0B,YAAc,WACZ,EAAKG,SAAS,CAAC4D,OAAQ,EAAKC,YAAY,EAAKlE,MAAMmE,UAdlC,EAiBnBC,cAAgB,SAACC,GACf,EAAKhE,SAAS,CAAC8D,MAAOE,EAAEC,OAAO3E,SAhB/B,EAAKK,MAAQ,CACXiE,OAAQ,EACRE,MAAO,GAET,EAAKD,YAAc,EANF,E,iFAUjBzF,KAAKyF,YA1BO,SAACK,GACf,IAAMC,EAAQ,GAEd,OAAO,SAASC,GACd,QAAmBC,IAAfF,EAAMC,GACR,OAAOD,EAAMC,GAAO,WAGpB,IAAME,EAASJ,EAAiBE,GAEhC,OADAD,EAAMC,GAAOE,EACNA,GAgBUC,CAAQnG,KAAKD,MAAMqG,Q,+BAYtC,OACE,oCACE,uCACA,yBAAKhG,MAAO,CAACiG,aAAc,SACzB,6CACA,+BAAQrG,KAAKD,MAAMqG,KAAKE,aAE1B,sDACA,2BAAOlG,MAAO,CAACqD,YAAa,QAAS8C,SAAUvG,KAAK2F,cAAezE,MAAOlB,KAAKuB,MAAMmE,QACrF,4BAAQtF,MAAO,CAACqD,YAAa,QAASjD,QAASR,KAAKyB,aAApD,aACA,2CACA,8BAAOzB,KAAKuB,MAAMiE,a,GAlCJ7E,IAAMC,WAgFb4F,E,YAvCb,WAAYzG,GAAQ,IAAD,8BACjB,4CAAMA,KACD2C,OAAS,EAAKA,OAAOhB,KAAZ,gBACd,EAAKiB,gBAAkB,EAAKA,gBAAgBjB,KAArB,gBACvB,EAAKkB,oBAAsB,EAAKA,oBAAoBlB,KAAzB,gBAC3B,EAAKH,MAAQ,CACXsB,UAAU,GANK,E,sEAWjBC,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,W,wCAIzDjD,KAAK4B,SAAS,CAACiB,UAAU,M,4CAIzB7C,KAAK4B,SAAS,CAACiB,UAAU,M,+BAIzB,OACE,yBAAKzC,MAAO,CAACE,OAAQ,OAAQ4C,SAAU,WAAY7C,MAAO,OAAQmD,WAAY,SAC5E,yBAAKpD,MAAO,CAACgD,UAAW,SAAUC,gBAAiB,aAAcC,cAAe,SAC9E,8BAAM,4BAAQ9C,QAASR,KAAK0C,QAAtB,QAA2C,2BAAOtC,MAAO,CAACmD,SAAU,OAAQC,WAAY,OAAQC,YAAa,SAAlE,uBAAsG,4BAAQjD,QAASR,KAAK2C,iBAAtB,UAEzJ,kBAAC,EAAD,CAASyD,KAAM,SAACJ,GAAD,OAAe,EAANA,KAExB,kBAAC,EAAD,CAAiB/F,KAAMD,KAAKuB,MAAMsB,SAAUpC,SAAUT,KAAK4C,oBAAqBlC,cAAe,kBAAC,EAAD,CAC7FI,KChGF,ilFDgGcL,SAAUT,KAAK0D,iBAC3BrD,MAAM,SAASC,OAAO,QAAQC,MAAO,mC,GAjCVI,IAAMC,W,gBErD3C,SAAS6F,GAA0B1G,GACjC,IAAIyF,EAAS,GAIb,OAHAA,EAAM,YAAO,IAAIkB,IAAI3G,EAAM4G,MAC3BnB,EAASzF,EAAM4G,IAAIC,QAAO,SAACC,EAAMC,GAAW,OAAO/G,EAAM4G,IAAII,QAAQF,KAAUC,KAG7E,oCACE,uBAAG3G,GAAG,uBAAN,qCAA+DJ,EAAM4G,IAAIL,WAAzE,OACA,uBAAGtF,UAAU,WAAb,gCACA,uBAAGA,UAAU,WAAb,uEACA,uBAAGA,UAAU,kBAAb,YAAwCwE,EAAOc,WAA/C,MAMN,SAASU,GAAoBjH,GAC3B,IAAIkH,EAAW,YAAOlH,EAAM4G,KACxBG,EAAQ/G,EAAM4G,IAAII,QAAQhH,EAAMkC,MAGpC,OAFAlC,EAAM4G,IAAIG,GAAS/G,EAAMmC,GAGvB,oCACE,uBAAG/B,GAAG,uBAAN,+BAAyD8G,EAAYX,WAArE,MAAoFvG,EAAMkC,KAA1F,KAAkGlC,EAAMmC,GAAxG,MACA,uBAAGlB,UAAU,WAAb,yCACA,uBAAGA,UAAU,kBAAb,YAAwCjB,EAAM4G,IAAIL,WAAlD,MAKN,SAASY,KACP,IAAIC,EAAU,CACZ,CAAElG,KAAM,OAAQmG,IAAK,IACrB,CAAEnG,KAAM,QAASmG,IAAK,IACtB,CAAEnG,KAAM,OAAQmG,IAAK,IACrB,CAAEnG,KAAM,QAASmG,IAAK,IACtB,CAAEnG,KAAM,SAAUmG,IAAK,IACvB,CAAEnG,KAAM,SAAUmG,IAAK,KAErBH,EAAcI,MAAMpF,KAAKkF,GAAS,SAACN,GACrC,MAAQ,WAAaA,EAAK5F,KAAO,UAAiB4F,EAAKO,IAAM,OAE3D5B,EAAS6B,MAAMpF,KAAKkF,GAAS,qBAAElG,QAEnC,OACE,oCACE,uBAAGd,GAAG,uBAAN,8BAAwD8G,EAAYX,WAApE,MACA,uBAAGtF,UAAU,WAAb,uCACA,uBAAGA,UAAU,kBAAb,YAAwCwE,EAAOc,WAA/C,MAKN,SAASgB,GAAWvH,GAClB,IAAIkH,EAAW,YAAOlH,EAAM4G,KAG5B,OAFA5G,EAAM4G,IAAIY,OAAS,EAGjB,oCACE,uBAAGpH,GAAG,uBAAN,oBAA8C8G,EAAYX,WAA1D,MACA,uBAAGtF,UAAU,WAAb,yBACA,uBAAGA,UAAU,kBAAb,YAAwCjB,EAAM4G,IAA9C,MAKN,SAASa,GAAqBzH,GAE5B,IAAIyF,EAAM,eAAOzF,EAAM4G,KAEvB,OACE,oCACE,uBAAGxG,GAAG,uBAAN,gCAA0DJ,EAAM4G,IAAIL,WAApE,MACA,uBAAGtF,UAAU,WAAb,gBACA,uBAAGA,UAAU,kBAAb,WAAuCwD,OAAOiD,OAAOjC,GAAQc,aAMnE,SAASoB,KACP,IAAIf,EAAM,IAAIU,MAAM,IAAIM,KAAK,KAE7B,OACE,oCACE,uBAAGxH,GAAG,uBAAN,2BACA,uBAAGa,UAAU,WAAb,2BACA,uBAAGA,UAAU,kBAAb,WAAuC2F,EAAIL,aAKjD,SAASsB,GAAY7H,GAInB,IAAI8H,EAAS,sBAAO9H,EAAM+H,MAAb,YAAsB/H,EAAMgI,OAEzC,OACE,oCACE,uBAAG5H,GAAG,uBAAN,qBAA+CJ,EAAM+H,KAAKxB,WAA1D,OAA0EvG,EAAMgI,KAAKzB,WAArF,MACA,uBAAGtF,UAAU,WAAb,gCACA,uBAAGA,UAAU,WAAb,0CACA,uBAAGA,UAAU,kBAAb,YAAwC6G,EAAUvB,WAAlD,MAKN,SAAS0B,GAAwBjI,GAC/B,IAAIyF,EAASzF,EAAM+H,KAAKlB,QAAO,SAACqB,GAC9B,OAAkC,IAA3BlI,EAAMgI,KAAKhB,QAAQkB,MAG5B,OACE,oCACI,uBAAG9H,GAAG,uBAAN,mCAA6DJ,EAAM+H,KAAKxB,WAAxE,MAAuFvG,EAAMgI,KAAKzB,WAAlG,MACA,uBAAGtF,UAAU,kBAAb,YAAwCwE,EAAOc,WAA/C,MAKR,SAAS4B,GAA2BnI,GAClC,OACE,6BACE,uBAAGI,GAAG,uBAAN,uCAAiEJ,EAAM4G,IAAIL,WAA3E,MACA,uBAAGtF,UAAU,WAAb,uBACA,uBAAGA,UAAU,kBAAb,YAAwCjB,EAAM4G,IAAIC,OAAOuB,SAAS7B,WAAlE,MAON,SAAS8B,KACP,OACE,yBAAKjI,GAAG,uBAAR,mCAIJ,SAASkI,KACP,OACE,yBAAKlI,GAAG,uBAAR,qBAIJ,SAASmI,KACP,OACE,yBAAKnI,GAAG,uBAAR,qBAIJ,SAASoI,KACP,OACE,yBAAKpI,GAAG,uBAAR,+B,IAkGWqI,G,YA5Fb,WAAYzI,GAAQ,IAAD,8BACjB,4CAAMA,KACD2C,OAAS,EAAKA,OAAOhB,KAAZ,gBACd,EAAKiB,gBAAkB,EAAKA,gBAAgBjB,KAArB,gBACvB,EAAKkB,oBAAsB,EAAKA,oBAAoBlB,KAAzB,gBAC3B,EAAKH,MAAQ,CACXsB,UAAU,GANK,E,sEAWjBC,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,W,wCAIzDjD,KAAK4B,SAAS,CAACiB,UAAU,M,4CAIzB7C,KAAK4B,SAAS,CAACiB,UAAU,M,+BAIzB,OACE,yBAAK1C,GAAG,iBAEN,yBAAKA,GAAG,qBACN,8BAAM,4BAAQK,QAASR,KAAK0C,QAAtB,QAA2C,2BAAOtC,MAAO,CAACmD,SAAU,OAAQC,WAAY,OAAQC,YAAa,SAAlE,uBAAsG,4BAAQjD,QAASR,KAAK2C,iBAAtB,UAGzJ,yBAAKxC,GAAG,oBACN,yBAAKa,UAAU,eACb,kBAACyF,GAAD,CAA2BE,IAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAGjD,yBAAK3F,UAAU,eACb,kBAACgG,GAAD,CAAqBL,IAAK,CAAC,QAAS,SAAU,SAAU,SAAW1E,KAAM,SAAUC,GAAI,YAGzF,yBAAKlB,UAAU,eACb,kBAACkG,GAAD,OAEF,yBAAKlG,UAAU,eACb,kBAACsG,GAAD,CAAYX,IAAK,CAAC,EAAE,EAAE,EAAE,MAE1B,yBAAK3F,UAAU,eACb,kBAACwG,GAAD,CAAsBb,IAAK,CAAC,EAAE,EAAE,EAAE,MAGpC,yBAAK3F,UAAU,eACb,kBAAC0G,GAAD,OAGF,yBAAK1G,UAAU,eACb,kBAAC4G,GAAD,CAAaE,KAAM,CAAC,EAAE,EAAE,EAAE,GAAIC,KAAM,CAAC,EAAE,EAAE,EAAE,MAG7C,yBAAK/G,UAAU,eACb,kBAACgH,GAAD,CAAyBF,KAAM,CAAC,IAAI,IAAI,IAAI,KAAMC,KAAM,CAAC,IAAI,IAAI,IAAI,IAAI,QAG3E,yBAAK/G,UAAU,eACb,kBAACkH,GAAD,CAA4BvB,IAAK,CAAC,EAAG,OAAQ,GAAI8B,IAAK,GAAG,OAAMxC,EAAW,SAAS,MAGrF,yBAAKjF,UAAU,eACb,kBAACoH,GAAD,OAGF,yBAAKpH,UAAU,eACb,kBAACqH,GAAD,OAGF,yBAAKrH,UAAU,eACb,kBAACsH,GAAD,OAGF,yBAAKtH,UAAU,eACb,kBAACuH,GAAD,QAKJ,kBAAC,EAAD,CAAiBtI,KAAMD,KAAKuB,MAAMsB,SAAUpC,SAAUT,KAAK4C,oBAAqBlC,cAAe,kBAAC,EAAD,CAC7FI,KC9PF,8nDD8PcL,SAAUT,KAAK0D,iBAC3BrD,MAAM,SAASC,OAAO,QAAQC,MAAO,gC,GAtFbI,IAAMC,W,kiBE5JzB8H,KAAOC,IAAV,KAA8BC,aAA9B,KAA0CC,YACxCH,KAAOC,IAAV,KAA8BC,aAA9B,KAA0CE,WACvCJ,KAAOC,IAAV,KAA8BC,aAA9B,KAA0CG,WAarD,IAAMC,GAAU,SAACjJ,GAAW,IAAD,EACCqF,mBAAS,CAAC6D,OAAQ,IADnB,mBAClBzH,EADkB,KACX6D,EADW,KAKzB,OACE,6BACE,4BAAQ7E,QALQ,WAClB6E,GAAU7D,EAAMyH,OAAS,GAAKlJ,EAAMmJ,MAAM3B,UAIxC,gBACA,kCAAQxH,EAAMmJ,MAAM1H,EAAMyH,WAkC1BE,G,YACJ,WAAYpJ,GAAQ,IAAD,8BACjB,4CAAMA,KAORwG,SAAW,SAACX,GACV,EAAKhE,SAAS,CAACwH,OAAQxD,EAAEC,OAAO3E,SAPhC,EAAKK,MAAQ,CACX6H,OAAQ,GACRC,OAAQ,IAJO,E,iFAYE,IAAD,OAEdC,EAAa,GACjBC,MAFU,gGAGTC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACJA,EAAK5F,KAAK6F,KAAI,SAACC,GACXN,EAAWO,KAAKD,EAASP,OAAOS,SAASC,KACzC,EAAKnI,SAAS,CAACyH,OAAQC,UAG5BU,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,c,+BAI5B,OACE,6BACE,4CACA,2CACA,2BAAO5D,SAAUvG,KAAKuG,SAAUrF,MAAOlB,KAAKuB,MAAM6H,SAClD,uCACA,yBAAKjJ,GAAG,YACLH,KAAKuB,MAAM8H,OAAOM,KAAI,SAACS,EAAOtD,GAC7B,OACA,yBAAKuD,IAAKvD,EAAOwD,IAAKF,EAAO/J,MAAO,QAASC,OAAQ,QAASiK,IAAK,kB,GArC3D5J,IAAMC,WAmGX4J,G,YAlDb,WAAYzK,GAAQ,IAAD,8BACjB,4CAAMA,KACD2C,OAAS,EAAKA,OAAOhB,KAAZ,gBACd,EAAKiB,gBAAkB,EAAKA,gBAAgBjB,KAArB,gBACvB,EAAKkB,oBAAsB,EAAKA,oBAAoBlB,KAAzB,gBAC3B,EAAKH,MAAQ,CACXsB,UAAU,GANK,E,sEAWjBC,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,W,wCAIzDjD,KAAK4B,SAAS,CAACiB,UAAU,M,4CAIzB7C,KAAK4B,SAAS,CAACiB,UAAU,M,+BAMzB,OACE,yBAAKzC,MAAO,CAACE,OAAQ,OAAQ4C,SAAU,WAAY7C,MAAO,SACxD,yBAAKD,MAAO,CAACgD,UAAW,SAAUC,gBAAiB,aAAcC,cAAe,SAC9E,8BAAM,4BAAQ9C,QAASR,KAAK0C,QAAtB,QAA2C,2BAAOtC,MAAO,CAACmD,SAAU,OAAQC,WAAY,OAAQC,YAAa,SAAlE,eAA8F,4BAAQjD,QAASR,KAAK2C,iBAAtB,UAMjJ,kBAAC,EAAD,CAAiB1C,KAAMD,KAAKuB,MAAMsB,SAAUpC,SAAUT,KAAK4C,oBAAqBlC,cAAe,kBAAC,EAAD,CAC7FI,KCzJF,42DDyJcL,SAAUT,KAAK0D,iBAC3BrD,MAAM,SAASC,OAAO,QAAQC,MAAO,qBAGvC,kBAAC,GAAD,CAAS2I,MAhBD,CAAC,IAAI,IAAI,OAmBjB,kBAAC,GAAD,W,GA3CoBvI,IAAMC,WE3G5B+C,GAAchD,IAAMiD,gBAG1B,SAAS7C,GAAYhB,GACnB,OACE,yBAAKI,GAAG,mBAAoBa,UAAU,KAAKZ,MAAO,CAACiD,gBAAiB,eAClE,yBAAKrC,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,MAET,6BACA,yBAAKD,UAAU,aACb,4BAAQR,QAAST,EAAMS,SAAvB,UAEF,yBAAKQ,UAAU,YACb,2BAAIjB,EAAMmB,UAOpB,SAASC,GAAYpB,GACnB,IAAM+D,EAAO2G,qBAAW9G,IAExB,OACE,yBAAKxD,GAAG,mBAAoBa,UAAU,MACpC,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACdjB,EAAMkB,KAAK,uBAAGb,MAAO,CAAC2B,MAAO,MAAOC,YAAa,QAAtC,UAEZ,6BACA,yBAAKhB,UAAU,aACb,4BAAQR,QAASsD,EAAKC,QAAtB,UAEF,yBAAK/C,UAAU,YACb,2BAAI8C,EAAKtC,UAOnB,SAASJ,GAAOrB,GACd,IAAM+D,EAAO2G,qBAAW9G,IACxB,OACE,yBAAKxD,GAAG,aAAca,UAAU,MAC9B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,KAAK,uBAAGb,MAAO,CAAC2B,MAAO,MAAOC,YAAa,QAAtC,UAEd,6BACA,yBAAKhB,UAAU,aACb,4BAAQR,QAASsD,EAAKC,QAAtB,UAEF,yBAAK/C,UAAU,YACb,2BAAI8C,EAAKtC,U,IAObH,G,YACJ,WAAYtB,GAAQ,IAAD,8BACjB,4CAAMA,KACDwB,MAAQ,CACXC,MAAO,GAET,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAND,E,0EAUjB1B,KAAK4B,UAAS,SAACC,GACb,MAAO,CAACL,MAAOK,EAAKL,MAAQ,Q,oCAK9BM,WAAW9B,KAAK2B,WAAY,O,+BASpB,IAAD,OACP,OACE,kBAAC,GAAYkC,SAAb,MACG,SAACC,GACA,OAEE,oCACE,yBAAK3D,GAAG,aAAca,UAAU,MAC9B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZ,EAAKjB,MAAMkB,KAAK,uBAAGb,MAAO,CAAC2B,MAAO,MAAOC,YAAa,QAAtC,gBAEnB,6BACA,yBAAKhB,UAAU,aACb,4BAAQR,QAASsD,EAAKC,QAAtB,UAEF,yBAAK/C,UAAU,YACb,2BAAI8C,EAAKtC,UAIf,kBAAC,GAAD,CAAaP,KAAM,cAAeT,QAAS,EAAKiB,YAAaP,MAAO,EAAKK,MAAMC,QAC/E,kBAAC,GAAD,CAAaP,KAAM,wB,GAhDZN,IAAMC,WAyD3B,SAASoD,GAAQjE,GACf,OACE,yBAAKI,GAAG,cAAca,UAAU,OAC9B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZjB,EAAMkB,MAET,yBAAKD,UAAU,YAAf,mBAGA,yBAAKA,UAAU,YAAf,YAGA,yBAAKA,UAAU,YAAf,uBAGA,+B,IAOFM,G,YAEJ,WAAYvB,GAAQ,IAAD,8BACjB,4CAAMA,KACDwB,MAAQ,CACXC,MAAO,EACPuC,OAAQ,WACN,EAAKnC,UAAS,SAACC,GACb,MAAO,CAACL,MAAOK,EAAKL,MAAQ,QANjB,E,sEAkBT,IAAD,OACP,OACE,oCACE,kBAAC,GAAYyC,SAAb,CAAsB/C,MAAOlB,KAAKuB,OAChC,kBAAC,GAAYsC,SAAb,MACG,SAACC,GACA,OACE,oCACGoG,QAAQC,IAAI,EAAKO,SAClB,yBAAKvK,GAAG,aAAaa,UAAU,KAC7B,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZ,EAAKjB,MAAMkB,MAEd,yBAAKD,UAAU,YACb,uBAAGZ,MAAO,CAAC2B,MAAO,MAAOC,YAAa,QAAtC,0BAEF,6BACA,yBAAKhB,UAAU,aACb,4BAAQR,QAASsD,EAAKC,QAAtB,UAEF,yBAAK/C,UAAU,YACb,2BAAI8C,EAAKtC,UAIf,kBAAC,GAAD,CAASP,KAAM,YACf,kBAAC,GAAD,CAAQA,KAAM,WACd,kBAAC,GAAD,CAAQA,KAAM,WACd,kBAAC,gBAAD,CAAegB,KAAK,IAAIC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,MAC9I,kBAAC,gBAAD,CAAeP,KAAK,IAAIC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,MAC9I,kBAAC,gBAAD,CAAeP,KAAK,KAAKC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,MAC/I,kBAAC,gBAAD,CAAeP,KAAK,KAAKC,GAAG,KAAKC,YAAY,OAAOC,YAAY,QAAQC,YAAa,EAAGC,WAAW,gBAAgBC,SAAS,aAAaC,MAAM,gB,GApD5I7B,IAAMC,WAuGZ+J,G,YAvCb,WAAY5K,GAAQ,IAAD,8BACjB,4CAAMA,KACD2C,OAAS,EAAKA,OAAOhB,KAAZ,gBACd,EAAKiB,gBAAkB,EAAKA,gBAAgBjB,KAArB,gBACvB,EAAKkB,oBAAsB,EAAKA,oBAAoBlB,KAAzB,gBAC3B,EAAKH,MAAQ,CACXsB,UAAU,GANK,E,sEAWjBC,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,W,wCAIzDjD,KAAK4B,SAAS,CAACiB,UAAU,M,4CAIzB7C,KAAK4B,SAAS,CAACiB,UAAU,M,+BAIzB,OACE,yBAAKzC,MAAO,CAACE,OAAQ,OAAQ4C,SAAU,WAAY7C,MAAO,OAAQ8C,OAAQ,oBACxE,yBAAK/C,MAAO,CAACgD,UAAW,SAAUC,gBAAiB,aAAcC,cAAe,SAC9E,8BAAM,4BAAQ9C,QAASR,KAAK0C,QAAtB,QAA2C,2BAAOtC,MAAO,CAACmD,SAAU,OAAQC,WAAY,OAAQC,YAAa,SAAlE,mBAAkG,4BAAQjD,QAASR,KAAK2C,iBAAtB,UAErJ,kBAAC,GAAD,CAAQ1B,KAAM,WACd,kBAAC,EAAD,CAAiBhB,KAAMD,KAAKuB,MAAMsB,SAAUpC,SAAUT,KAAK4C,oBAAqBlC,cAAe,kBAAC,EAAD,CAC7FI,KCxPF,o0ODwPcL,SAAUT,KAAK0D,iBAC7BrD,MAAM,SAASC,OAAO,QAAQC,MAAO,wC,GAhCHI,IAAMC,WEhMjCgK,G,YApBb,WAAY7K,GAAQ,IAAD,8BACjB,4CAAMA,KACD2C,OAAS,EAAKA,OAAOhB,KAAZ,gBAFG,E,sEAMjBoB,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,W,+BAIzD,OACE,yBAAK7C,MAAO,CAACE,OAAQ,OAAQ4C,SAAU,WAAY7C,MAAO,SACxD,yBAAKD,MAAO,CAACgD,UAAW,SAAUC,gBAAiB,aAAcC,cAAe,SAC9E,8BAAM,4BAAQ9C,QAASR,KAAK0C,QAAtB,QAA2C,2BAAOtC,MAAO,CAACmD,SAAU,OAAQC,WAAY,OAAQC,YAAa,SAAlE,SAAwF,4BAAQjD,QAASR,KAAK2C,iBAAtB,e,GAd5HhC,IAAMC,WCiHdE,GApHP,6uGCYFqI,G,YACJ,WAAYpJ,GAAQ,IAAD,8BACjB,4CAAMA,KAQR8K,eAAiB,SAACjF,GAChB,EAAKhE,SAAS,CAACwH,OAAQxD,EAAEC,OAAO3E,SAVf,EAanB4J,YAAc,SAAClF,GACb,EAAKhE,SAAS,CAACmJ,SAAUnF,EAAEC,OAAO3E,SAdjB,EAiBnB8J,QAAU,WAER,IAAIjB,EAAG,gDAA4C,EAAKxI,MAAM6H,OAAvD,2DAAgH,EAAK7H,MAAMwJ,UAG9HzB,EAAa,GACjBC,MAAMQ,GACLP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACJA,EAAK5F,KAAK6F,KAAI,SAACC,GACXN,EAAWO,KAAKD,EAASP,OAAOS,SAASC,KACzC,EAAKnI,SAAS,CAACyH,OAAQC,UAG5BU,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,aA7B5B,EAAK5I,MAAQ,CACX6H,OAAQ,GACR2B,SAAU,EACV1B,OAAQ,IALO,E,sEAmCjB,OACE,6BACE,yBAAKlJ,GAAG,aACN,2CACA,2BAAOA,GAAG,cAAcoG,SAAUvG,KAAK6K,eAAgB3J,MAAOlB,KAAKuB,MAAM6H,SACzE,8CACA,2BAAOjJ,GAAG,gBAAgBoG,SAAUvG,KAAK8K,YAAa5J,MAAOlB,KAAKuB,MAAMwJ,WACxE,4BAAQ5K,GAAG,WAAWK,QAASR,KAAKgL,SAApC,kBAEF,yBAAK7K,GAAG,YACLH,KAAKuB,MAAM8H,OAAOM,KAAI,SAACS,EAAOtD,GAC7B,OACA,yBAAKuD,IAAKvD,EAAOwD,IAAKF,EAAO/J,MAAO,QAASC,OAAQ,QAASiK,IAAK,kB,GAhD3D5J,IAAMC,WAoGXqK,G,YA1Cb,WAAYlL,GAAQ,IAAD,8BACjB,4CAAMA,KACD2C,OAAS,EAAKA,OAAOhB,KAAZ,gBACd,EAAKiB,gBAAkB,EAAKA,gBAAgBjB,KAArB,gBACvB,EAAKkB,oBAAsB,EAAKA,oBAAoBlB,KAAzB,gBAC3B,EAAKH,MAAQ,CACXsB,UAAU,GANK,E,sEAWjBC,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,W,wCAIzDjD,KAAK4B,SAAS,CAACiB,UAAU,M,4CAIzB7C,KAAK4B,SAAS,CAACiB,UAAU,M,+BAKzB,OACE,yBAAKzC,MAAO,CAACE,OAAQ,OAAQ4C,SAAU,WAAY7C,MAAO,SACxD,yBAAKD,MAAO,CAACgD,UAAW,SAAUC,gBAAiB,aAAcC,cAAe,SAC9E,8BAAM,4BAAQ9C,QAASR,KAAK0C,QAAtB,QAA2C,2BAAOtC,MAAO,CAACmD,SAAU,OAAQC,WAAY,OAAQC,YAAa,SAAlE,eAA8F,4BAAQjD,QAASR,KAAK2C,iBAAtB,UAEjJ,kBAAC,EAAD,CAAiB1C,KAAMD,KAAKuB,MAAMsB,SAAUpC,SAAUT,KAAK4C,oBAAqBlC,cAAe,kBAAC,EAAD,CAC7FI,KAAMA,GAAML,SAAUT,KAAK0D,iBAC3BrD,MAAM,SAASC,OAAO,QAAQC,MAAO,sBAGvC,kBAAC,GAAD,W,GAnCqBI,IAAMC,WCepBsK,G,YArEb,WAAYnL,GAAQ,IAAD,8BACjB,4CAAMA,KACDS,QAAU,EAAKA,QAAQkB,KAAb,gBAFE,E,qEAKX0C,GACN,IAYM+G,EAZgB,CACpBC,QAAS3I,EACTiI,QAASxG,EACTmH,MAAO/F,EACPgG,MAAOxG,EACPyG,IAAK/E,EACLgF,UAAWhD,GACXiD,KAAMjB,GACNkB,MAAOT,GACPU,aAAchB,GACdiB,MAAOhB,IAE8BxG,GACvCtB,IAASC,OAAO,kBAACoI,EAAD,MAAqBnI,SAASC,eAAe,W,+BAGrD,IAAD,OACP,OACE,yBAAK9C,GAAG,iBACN,wBAAIC,MAAO,CAACoD,WAAY,SAAxB,kDACA,yBAAKrD,GAAG,oBACN,wBAAIA,GAAG,YACL,4BACE,4BAAQa,UAAU,SAASR,QAAS,kBAAM,EAAKA,QAAQ,aAAvD,YAEF,4BACE,4BAAQQ,UAAU,SAASR,QAAS,kBAAM,EAAKA,QAAQ,aAAvD,YAEF,4BACE,4BAAQQ,UAAU,SAASR,QAAS,kBAAM,EAAKA,QAAQ,WAAvD,UAEF,4BACE,4BAAQQ,UAAU,SAASZ,MAAO,CAACyL,UAAW,OAAQrL,QAAS,kBAAM,EAAKA,QAAQ,WAAlF,UAEF,4BACE,4BAAQQ,UAAU,SAASZ,MAAO,CAACyL,UAAW,OAAQrL,QAAS,kBAAM,EAAKA,QAAQ,kBAAlF,mBAGJ,wBAAIL,GAAG,YACL,4BACE,4BAAQa,UAAU,SAASR,QAAS,kBAAM,EAAKA,QAAQ,SAAvD,wBAEF,4BACE,4BAAQQ,UAAU,SAASR,QAAS,kBAAM,EAAKA,QAAQ,eAAvD,wBAEF,4BACE,4BAAQQ,UAAU,SAASZ,MAAO,CAACyL,UAAW,OAAQrL,QAAS,kBAAM,EAAKA,QAAQ,UAAlF,eAEF,4BACE,4BAAQQ,UAAU,SAASZ,MAAO,CAACyL,UAAW,OAAQrL,QAAS,kBAAM,EAAKA,QAAQ,WAAlF,gBAEF,4BACE,4BAAQQ,UAAU,SAASZ,MAAO,CAACyL,UAAW,OAAQrL,QAAS,kBAAM,EAAKA,QAAQ,WAAlF,a,GA3DaG,IAAMC,WCHbuH,QACW,cAA7B2D,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNnJ,IAASC,OAAO,kBAAC,GAAD,MAAkBC,SAASC,eAAe,SD6HpD,kBAAmBiJ,WACrBA,UAAUC,cAAcC,MAAM5C,MAAK,SAAA6C,GACjCA,EAAaC,iB","file":"static/js/main.250f2331.chunk.js","sourcesContent":["import React from 'react';\r\nimport './DialogContainer.css';\r\n\r\nclass DialogContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    // Render nothing if the \"show\" prop is false\r\n    if(!this.props.show) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div id='containerBackground'>       \r\n          <div id='containerContent' style={{width: this.props.width, height: this.props.height}}>\r\n            <div id='containerContentTitle'>\r\n              <span id='title'>{this.props.title}</span>\r\n              <span>  </span>\r\n              <div id='cancelX'> \r\n                <button onClick={this.props.onCancel}>X</button>\r\n              </div>\r\n            </div>\r\n            <div id='containerContentCustom'>\r\n              {this.props.dialogContent}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogContainer;\r\n","import React from 'react';\r\n\r\nfunction DisplayCode(props) {\r\n  return (\r\n    <pre>\r\n      <code>\r\n        <div>{props.code}</div>\r\n      </code>\r\n    </pre>\r\n  )\r\n}\r\n\r\nexport default DisplayCode;","\nimport React from 'react';\nimport './App.css';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeVanillaApp.js';\n\n\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node' className='G1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <div id='grandchild22Node' className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  return (\n    <div id='child1Node' className=\"C1\" >\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child2(props) {\n  return (  \n    <>\n      <div id='child2Node' className=\"C2\" >\n        <div className='content'>\n          <div className='titleRow'>\n            {props.name}\n          </div>\n          <br/>\n          <div className='buttonRow'>\n            <button onClick={props.onClick}>Click</button>\n          </div>\n          <div className='valueRow'>\n            <p>{props.value}</p>\n          </div>\n        </div>\n      </div>\n      <GrandChild1 name={'Grandchild1'} onClick={props.onClick} value={props.value}></GrandChild1>\n      <GrandChild2 name={'Grandchild2'} onClick={props.onClick} value={props.value}></GrandChild2>\n    </>\n  )  \n}\n\n\nclass Parent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n\n  render() {\n    return (\n      <>\n        <div id='parentNode' className='P' >\n          <div className='content'>\n            <div className='titleRow'>\n              {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state)</b>\n            </div>\n            <br/>\n            <div className='buttonRow'>\n              <button onClick={this.handleClick}>Click</button>\n            </div>\n            <div className='valueRow'>\n              <p>{this.state.count}</p>\n            </div>\n          </div>\n        </div>\n        <Child1 name={'Child1'} onClick={this.handleClick} value={this.state.count}></Child1>\n        <Child2 name={'Child2'} onClick={this.handleClick} value={this.state.count}></Child2>\n        <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      </>\n    )\n  }\n}\n\nclass ReactTreeVanillaApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.openDisplayCode = this.openDisplayCode.bind(this);\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\n    this.state = {\n      showCode: false\n    }\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  openDisplayCode() {\n    this.setState({showCode: true});\n  }\n\n  onCancelDisplayCode() {\n    this.setState({showCode: false});\n  }\n\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingBottom: '15px'}}>\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Vanilla</label><button onClick={this.openDisplayCode}>Code</button></span>\n        </div>\n        <Parent className='parent' name={'Parent'}></Parent>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n        width='1000px' height='700px' title={'ReactTreeVanillaApp.js'}></DialogContainer>\n      </div>\n    )\n  }\n}\n\nexport default ReactTreeVanillaApp;\n","let code = `\nimport React from 'react';\nimport './App.css';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeVanillaApp.js';\n\n\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node' className='G1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <div id='grandchild22Node' className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  return (\n    <div id='child1Node' className=\"C1\" >\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child2(props) {\n  return (  \n    <>\n      <div id='child2Node' className=\"C2\" >\n        <div className='content'>\n          <div className='titleRow'>\n            {props.name}\n          </div>\n          <br/>\n          <div className='buttonRow'>\n            <button onClick={props.onClick}>Click</button>\n          </div>\n          <div className='valueRow'>\n            <p>{props.value}</p>\n          </div>\n        </div>\n      </div>\n      <GrandChild1 name={'Grandchild1'} onClick={props.onClick} value={props.value}></GrandChild1>\n      <GrandChild2 name={'Grandchild2'} onClick={props.onClick} value={props.value}></GrandChild2>\n    </>\n  )  \n}\n\n\nclass Parent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n\n  render() {\n    return (\n      <>\n        <div id='parentNode' className='P' >\n          <div className='content'>\n            <div className='titleRow'>\n              {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state)</b>\n            </div>\n            <br/>\n            <div className='buttonRow'>\n              <button onClick={this.handleClick}>Click</button>\n            </div>\n            <div className='valueRow'>\n              <p>{this.state.count}</p>\n            </div>\n          </div>\n        </div>\n        <Child1 name={'Child1'} onClick={this.handleClick} value={this.state.count}></Child1>\n        <Child2 name={'Child2'} onClick={this.handleClick} value={this.state.count}></Child2>\n        <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      </>\n    )\n  }\n}\n\nclass ReactTreeVanillaApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <span style={{marginLeft: '50px'}}><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '200px'}}>Vanilla</label></span>\n        <Parent name={'Parent'}></Parent>\n        {/* <StyledTreeExample></StyledTreeExample> */}\n      </div>\n    )\n  }\n}\n\n\n\nexport default ReactTreeVanillaApp;\n`\nexport default code;","\nimport React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeContextApp.js';\n\n\nconst userContext = React.createContext();\n\n//does NOT use context\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node'  className='G1' style={{backgroundColor: 'lightgreen'}}>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <userContext.Consumer>\n      {(data) => {\n        return (\n          <div id='grandchild22Node'  className='G2'>\n            <div className='content'>\n              <div className='titleRow'>\n              {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n              </div>\n              <br/>\n              <div className='buttonRow'>\n                <button onClick={data.update}>Click</button>\n              </div>\n              <div className='valueRow'>\n                <p>{data.count}</p>\n              </div>\n            </div>\n          </div>\n        )\n      }}\n    </userContext.Consumer>\n  )\n}\n\nfunction Child1(props) {\n  return (\n    <userContext.Consumer>\n      {(data) => {\n        return (\n          <div id='child1Node'  className='C1'>\n            <div className='content'>\n              <div className='titleRow'>\n                {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n              </div>\n              <br/>\n              <div className='buttonRow'>\n                <button onClick={data.update}>Click</button>\n              </div>\n              <div className='valueRow'>\n                <p>{data.count}</p>\n              </div>\n            </div>\n          </div>\n        )\n      }}\n    </userContext.Consumer>\n  )\n}\n\nclass Child2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n\n  render() {\n    return (  \n      <userContext.Consumer>\n        {(data) => {\n          return (\n            <>\n              <div id='child2Node'  className='C2'>\n                <div className='content'>\n                  <div className='titleRow'>\n                    {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state/ctx)</b>\n                  </div>\n                  <br/>\n                  <div className='buttonRow'>\n                    <button onClick={data.update}>Click</button>\n                  </div>\n                  <div className='valueRow'>\n                    <p>{data.count}</p>\n                  </div>\n                </div>\n              </div>\n              <GrandChild1 name={'Grandchild1'} onClick={this.handleClick} value={this.state.count}></GrandChild1>\n              <GrandChild2 name={'Grandchild2'}></GrandChild2>\n            </>  \n          )\n        }}\n      </userContext.Consumer>\n    )  \n  }\n}\n\nfunction Context(props) {\n  return (\n    <div id='contextNode' className='CON'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <div className='titleRow'>\n          createContext()\n        </div>\n        <div className='titleRow'>\n          Provider/Consumer\n        </div>\n        <br/>\n      </div>\n    </div>\n  )\n}\n\nclass Parent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      update: () => {\n        this.setState((prev) => {\n          return {count: prev.count + 1}; \n        })\n      }\n    }\n  }\n\n//TODO - why is 'this' lost below? \n  // myFunction() {\n  //   this.setState((prev) => {\n  //     return {count: prev.count + 1}; \n  //   });\n  // }\n\n  // handleClick() {\n  //   setTimeout(this.myFunction, 300)\n  // }\n\n\n  render() {\n    return (\n      <>\n        <userContext.Provider value={this.state}>\n          <userContext.Consumer>\n            {(data) => {\n              return (\n                <>\n                  <div id='parentNode' className='P'>\n                    <div className='content'>\n                      <div className='titleRow'>\n                        {this.props.name}\n                      </div>\n                      <div className='titleRow'>\n                        <b style={{color: 'red', paddingLeft: '5px'}}>(state(provider)/ctx)</b>\n                      </div>\n                      <br/>\n                      <div className='buttonRow'>\n                        <button onClick={data.update}>Click</button>\n                      </div>\n                      <div className='valueRow'>\n                        <p>{data.count}</p>\n                      </div>\n                    </div>\n                  </div>\n                  <Context name={'context'}></Context>\n                  <Child1 name={'Child1'}></Child1>\n                  <Child2 name={'Child2'}></Child2>\n                  <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                </>\n              )\n            }}\n          </userContext.Consumer>\n        </userContext.Provider>   \n      </>\n    )\n  }\n}\n\nclass ReactTreeContextApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.openDisplayCode = this.openDisplayCode.bind(this);\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\n    this.state = {\n      showCode: false\n    }\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  openDisplayCode() {\n    this.setState({showCode: true});\n  }\n\n  onCancelDisplayCode() {\n    this.setState({showCode: false});\n  }\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingBottom: '15px'}}>\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Context</label><button onClick={this.openDisplayCode}>Code</button></span>\n        </div>\n        <Parent name={'Parent'}></Parent>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n        width='1000px' height='700px' title={'ReactTreeContextApp.js'}></DialogContainer>\n\n      </div>\n    )\n  }\n}\n\nexport default ReactTreeContextApp;\n","let code = `\nimport React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeContextApp.js';\n\n\nconst userContext = React.createContext();\n\n//does NOT use context\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node'  className='G1' style={{backgroundColor: 'lightgreen'}}>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <userContext.Consumer>\n      {(data) => {\n        return (\n          <div id='grandchild22Node'  className='G2'>\n            <div className='content'>\n              <div className='titleRow'>\n              {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n              </div>\n              <br/>\n              <div className='buttonRow'>\n                <button onClick={data.update}>Click</button>\n              </div>\n              <div className='valueRow'>\n                <p>{data.count}</p>\n              </div>\n            </div>\n          </div>\n        )\n      }}\n    </userContext.Consumer>\n  )\n}\n\n\nfunction Child1(props) {\n  return (\n    <userContext.Consumer>\n      {(data) => {\n        return (\n          <div id='child1Node'  className='C1'>\n            <div className='content'>\n              <div className='titleRow'>\n                {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n              </div>\n              <br/>\n              <div className='buttonRow'>\n                <button onClick={data.update}>Click</button>\n              </div>\n              <div className='valueRow'>\n                <p>{data.count}</p>\n              </div>\n            </div>\n          </div>\n        )\n      }}\n    </userContext.Consumer>\n  )\n}\n\nclass Child2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n\n  render() {\n    return (  \n      <userContext.Consumer>\n        {(data) => {\n          return (\n            <>\n              <div id='child2Node'  className='C2'>\n                <div className='content'>\n                  <div className='titleRow'>\n                    {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state/ctx)</b>\n                  </div>\n                  <br/>\n                  <div className='buttonRow'>\n                    <button onClick={data.update}>Click</button>\n                  </div>\n                  <div className='valueRow'>\n                    <p>{data.count}</p>\n                  </div>\n                </div>\n              </div>\n              <GrandChild1 name={'Grandchild1'} onClick={this.handleClick} value={this.state.count}></GrandChild1>\n              <GrandChild2 name={'Grandchild2'}></GrandChild2>\n            </>  \n          )\n        }}\n      </userContext.Consumer>\n    )  \n  }\n}\n\nfunction Context(props) {\n\n  return (\n    <div id='contextNode' className='CON'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <div className='titleRow'>\n          createContext()\n        </div>\n        <div className='titleRow'>\n          Provider/Consumer\n        </div>\n        <br/>\n      </div>\n    </div>\n  )\n}\n\n\nclass Parent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      update: () => {\n        this.setState((prev) => {\n          return {count: prev.count + 1}; \n        })\n      }\n    }\n  }\n\n//TODO - why is 'this' lost below? \n  // myFunction() {\n  //   this.setState((prev) => {\n  //     return {count: prev.count + 1}; \n  //   });\n  // }\n\n  // handleClick() {\n  //   setTimeout(this.myFunction, 300)\n  // }\n\n\n  render() {\n    return (\n      <>\n        <userContext.Provider value={this.state}>\n          <userContext.Consumer>\n            {(data) => {\n              return (\n                <>\n                  <div id='parentNode' className='P'>\n                    <div className='content'>\n                      <div className='titleRow'>\n                        {this.props.name}\n                      </div>\n                      <div className='titleRow'>\n                        <b style={{color: 'red', paddingLeft: '5px'}}>(state(provider)/ctx)</b>\n                      </div>\n                      <br/>\n                      <div className='buttonRow'>\n                        <button onClick={data.update}>Click</button>\n                      </div>\n                      <div className='valueRow'>\n                        <p>{data.count}</p>\n                      </div>\n                    </div>\n                  </div>\n                  <Context name={'context'}></Context>\n                  <Child1 name={'Child1'}></Child1>\n                  <Child2 name={'Child2'}></Child2>\n                  <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                </>\n              )\n            }}\n          </userContext.Consumer>\n        </userContext.Provider>   \n      </>\n    )\n  }\n}\n\nclass ReactTreeContextApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.openDisplayCode = this.openDisplayCode.bind(this);\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\n    this.state = {\n      showCode: false\n    }\n\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  openDisplayCode() {\n    this.setState({showCode: true});\n  }\n\n  onCancelDisplayCode() {\n    this.setState({showCode: false});\n  }\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <span style={{marginLeft: '50px'}}><button onClick={this.goBack}>Back</button><button onClick={this.openDisplayCode}>Code</button><label style={{fontSize: '24pt', marginLeft: '200px'}}>Context</label></span>\n        <Parent name={'Parent'}></Parent>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n        width='1000px' height='700px' title={'ReactTreeVanillaApp.js'}></DialogContainer>\n\n      </div>\n    )\n  }\n}\n\n\n\nexport default ReactTreeContextApp;\n`\nexport default code;","export const incrementAction = (name) => ({\r\n  type: \"INCREMENT\",\r\n  name: name\r\n})\r\n\r\nexport const decrementAction = () => ({\r\n  type: \"DECREMENT\"\r\n})\r\n","const reducer = (state = {count:0}, action) => {\r\n  let newState = '';\r\n  switch (action.type) {\r\n    case 'INCREMENT':\r\n      newState = Object.assign({}, state);\r\n      newState.count++;\r\n      return newState;\r\n    case 'DECREMENT':\r\n      newState = Object.assign({}, state);\r\n      newState.count--;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","\nimport React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport { connect } from 'react-redux';\nimport { incrementAction } from './actions';\nimport { decrementAction } from './actions';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware} from 'redux';\nimport reducer from './reducers.js';\n\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeReduxApp.js';\n\n\nconst store = createStore(reducer);\n\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node' className='G1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.increment}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <div id='grandchild22Node' className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.increment}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  return (\n    <div id='child1Node' className='C1'> \n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.increment}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nclass Child2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n  \n  render() {\n    return (  \n      <>\n        <div id='child2Node' className='C2' style={{backgroundColor: 'lightgreen'}}>\n          <div className='content'>\n            <div className='titleRow'>\n              {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state)</b>\n            </div>\n            <br/>\n            <div className='buttonRow'>\n              <button onClick={this.handleClick}>Click</button>\n            </div>\n            <div className='valueRow'>\n              <p>{this.state.count}</p>\n            </div>\n          </div>\n        </div>\n        <GrandChild1 name={'Grandchild1'}></GrandChild1>\n        <GrandChild2 name={'Grandchild2'}></GrandChild2>\n      </>\n    )  \n  }\n}\n\nfunction Redux(props) {\n\n  return (\n    <div id='reduxNode' className='RED'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <div className='titleRow'>\n          actions/reducers\n        </div>\n        <div className='titleRow'>\n          connect\n        </div>\n        <div className='titleRow'>\n          mapStateToProps\n        </div>\n        <div className='titleRow'>\n          mapDispatchToProps\n        </div>\n        <br/>\n      </div>\n    </div>\n  )\n}\n\nfunction Parent(props) {\n  return (\n    <>\n      <div id='parentNode' className='P'>\n        <div className='content'>\n          <div className='titleRow'>\n            {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n          </div>\n          <br/>\n          <div className='buttonRow'>\n            <button onClick={props.increment}>Click</button>\n          </div>\n          <div className='valueRow'>\n            <p>{props.count}</p>\n          </div>\n        </div>\n      </div>\n      <Redux name={'redux'}></Redux>\n      <Child1 name={'Child1'}></Child1>\n      <Child2 name={'Child2'}></Child2>\n      {/* <Child1 name={'Child1'} onClick={this.handleClick} value={this.state.count}></Child1>\n      <Child2 name={'Child2'} onClick={this.handleClick} value={this.state.count}></Child2> */}\n      <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n\n    </>\n  )\n}\n\nclass ReactTreeReduxApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.openDisplayCode = this.openDisplayCode.bind(this);\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\n    this.state = {\n      showCode: false\n    }\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  openDisplayCode() {\n    this.setState({showCode: true});\n  }\n\n  onCancelDisplayCode() {\n    this.setState({showCode: false});\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingBottom: '15px'}}>\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Redux</label><button onClick={this.openDisplayCode}>Code</button></span>\n        </div>\n\n        <Parent name={'Parent'}></Parent>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n        width='1000px' height='700px' title={'ReactTreeReduxApp.js'}></DialogContainer>\n        </div>\n      </Provider>\n    )\n  }\n}\n\nconst mapStateToProps_Parent = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_Parent = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nParent = connect(\n  mapStateToProps_Parent,\n  mapDispatchToProps_Parent\n)(Parent)\n\n\nconst mapStateToProps_Child1 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_Child1 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nChild1 = connect(\n  mapStateToProps_Child1,\n  mapDispatchToProps_Child1\n)(Child1)\n\nconst mapStateToProps_Child2 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_Child2 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\n// Child2 = connect(\n//   mapStateToProps_Child2,\n//   mapDispatchToProps_Child2\n// )(Child2)\n\n\nconst mapStateToProps_GrandChild1 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_GrandChild1 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nGrandChild1 = connect(\n  mapStateToProps_GrandChild1,\n  mapDispatchToProps_GrandChild1\n)(GrandChild1)\n\nconst mapStateToProps_GrandChild2 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_GrandChild2 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nGrandChild2 = connect(\n  mapStateToProps_GrandChild2,\n  mapDispatchToProps_GrandChild2\n)(GrandChild2)\n\n\nexport default ReactTreeReduxApp;\n","let code = `\nimport React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport { connect } from 'react-redux';\nimport { incrementAction } from './actions';\nimport { decrementAction } from './actions';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware} from 'redux';\nimport reducer from './reducers.js';\n\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeReduxApp.js';\n\n\nconst store = createStore(reducer);\n\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node' className='G1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.increment}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <div id='grandchild22Node' className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.increment}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  return (\n    <div id='child1Node' className='C1'> \n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.increment}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nclass Child2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n  \n  render() {\n    return (  \n      <>\n        <div id='child2Node' className='C2' style={{backgroundColor: 'lightgreen'}}>\n          <div className='content'>\n            <div className='titleRow'>\n              {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state)</b>\n            </div>\n            <br/>\n            <div className='buttonRow'>\n              <button onClick={this.handleClick}>Click</button>\n            </div>\n            <div className='valueRow'>\n              <p>{this.state.count}</p>\n            </div>\n          </div>\n        </div>\n        <GrandChild1 name={'Grandchild1'}></GrandChild1>\n        <GrandChild2 name={'Grandchild2'}></GrandChild2>\n      </>\n    )  \n  }\n}\n\nfunction Redux(props) {\n\n  return (\n    <div id='reduxNode' className='RED'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <div className='titleRow'>\n          actions/reducers\n        </div>\n        <div className='titleRow'>\n          connect\n        </div>\n        <div className='titleRow'>\n          mapStateToProps\n        </div>\n        <div className='titleRow'>\n          mapDispatchToProps\n        </div>\n        <br/>\n      </div>\n    </div>\n  )\n}\n\nfunction Parent(props) {\n  return (\n    <>\n      <div id='parentNode' className='P'>\n        <div className='content'>\n          <div className='titleRow'>\n            {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n          </div>\n          <br/>\n          <div className='buttonRow'>\n            <button onClick={props.increment}>Click</button>\n          </div>\n          <div className='valueRow'>\n            <p>{props.count}</p>\n          </div>\n        </div>\n      </div>\n      <Redux name={'redux'}></Redux>\n      <Child1 name={'Child1'}></Child1>\n      <Child2 name={'Child2'}></Child2>\n      {/* <Child1 name={'Child1'} onClick={this.handleClick} value={this.state.count}></Child1>\n      <Child2 name={'Child2'} onClick={this.handleClick} value={this.state.count}></Child2> */}\n      <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n\n    </>\n  )\n}\n\nclass ReactTreeReduxApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n          <span style={{marginLeft: '50px'}}><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '200px'}}>Redux</label></span>\n          <Parent name={'Parent'}></Parent>\n        </div>\n      </Provider>\n    )\n  }\n}\n\nconst mapStateToProps_Parent = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_Parent = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nParent = connect(\n  mapStateToProps_Parent,\n  mapDispatchToProps_Parent\n)(Parent)\n\n\nconst mapStateToProps_Child1 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_Child1 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nChild1 = connect(\n  mapStateToProps_Child1,\n  mapDispatchToProps_Child1\n)(Child1)\n\nconst mapStateToProps_Child2 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_Child2 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\n// Child2 = connect(\n//   mapStateToProps_Child2,\n//   mapDispatchToProps_Child2\n// )(Child2)\n\n\nconst mapStateToProps_GrandChild1 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_GrandChild1 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nGrandChild1 = connect(\n  mapStateToProps_GrandChild1,\n  mapDispatchToProps_GrandChild1\n)(GrandChild1)\n\nconst mapStateToProps_GrandChild2 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_GrandChild2 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nGrandChild2 = connect(\n  mapStateToProps_GrandChild2,\n  mapDispatchToProps_GrandChild2\n)(GrandChild2)\n\n\nexport default ReactTreeReduxApp;\n`\nexport default code;","import React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport {useState,  useEffect, useContext, createContext} from 'react';\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeHooksApp.js';\n\n// HOOKS \n// using useState hook to hold state in 'Parent' and changed all class components to function components\n// prop drilling is still used\n\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node' className='G1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <div id='grandchild22Node' className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n        <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  return (\n    <div id='child1Node' className='C1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child2(props) {\n  return (  \n    <>\n      <div id='child2Node' className='C2'>\n        <div className='content'>\n          <div className='titleRow'>\n            {props.name}\n          </div>\n          <br/>\n          <div className='buttonRow'>\n            <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n          </div>\n          <div className='valueRow'>\n            <p>{props.count}</p>\n          </div>\n        </div>\n      </div>\n      <GrandChild1 name={'Grandchild1'} incrementCount={props.incrementCount} count={props.count}></GrandChild1>\n      <GrandChild2 name={'Grandchild2'} incrementCount={props.incrementCount} count={props.count}></GrandChild2>\n    </>\n  )  \n}\n\nfunction Parent(props) {\n  const [count, setCount] = useState(0);\n  return (\n      <>\n        <div id='parentNode' className='P'>\n          <div className='content'>\n            <div className='titleRow'>\n              {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(useState)</b>\n            </div>\n            <br/>\n            <div className='buttonRow'>\n              <button onClick={() => setCount(count + 1)}>Click</button>\n            </div>\n            <div className='valueRow'>\n              <p>{count}</p>\n            </div>\n          </div>\n        </div>\n        <Child1 name={'Child1'} incrementCount={setCount} count={count}></Child1>\n        <Child2 name={'Child2'} incrementCount={setCount} count={count}></Child2>\n        <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      </>\n  )\n}\n\nclass ReactTreeHooksApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.openDisplayCode = this.openDisplayCode.bind(this);\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\n    this.state = {\n      showCode: false\n    }\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  openDisplayCode() {\n    this.setState({showCode: true});\n  }\n\n  onCancelDisplayCode() {\n    this.setState({showCode: false});\n  }\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingBottom: '15px'}}>\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Hooks</label><button onClick={this.openDisplayCode}>Code</button></span>\n        </div>\n        <Parent name={'Parent'}></Parent>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n        width='1000px' height='700px' title={'ReactTreeHooksApp.js'}></DialogContainer>\n      </div>\n    )\n  }\n}\n\nexport default ReactTreeHooksApp;\n\n","let code = `\nimport React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport {useState,  useEffect, useContext, createContext} from 'react';\n\n// HOOKS \n// using useState hook to hold state in 'Parent' and changed all class components to function components\n// prop drilling is still used\n\n//TODO above:\n// add context or useContext hook?   \n\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node' className='G1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <div id='grandchild22Node' className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n        <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  return (\n    <div id='child1Node' className='C1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child2(props) {\n  return (  \n    <>\n      <div id='child2Node' className='C2'>\n        <div className='content'>\n          <div className='titleRow'>\n            {props.name}\n          </div>\n          <br/>\n          <div className='buttonRow'>\n            <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n          </div>\n          <div className='valueRow'>\n            <p>{props.count}</p>\n          </div>\n        </div>\n      </div>\n      <GrandChild1 name={'Grandchild1'} incrementCount={props.incrementCount} count={props.count}></GrandChild1>\n      <GrandChild2 name={'Grandchild2'} incrementCount={props.incrementCount} count={props.count}></GrandChild2>\n    </>\n  )  \n}\n\nfunction Parent(props) {\n  const [count, setCount] = useState(0);\n  return (\n      <>\n        <div id='parentNode' className='P'>\n          <div className='content'>\n            <div className='titleRow'>\n              {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(useState)</b>\n            </div>\n            <br/>\n            <div className='buttonRow'>\n              <button onClick={() => setCount(count + 1)}>Click</button>\n            </div>\n            <div className='valueRow'>\n              <p>{count}</p>\n            </div>\n          </div>\n        </div>\n        <Child1 name={'Child1'} incrementCount={setCount} count={count}></Child1>\n        <Child2 name={'Child2'} incrementCount={setCount} count={count}></Child2>\n        <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      </>\n  )\n}\n\nclass ReactTreeHooksApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <span style={{marginLeft: '50px'}}><button  onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '200px'}}>Hooks</label></span>\n        <Parent name={'Parent'}></Parent>\n      </div>\n    )\n  }\n}\n\nexport default ReactTreeHooksApp;\n`\nexport default code;\n","import React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js'\r\nimport code from './code-HigherOrderFunctionApp.js';\r\n\r\nconst memoize = (originalFunction) => {\r\n  const cache = {};\r\n\r\n  return function(num) {\r\n    if (cache[num] !== undefined) {\r\n      return cache[num] + ' [cache]';\r\n    }\r\n    else {\r\n      const output = originalFunction(num);\r\n      cache[num] = output;\r\n      return output;\r\n    }\r\n  }\r\n}\r\n\r\nclass Memoize extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: 0,\r\n      input: 0\r\n    }\r\n    this.theFunction = 0;// = memoize(props.func);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.theFunction = memoize(this.props.func);\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState({result: this.theFunction(this.state.input)})\r\n  }\r\n\r\n  onInputChange = (e) => {\r\n    this.setState({input: e.target.value})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h3>Memoize</h3>\r\n        <div style={{marginBottom: '10px'}}>\r\n          <label>Function: </label>\r\n          <label>{this.props.func.toString()}</label>\r\n        </div>\r\n        <label>Input value (num): </label>\r\n        <input style={{marginRight: '10px'}} onChange={this.onInputChange} value={this.state.input}></input>\r\n        <button style={{marginRight: '10px'}} onClick={this.handleClick}>Calculate</button>\r\n        <label>Result: </label>\r\n        <span>{this.state.result}</span>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nclass HigherOrderFunctionApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%', marginLeft: '20px'}}>\r\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>HigherOrderFunction</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <Memoize func={(num) => num * 3}></Memoize>  \r\n\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'HigherOrderFunctionApp.js'}>\r\n        </DialogContainer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HigherOrderFunctionApp;\r\n\r\n","let code = `\r\n\r\nimport React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nconst memoize = (originalFunction) => {\r\n  const cache = {};\r\n\r\n  return function(num) {\r\n    if (cache[num] !== undefined) {\r\n      return cache[num] + ' [cache]';\r\n    }\r\n    else {\r\n      const output = originalFunction(num);\r\n      cache[num] = output;\r\n      return output;\r\n    }\r\n  }\r\n}\r\n\r\nclass Memioze extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: 0,\r\n      input: 0\r\n    }\r\n    this.theFunction = 0;// = memoize(props.func);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.theFunction = memoize(this.props.func);\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState({result: this.theFunction(this.state.input)})\r\n  }\r\n\r\n  onInputChange = (e) => {\r\n    this.setState({input: e.target.value})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h3>Memioze</h3>\r\n        <div style={{marginBottom: '10px'}}>\r\n          <label>Function: </label>\r\n          <label>{this.props.func.toString()}</label>\r\n        </div>\r\n        <label>Input value (num): </label>\r\n        <input style={{marginRight: '10px'}} onChange={this.onInputChange} value={this.state.input}></input>\r\n        <button style={{marginRight: '10px'}} onClick={this.handleClick}>Calculate</button>\r\n        <label>Result: </label>\r\n        <span>{this.state.result}</span>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass HigherOrderFunctionApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n    let array = ['a','b','c'];\r\n\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%', marginLeft: '20px'}}>\r\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Playground!</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <Memioze func={(num) => num * 3}></Memioze>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HigherOrderFunctionApp;\r\n`\r\nexport default code;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js'\r\nimport code from './code-JavaScriptExercises.js';\r\n\r\n\r\n\r\nfunction RemoveDuplicatesFromArray(props) {\r\n  let result = '';\r\n  result = [...new Set(props.arr)]; //method #1\r\n  result = props.arr.filter((item, index) => {return props.arr.indexOf(item) === index}); //method #2\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>1. Remove Duplicates From Array ([{props.arr.toString()}]) </p>\r\n      <p className='details'>Method #1: [...new Set(arr)]</p>\r\n      <p className='details'>Method #2: arr.filter((item, index) => arr.indexOf(item) === index)</p>\r\n      <p className='details result'>Result: [{result.toString()}]</p>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nfunction ReplaceValueInArray(props) {\r\n  let originalArr = [...props.arr];\r\n  let index = props.arr.indexOf(props.from);\r\n  props.arr[index] = props.to;\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>2. Replace Value In Array ([{originalArr.toString()}], {props.from}, {props.to}) </p>\r\n      <p className='details'>arr[arr.indexOf('banana')] = 'turnip'</p>\r\n      <p className='details result'>Result: [{props.arr.toString()}]</p>\r\n    </>\r\n  )\r\n} \r\n\r\nfunction MapArrayWithoutMap() {\r\n  var friends = [\r\n    { name: 'John', age: 22 },\r\n    { name: 'Peter', age: 23 },\r\n    { name: 'Mark', age: 24 },\r\n    { name: 'Maria', age: 22 },\r\n    { name: 'Monica', age: 21 },\r\n    { name: 'Martha', age: 19 },\r\n  ]\r\n  let originalArr = Array.from(friends, (item) => {\r\n    return ('{ name: ' + item.name + ', ' + 'age: ' + item.age + '}')\r\n  })\r\n  let result = Array.from(friends, ({name}) => name);\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>3. Map Array Without Map ([{originalArr.toString()}])</p>\r\n      <p className='details'>Array.from(friends, (name) => name)</p>\r\n      <p className='details result'>Result: [{result.toString()}]</p>\r\n    </>\r\n  )\r\n} \r\n\r\nfunction EmptyArray(props) {\r\n  let originalArr = [...props.arr];\r\n  props.arr.length = 0;\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>4. Empty Array ([{originalArr.toString()}])</p>\r\n      <p className='details'>Just set length to 0 </p>\r\n      <p className='details result'>Result: [{props.arr}]</p>\r\n    </>\r\n  )\r\n} \r\n\r\nfunction ConvertArrayToObject(props) {\r\n\r\n  let result = {...props.arr};\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>5. Convert Array To Object ([{props.arr.toString()}])</p>\r\n      <p className='details'>...props.arr</p>\r\n      <p className='details result'>Result: {Object.values(result).toString()}</p>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nfunction FillArrayWithData() {\r\n  let arr = new Array(10).fill('7');\r\n  \r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>6. Fill Array With Data</p>\r\n      <p className='details'>new Array(10).fill('7')</p>\r\n      <p className='details result'>Result: {arr.toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction MergeArrays(props) {\r\n  //Method #1\r\n//  let mergedArr = props.arr1.concat(props.arr2);\r\n  //Method #2\r\n  let mergedArr = [...props.arr1, ...props.arr2];\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>7. Merge Arrays ([{props.arr1.toString()}], [{props.arr2.toString()}])</p>\r\n      <p className='details'>Method #1: arr1.concat(arr2)</p>\r\n      <p className='details'>Method #2: newArr = [...arr1, ...arr2]</p>\r\n      <p className='details result'>Result: [{mergedArr.toString()}]</p>\r\n    </>\r\n    )\r\n}\r\n\r\nfunction IntersectionOfTwoArrays(props) {\r\n  let result = props.arr1.filter((x) => {\r\n    return props.arr2.indexOf(x) !== -1;\r\n  })\r\n\r\n  return (\r\n    <>\r\n        <p id='exerciseDescription'>8. Intersection Of Two Arrays ([{props.arr1.toString()}],[{props.arr2.toString()}])</p>\r\n        <p className='details result'>Result: [{result.toString()}]</p>\r\n    </>\r\n    )\r\n}\r\n\r\nfunction RemoveFalsyValuesFromArray(props) {\r\n  return (\r\n    <div>\r\n      <p id='exerciseDescription'>9. Remove Falsy Values From Array ([{props.arr.toString()}])</p>\r\n      <p className='details'>arr.filter(Boolean)</p>\r\n      <p className='details result'>Result: [{props.arr.filter(Boolean).toString()}]</p>\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n\r\nfunction GetRandomValueFromArray () {\r\n  return (\r\n    <div id='exerciseDescription'>10. Get Random Value From Array</div>\r\n  )\r\n}\r\n\r\nfunction ReverseArray() {\r\n  return (\r\n    <div id='exerciseDescription'>11. Reverse Array</div>\r\n  )\r\n}\r\n\r\nfunction LastIndexOf() {\r\n  return (\r\n    <div id='exerciseDescription'>12. Last Index Of</div>\r\n  )\r\n}\r\n\r\nfunction SumAllValuesInArray() {\r\n  return (\r\n    <div id='exerciseDescription'>13. Sum All Values In Array</div>\r\n  )\r\n}\r\n\r\n\r\nclass JavaScriptExercises extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='mainContainer'>\r\n      {/* <div style={{height: '100%', position: 'absolute', width: '100%', marginLeft: '20px', backgroundColor: '#333333', color: 'white'}}> */}\r\n        <div id='exercisesTitleDiv'>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>JavaScriptExercises</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n\r\n        <div id='exercisesMainDiv'>\r\n          <div className='exerciseDiv'>\r\n            <RemoveDuplicatesFromArray arr={[2,3,1,4,3,6,2,9]}></RemoveDuplicatesFromArray>\r\n          </div>  \r\n\r\n          <div className='exerciseDiv'>\r\n            <ReplaceValueInArray arr={['apple', 'orange', 'banana', 'peach' ]} from={'banana'} to={'turnip'}></ReplaceValueInArray>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <MapArrayWithoutMap></MapArrayWithoutMap>\r\n          </div>\r\n          <div className='exerciseDiv'>\r\n            <EmptyArray arr={[1,2,3,4]}></EmptyArray>\r\n          </div>\r\n          <div className='exerciseDiv'>\r\n            <ConvertArrayToObject arr={[1,2,3,4]}></ConvertArrayToObject>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <FillArrayWithData></FillArrayWithData>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <MergeArrays arr1={[1,2,3,4]} arr2={[5,6,7,8]}></MergeArrays>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <IntersectionOfTwoArrays arr1={['a','b','c','d']} arr2={['d','e','f','g','b']}></IntersectionOfTwoArrays>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <RemoveFalsyValuesFromArray arr={[0, 'blue', '', NaN, 9, true, undefined, 'white', false]}></RemoveFalsyValuesFromArray>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <GetRandomValueFromArray></GetRandomValueFromArray>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <ReverseArray></ReverseArray>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <LastIndexOf></LastIndexOf>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <SumAllValuesInArray></SumAllValuesInArray>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'JavaScriptExercises.js'}>\r\n        </DialogContainer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default JavaScriptExercises;","let code = `\r\n\r\nimport React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js'\r\nimport code from './code-JavaScriptExercises.js';\r\n\r\n\r\n\r\nclass JavaScriptExercises extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%', marginLeft: '20px'}}>\r\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>JavaScriptExercises</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'HigherOrderFunctionApp.js'}>\r\n        </DialogContainer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default JavaScriptExercises;\r\n`\r\nexport default code;\r\n\r\n","import React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport { bounce, shake, hinge } from 'react-animations';\nimport styled, {keyframes} from 'styled-components';\n\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-playground.js';\n\nimport {useState, useEffect} from 'react';\n\nconst Bounce = styled.div`animation: 1S ${keyframes`${bounce}`} infinite`;\nconst Shake = styled.div`animation: 2S ${keyframes`${shake}`} infinite`;\nconst Hinge = styled.div`animation: 4S ${keyframes`${hinge}`} infinite`;\n\nfunction HingeText(props) {\n  return (\n    <div style={{marginLeft: '500px', marginTop: '250px', width: '150px', border: '3px solid black'}}>\n      <Hinge>\n        <div style={{fontSize:'48pt'}}>{props.children}</div>\n      </Hinge>\n    </div>\n  )\n}\n\n//useStateHook\nconst Recruit = (props) => {\n  const [count, setCount] = useState({vvalue: 2});\n  const handleClick = () => {\n    setCount((count.vvalue + 1) % props.array.length)\n  }\n  return (\n    <div>\n      <button onClick={handleClick}>useStateHook</button>\n      <span> {props.array[count.vvalue]}</span>\n    </div>\n  )\n}\n\n\n// class TestClass {\n//   constructor() {\n//     this.x = 'hello';  \n//   }\n\n//   method1() {\n//     console.log(this.x);\n//   }\n// }\n\n// let tc = new TestClass();\n// tc.method1();\n// // innerFunc(); //undefined\n\n\n// let x = 7;\n// function TestFunc() {\n//   let x = 'see ya later';\n\n//   function innerFunc() {  \n//     console.log(this.x);\n//   }\n//   innerFunc();\n\n// }\n// TestFunc();\n\n\nclass Giphy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '', \n      images: []\n    };\n  }\n\n  onChange = (e) => {\n    this.setState({search: e.target.value});\n  }\n\n  componentDidMount() {\n    let url = 'http://api.giphy.com/v1/gifs/search?q=trump&api_key=wiqQ9XrBQa6g4PW28ZkNYVDmSlSjx4v5&limit=5';\n    let tempImages = [];\n    fetch(url)\n    .then(res => res.json())\n    .then(json => {\n      json.data.map((imageObj) => {\n          tempImages.push(imageObj.images.original.url);\n          this.setState({images: tempImages});\n      })\n    })\n    .catch(error => console.log('error'))\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Giphy Getter</h2>\n        <label>Search: </label>\n        <input onChange={this.onChange} value={this.state.search}></input>\n        <button>Go!</button>\n        <div id=\"imageDiv\">\n          {this.state.images.map((image, index) => {\n            return (\n            <img key={index} src={image} width={'200px'} height={'200px'} alt={'nope'}></img>  \n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\nclass PlaygroundApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.openDisplayCode = this.openDisplayCode.bind(this);\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\n    this.state = {\n      showCode: false\n    }\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  openDisplayCode() {\n    this.setState({showCode: true});\n  }\n\n  onCancelDisplayCode() {\n    this.setState({showCode: false});\n  }\n\n  render() {\n    let array = ['a','b','c'];\n\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingBottom: '15px'}}>\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Playground!</label><button onClick={this.openDisplayCode}>Code</button></span>\n        </div>\n\n        {/* <HingeText>\n          Hello\n        </HingeText> */}\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n          width='1000px' height='700px' title={'PlaygroundApp.js'}>\n        </DialogContainer>\n\n        <Recruit array={array}>\n        </Recruit>\n\n        <Giphy></Giphy>\n\n     </div>\n    )\n  }\n}\n\n\nexport default PlaygroundApp;\n","\r\nlet code = `\r\nimport React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\nimport { bounce, shake, hinge } from 'react-animations';\r\nimport styled, {keyframes} from 'styled-components';\r\nimport DialogContainer from './DialogContainer';\r\nimport './DialogContainer.css';\r\n\r\n\r\nfunction HingeText(props) {\r\n\r\n  return (\r\n    <div style={{marginLeft: '500px', marginTop: '250px', width: '150px', border: '3px solid black'}}>\r\n        <pre>\r\n          <code>\r\n            {code}\r\n          </code>\r\n        </pre>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Dummy() {\r\n  return (\r\n    <pre>\r\n      <code>\r\n    <div>{code}</div>\r\n      </code>\r\n    </pre>\r\n  )\r\n}\r\n\r\n\r\n\r\nclass PlaygroundApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.goCode = this.goCode.bind(this);\r\n    this.onCancelLogout = this.onCancelLogout.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  goCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelLogout() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <span style={{marginLeft: '50px'}}><button onClick={this.goBack}>Back</button><button onClick={this.goCode}>Code</button><label style={{fontSize: '24pt', marginLeft: '200px'}}>Playground!</label></span>\r\n        <HingeText>\r\n          Hello\r\n        </HingeText>\r\n      \r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelLogout} dialogContent={<Dummy \r\n          onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='1000px' title={'Code'}></DialogContainer>\r\n\r\n\r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PlaygroundApp;\r\n`\r\nexport default code;","\nimport React, {useContext} from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeHooksAndContextApp.js';\n\n\nconst userContext = React.createContext();\n\n//does NOT use context\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node'  className='G1' style={{backgroundColor: 'lightgreen'}}>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  const data = useContext(userContext);\n\n  return (\n    <div id='grandchild22Node'  className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n        {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={data.update}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{data.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  const data = useContext(userContext);\n  return (\n    <div id='child1Node'  className='C1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={data.update}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{data.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nclass Child2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n\n  //this doesn't work in classes\n  //const data = useContext(userContext);\n  \n  //should use this, but it doesn't work - yet\n  //static contextType = userContext\n\n  render() {\n    return (  \n      <userContext.Consumer>\n        {(data) => {\n          return (\n\n            <>\n              <div id='child2Node'  className='C2'>\n                <div className='content'>\n                  <div className='titleRow'>\n                    {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state/ctx)</b>\n                  </div>\n                  <br/>\n                  <div className='buttonRow'>\n                    <button onClick={data.update}>Click</button>\n                  </div>\n                  <div className='valueRow'>\n                    <p>{data.count}</p>\n                  </div>\n                </div>\n              </div>\n              <GrandChild1 name={'Grandchild1'} onClick={this.handleClick} value={this.state.count}></GrandChild1>\n              <GrandChild2 name={'Grandchild2'}></GrandChild2>\n            </>  \n          )\n        }}\n      </userContext.Consumer>\n    )\n  }\n}\n\nfunction Context(props) {\n  return (\n    <div id='contextNode' className='CON'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <div className='titleRow'>\n          createContext()\n        </div>\n        <div className='titleRow'>\n          Provider\n        </div>\n        <div className='titleRow'>\n          Consumer/useContext\n        </div>\n        <br/>\n      </div>\n    </div>\n  )\n}\n\n\nclass Parent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      update: () => {\n        this.setState((prev) => {\n          return {count: prev.count + 1}; \n        })\n      }\n    }\n  }\n\n  //this doesn't work in classes\n  //const data = useContext(userContext);\n  \n  //should use this, but it doesn't work - yet\n  //static contextType = userContext\n\n  render() {\n    return (\n      <>\n        <userContext.Provider value={this.state}>\n          <userContext.Consumer>\n            {(data) => {\n              return (\n                <>\n                  {console.log(this.context)}\n                  <div id='parentNode' className='P'>\n                    <div className='content'>\n                      <div className='titleRow'>\n                        {this.props.name}\n                      </div>\n                      <div className='titleRow'>\n                        <b style={{color: 'red', paddingLeft: '5px'}}>(state(provider)/ctx)</b>\n                      </div>\n                      <br/>\n                      <div className='buttonRow'>\n                        <button onClick={data.update}>Click</button>\n                      </div>\n                      <div className='valueRow'>\n                        <p>{data.count}</p>\n                      </div>\n                    </div>\n                  </div>\n                  <Context name={'context'}></Context>\n                  <Child1 name={'Child1'}></Child1>\n                  <Child2 name={'Child2'}></Child2>\n                  <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                </>\n              )\n            }}\n            </userContext.Consumer>\n        </userContext.Provider>   \n      </>\n    )\n  }\n}\n\nclass ReactTreeHooksAndContextApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.openDisplayCode = this.openDisplayCode.bind(this);\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\n    this.state = {\n      showCode: false\n    }\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  openDisplayCode() {\n    this.setState({showCode: true});\n  }\n\n  onCancelDisplayCode() {\n    this.setState({showCode: false});\n  }\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingBottom: '15px'}}>\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Hooks + Context</label><button onClick={this.openDisplayCode}>Code</button></span>\n        </div>\n        <Parent name={'Parent'}></Parent>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n        width='1000px' height='700px' title={'ReactTreeHooksAndContextApp.js'}></DialogContainer>\n      </div>\n    )\n  }\n}\n\n\n\nexport default ReactTreeHooksAndContextApp;\n","let code = `\nimport React, {useContext} from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeHooksAndContextApp.js';\n\n\nconst userContext = React.createContext();\n\n//does NOT use context\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node'  className='G1' style={{backgroundColor: 'lightgreen'}}>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  const data = useContext(userContext);\n\n  return (\n    <div id='grandchild22Node'  className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n        {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={data.update}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{data.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  const data = useContext(userContext);\n  return (\n    <div id='child1Node'  className='C1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={data.update}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{data.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nclass Child2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n\n  //this doesn't work in classes\n  //const data = useContext(userContext);\n  \n  //should use this, but it doesn't work - yet\n  //static contextType = userContext\n\n  render() {\n    return (  \n      <userContext.Consumer>\n        {(data) => {\n          return (\n\n            <>\n              <div id='child2Node'  className='C2'>\n                <div className='content'>\n                  <div className='titleRow'>\n                    {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state/ctx)</b>\n                  </div>\n                  <br/>\n                  <div className='buttonRow'>\n                    <button onClick={data.update}>Click</button>\n                  </div>\n                  <div className='valueRow'>\n                    <p>{data.count}</p>\n                  </div>\n                </div>\n              </div>\n              <GrandChild1 name={'Grandchild1'} onClick={this.handleClick} value={this.state.count}></GrandChild1>\n              <GrandChild2 name={'Grandchild2'}></GrandChild2>\n            </>  \n          )\n        }}\n      </userContext.Consumer>\n    )\n  }\n}\n\nfunction Context(props) {\n  return (\n    <div id='contextNode' className='CON'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <div className='titleRow'>\n          createContext()\n        </div>\n        <div className='titleRow'>\n          Provider\n        </div>\n        <div className='titleRow'>\n          Consumer/useContext\n        </div>\n        <br/>\n      </div>\n    </div>\n  )\n}\n\n\nclass Parent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      update: () => {\n        this.setState((prev) => {\n          return {count: prev.count + 1}; \n        })\n      }\n    }\n  }\n\n  //this doesn't work in classes\n  //const data = useContext(userContext);\n  \n  //should use this, but it doesn't work - yet\n  //static contextType = userContext\n\n  render() {\n    return (\n      <>\n        <userContext.Provider value={this.state}>\n          <userContext.Consumer>\n            {(data) => {\n              return (\n                <>\n                  {console.log(this.context)}\n                  <div id='parentNode' className='P'>\n                    <div className='content'>\n                      <div className='titleRow'>\n                        {this.props.name}\n                      </div>\n                      <div className='titleRow'>\n                        <b style={{color: 'red', paddingLeft: '5px'}}>(state(provider)/ctx)</b>\n                      </div>\n                      <br/>\n                      <div className='buttonRow'>\n                        <button onClick={data.update}>Click</button>\n                      </div>\n                      <div className='valueRow'>\n                        <p>{data.count}</p>\n                      </div>\n                    </div>\n                  </div>\n                  <Context name={'context'}></Context>\n                  <Child1 name={'Child1'}></Child1>\n                  <Child2 name={'Child2'}></Child2>\n                  <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                </>\n              )\n            }}\n            </userContext.Consumer>\n        </userContext.Provider>   \n      </>\n    )\n  }\n}\n\nclass ReactTreeHooksAndContextApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <span style={{marginLeft: '50px'}}><button onClick={this.goBack}>Back</button><button onClick={this.openDisplayCode}>Code</button><label style={{fontSize: '24pt', marginLeft: '200px'}}>Hooks + Context</label></span>\n        <Parent name={'Parent'}></Parent>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n        width='1000px' height='700px' title={'ReactTreeHooksAndContextApp.js'}></DialogContainer>\n      </div>\n    )\n  }\n}\n\n\n\nexport default ReactTreeHooksAndContextApp;\n`\nexport default code;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nclass DummyApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Dummy</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DummyApp;\r\n","\r\nlet code = `\r\n\r\n\r\nimport React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js'\r\nimport code from './code-GiphyGetterApp.js';\r\n\r\n\r\n\r\n\r\nclass Giphy extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: '', \r\n      quantity: 1,\r\n      images: []\r\n    };\r\n  }\r\n\r\n  onChangeSearch = (e) => {\r\n    this.setState({search: e.target.value});\r\n  }\r\n\r\n  onChangeQty = (e) => {\r\n    this.setState({quantity: e.target.value});\r\n  }\r\n\r\n  onFetch = () => {\r\n\r\n    let url = ${`http://api.giphy.com/v1/gifs/search?q=${`this.state.search`}&api_key=wiqQ9XrBQa6g4PW28ZkNYVDmSlSjx4v5&limit=${`this.state.quantity`}`};\r\n\r\n    // let url = 'http://api.giphy.com/v1/gifs/search?q=trump&api_key=wiqQ9XrBQa6g4PW28ZkNYVDmSlSjx4v5&limit=5';\r\n    let tempImages = [];\r\n    fetch(url)\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      json.data.map((imageObj) => {\r\n          tempImages.push(imageObj.images.original.url);\r\n          this.setState({images: tempImages});\r\n      })\r\n    })\r\n    .catch(error => console.log('error'))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id='searchDiv'>  \r\n          <label>Search: </label>\r\n          <input id='searchInput' onChange={this.onChangeSearch} value={this.state.search}></input>\r\n          <label>How Many?: </label>\r\n          <input id='quantityInput' onChange={this.onChangeQty} value={this.state.quantity}></input>\r\n          <button id='goButton' onClick={this.onFetch}>Go!</button>\r\n        </div>\r\n        <div id=\"imageDiv\">\r\n          {this.state.images.map((image, index) => {\r\n            return (\r\n            <img key={index} src={image} width={'200px'} height={'200px'} alt={'nope'}></img>  \r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass GiphyGetterApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>GiphyGetter</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'GiphyGetterApp.js'}>\r\n        </DialogContainer>\r\n\r\n        <Giphy></Giphy>\r\n\r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default GiphyGetterApp;\r\n`\r\nexport default code;","\r\nimport React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js'\r\nimport code from './code-GiphyGetterApp.js';\r\n\r\n\r\n\r\n\r\nclass Giphy extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: '', \r\n      quantity: 1,\r\n      images: []\r\n    };\r\n  }\r\n\r\n  onChangeSearch = (e) => {\r\n    this.setState({search: e.target.value});\r\n  }\r\n\r\n  onChangeQty = (e) => {\r\n    this.setState({quantity: e.target.value});\r\n  }\r\n\r\n  onFetch = () => {\r\n\r\n    let url = `http://api.giphy.com/v1/gifs/search?q=${this.state.search}&api_key=wiqQ9XrBQa6g4PW28ZkNYVDmSlSjx4v5&limit=${this.state.quantity}`;\r\n\r\n    // let url = 'http://api.giphy.com/v1/gifs/search?q=trump&api_key=wiqQ9XrBQa6g4PW28ZkNYVDmSlSjx4v5&limit=5';\r\n    let tempImages = [];\r\n    fetch(url)\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      json.data.map((imageObj) => {\r\n          tempImages.push(imageObj.images.original.url);\r\n          this.setState({images: tempImages});\r\n      })\r\n    })\r\n    .catch(error => console.log('error'))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id='searchDiv'>  \r\n          <label>Search: </label>\r\n          <input id='searchInput' onChange={this.onChangeSearch} value={this.state.search}></input>\r\n          <label>How Many?: </label>\r\n          <input id='quantityInput' onChange={this.onChangeQty} value={this.state.quantity}></input>\r\n          <button id='goButton' onClick={this.onFetch}>Go Get Giphy!</button>\r\n        </div>\r\n        <div id=\"imageDiv\">\r\n          {this.state.images.map((image, index) => {\r\n            return (\r\n            <img key={index} src={image} width={'200px'} height={'200px'} alt={'nope'}></img>  \r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass GiphyGetterApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>GiphyGetter</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'GiphyGetterApp.js'}>\r\n        </DialogContainer>\r\n\r\n        <Giphy></Giphy>\r\n\r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default GiphyGetterApp;\r\n","\nimport React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeVanillaApp from './ReactTreeVanillaApp';\nimport ReactTreeContextApp from './ReactTreeContextApp';\nimport ReactTreeReduxApp from './ReactTreeReduxApp';\nimport ReactTreeHooksApp from './ReactTreeHooksApp';\nimport HigherOrderFunctionApp from './HigherOrderFunctionApp.js';\nimport JavaScriptExercises from './JavaScriptExercises.js';\nimport PlaygroundApp from './PlaygroundApp';\nimport ReactTreeHooksAndContextApp from './ReactTreeHooksAndContextApp';\nimport DummyApp from './DummyApp.js';\nimport GiphyGetterApp from './GiphyGetterApp.js';\n\nclass ReactTreeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(type) {\n    const componentsMap = {\n      vanilla: ReactTreeVanillaApp,\n      context: ReactTreeContextApp,\n      hooks: ReactTreeHooksApp,\n      redux: ReactTreeReduxApp,\n      hof: HigherOrderFunctionApp,\n      exercises: JavaScriptExercises,\n      play: PlaygroundApp,\n      giphy: GiphyGetterApp,\n      hookscontext: ReactTreeHooksAndContextApp,\n      dummy: DummyApp\n    };\n    const DynamicComponent = componentsMap[type];\n    ReactDOM.render(<DynamicComponent/>, document.getElementById('root'));\n  }\n\n  render() {\n    return (\n      <div id='mainContainer'>\n        <h1 style={{marginLeft: '50px'}}>React - State Management Options, Hooks, Misc.</h1>\n        <div id='mainSubContainer'>\n          <ul id='mainMenu'>\n            <li>\n              <button className='button' onClick={() => this.onClick('vanilla')}>Vanilla</button>\n            </li>\n            <li>\n              <button className='button' onClick={() => this.onClick('context')}>Context</button>\n            </li>\n            <li>\n              <button className='button' onClick={() => this.onClick('redux')}>Redux</button>\n            </li>\n            <li>\n              <button className='button' style={{marginTop: '0px'}} onClick={() => this.onClick('hooks')}>Hooks</button>\n            </li>\n            <li>\n              <button className='button' style={{marginTop: '0px'}} onClick={() => this.onClick('hookscontext')}>Context+Hooks</button>\n            </li>\n          </ul>\n          <ul id='mainMenu'>\n            <li>\n              <button className='button' onClick={() => this.onClick('hof')}>HigherOrderFunction</button>\n            </li>\n            <li>\n              <button className='button' onClick={() => this.onClick('exercises')}>JavaScriptExercises</button>\n            </li>\n            <li>\n              <button className='button' style={{marginTop: '0px'}} onClick={() => this.onClick('play')}>Playground</button>\n            </li>\n            <li>\n              <button className='button' style={{marginTop: '0px'}} onClick={() => this.onClick('giphy')}>GiphyGetter</button>\n            </li>\n            <li>\n              <button className='button' style={{marginTop: '0px'}} onClick={() => this.onClick('dummy')}>?</button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\nexport default ReactTreeApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport ReactTreeApp from './ReactTreeApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<ReactTreeApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}