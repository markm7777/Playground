{"version":3,"sources":["DialogContainer.js","DisplayCode.js","ReactTreeVanillaApp.js","code-ReactTreeVanillaApp.js","ReactTreeContextApp.js","code-ReactTreeContextApp.js","actions.js","reducers.js","ReactTreeReduxApp.js","code-ReactTreeReduxApp.js","ReactTreeHooksApp.js","code-ReactTreeHooksApp.js","HigherOrderFunctionApp.js","code-HigherOrderFunctionApp.js","JavaScriptExercises.js","code-JavaScriptExercises.js","code-playground.js","MiscApp.js","ReactTreeHooksAndContextApp.js","code-ReactTreeHooksAndContextApp.js","code-D3Example.js","D3Example.js","code-D3Playground.js","D3Playground.js","code-D3Weather.js","D3Weather.js","DragAndDropApp.js","code-DragAndDropApp.js","DragAndDropFiles.js","DummyApp.js","code-GiphyGetterApp.js","GiphyGetterApp.js","ReactTreeApp.js","serviceWorker.js","index.js"],"names":["DialogContainer","props","this","show","Fragment","id","style","width","height","title","onClick","onCancel","dialogContent","React","Component","DisplayCode","code","GrandChild1","className","name","value","GrandChild2","Child1","Child2","Parent","state","count","handleClick","bind","myFunction","setState","prev","setTimeout","color","paddingLeft","from","to","borderColor","borderStyle","borderWidth","fromAnchor","toAnchor","delay","ReactTreeVanillaApp","goBack","openDisplayCode","onCancelDisplayCode","showCode","ReactDOM","render","document","getElementById","position","border","textAlign","backgroundColor","paddingTop","paddingBottom","fontSize","marginLeft","marginRight","onCancelLogout","userContext","createContext","Consumer","data","update","Context","Provider","ReactTreeContextApp","incrementAction","type","reducer","action","newState","Object","assign","store","createStore","increment","Redux","ReactTreeReduxApp","connect","ownProps","dispatch","decrement","incrementCount","useState","setCount","ReactTreeHooksApp","Memoize","result","theFunction","input","onInputChange","e","target","originalFunction","cache","num","undefined","output","memoize","func","marginBottom","toString","onChange","HigherOrderFunctionApp","RemoveDuplicatesFromArray","Set","arr","filter","item","index","indexOf","ReplaceValueInArray","originalArr","MapArrayWithoutMap","friends","age","Array","EmptyArray","length","ConvertArrayToObject","values","FillArrayWithData","fill","MergeArrays","mergedArr","arr1","arr2","IntersectionOfTwoArrays","x","RemoveFalsyValuesFromArray","Boolean","GetRandomValueFromArray","Math","floor","random","GetHammingDistance","y","x2","substr","y2","x2Arr","y2Arr","console","log","map","NimGame","canIWin","n","ReverseArray","slice","reverse","LastIndexOf","lastIndexOf","val","SumAllValuesInArray","reduce","LinkedListNode","next","LinkedList","head","newNode","current","CreateLinkedLists","list1Arr","list2Arr","lists","list1","list2","add","AssembleResult","currentNode","push","MergeLinkedLists","resultHead","otherNode","tempNode","CycleDetection","cycle","CreateCycleList","includes","DeleteDuplicates","MaximumElement","results","stack","op","pop","max","MergePoint","currentNode1","currentNode2","CreateMergedLists","SuperReducedString","str","split","ArrayManipulation","arrResult","i","Shuffle","t","BalancedBraces","balanced","j","BinaryTreeNode","left","right","BinaryTreeDepth","root","maxDepth","node","lDepth","rDepth","RecursiveCountdown","Countdown","Pangram","strArr","alphabet","LonelyInteger","myMap","keys","find","key","InsertionSort","insertVal","v","TestArea","Dog","myDog","bite","__proto__","prototype","protoType","mySecondDog","poop","JavaScriptExercises","NaN","styled","div","keyframes","bounce","shake","Hinge","hinge","HingeText","marginTop","children","Recruit","vvalue","array","MiscApp","useContext","context","ReactTreeHooksAndContextApp","DrawStuff","getRandomColor","myGetData","totalPoints","d3range","d","r","c","myData","drawStuff","timer","setInterval","clearInterval","xScale","d3","domain","range","yScale","rScale","selectAll","enter","append","attr","transition","duration","remove","D3Example","dimensions","container","offsetWidth","offsetHeight","ref","el","renderContent","colors","data1","w","h","data2","svgContainer1","D3Playground","version","D3Weather","onCityChange","city","getWeather","openCageUrl","returnedCity","fetch","then","res","json","formatted","annotations","timezone","short_name","openWeatherUrl","geometry","lat","lng","tempArr","temperatures","hourly","time","Date","dt","getHours","temp","humidities","humidity","wind","wind_speed","lineArr","drawChart","catch","error","svgContainer","graphWidth","getBoundingClientRect","graphHeight","origin","now","nice","call","ticks","text","gridlines","tickFormat","tickSize","scale","line","curve","linearGradient","path","datum","getTotalLength","ease","align","D3WeatherApp","window","screen","Task","draggable","onDragStart","dataTransfer","setData","dropId","onMouseOver","cursor","onDragOver","preventDefault","dropEffect","src","process","alt","display","DragDropBox","onDragEnter","onDrop","getData","element","appendChild","dragOver","tasksArr","DragAndDrop","DragAndDropApp","dragEnter","stopPropagation","classList","dragLeave","drop","files","reader","FileReader","readAsDataURL","onloadend","img","createElement","onDragLeave","DragAndDropFiles","DummyApp","Giphy","onChangeSearch","search","onChangeQty","quantity","onChangeWidthAndHeight","widthAndHeight","onFetch","url","apikey","tempImages","status","imageObj","images","original","image","GiphyGetterApp","ReactTreeApp","DynamicComponent","vanilla","hooks","redux","hof","exercises","misc","giphy","hookscontext","draganddrop","draganddropfiles","d3playground","d32","dummy","padding","paddingRight","location","hostname","match","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.835264dc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './DialogContainer.css';\r\n\r\nclass DialogContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    // Render nothing if the \"show\" prop is false\r\n    if(!this.props.show) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div id='containerBackground'>       \r\n          <div id='containerContent' style={{width: this.props.width, height: this.props.height}}>\r\n            <div id='containerContentTitle'>\r\n              <span id='title'>{this.props.title}</span>\r\n              <span>  </span>\r\n              <div id='cancelX'> \r\n                <button onClick={this.props.onCancel}>X</button>\r\n              </div>\r\n            </div>\r\n            <div id='containerContentCustom'>\r\n              {this.props.dialogContent}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogContainer;\r\n","import React from 'react';\r\n\r\nfunction DisplayCode(props) {\r\n  return (\r\n    <pre>\r\n      <code>\r\n        <div>{props.code}</div>\r\n      </code>\r\n    </pre>\r\n  )\r\n}\r\n\r\nexport default DisplayCode;","\nimport React from 'react';\nimport './App.css';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeVanillaApp.js';\n\n\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node' className='G1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <div id='grandchild22Node' className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  return (\n    <div id='child1Node' className=\"C1\" >\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child2(props) {\n  return (  \n    <>\n      <div id='child2Node' className=\"C2\" >\n        <div className='content'>\n          <div className='titleRow'>\n            {props.name}\n          </div>\n          <br/>\n          <div className='buttonRow'>\n            <button onClick={props.onClick}>Click</button>\n          </div>\n          <div className='valueRow'>\n            <p>{props.value}</p>\n          </div>\n        </div>\n      </div>\n      <GrandChild1 name={'Grandchild1'} onClick={props.onClick} value={props.value}></GrandChild1>\n      <GrandChild2 name={'Grandchild2'} onClick={props.onClick} value={props.value}></GrandChild2>\n    </>\n  )  \n}\n\n\nclass Parent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n\n  render() {\n    return (\n      <>\n        <div id='parentNode' className='P' >\n          <div className='content'>\n            <div className='titleRow'>\n              {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state)</b>\n            </div>\n            <br/>\n            <div className='buttonRow'>\n              <button onClick={this.handleClick}>Click</button>\n            </div>\n            <div className='valueRow'>\n              <p>{this.state.count}</p>\n            </div>\n          </div>\n        </div>\n        <Child1 name={'Child1'} onClick={this.handleClick} value={this.state.count}></Child1>\n        <Child2 name={'Child2'} onClick={this.handleClick} value={this.state.count}></Child2>\n        <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      </>\n    )\n  }\n}\n\nclass ReactTreeVanillaApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.openDisplayCode = this.openDisplayCode.bind(this);\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\n    this.state = {\n      showCode: false\n    }\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  openDisplayCode() {\n    this.setState({showCode: true});\n  }\n\n  onCancelDisplayCode() {\n    this.setState({showCode: false});\n  }\n\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Vanilla</label><button onClick={this.openDisplayCode}>Code</button></span>\n        </div>\n        <Parent className='parent' name={'Parent'}></Parent>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n        width='1000px' height='700px' title={'ReactTreeVanillaApp.js'}></DialogContainer>\n      </div>\n    )\n  }\n}\n\nexport default ReactTreeVanillaApp;\n","let code = `\nimport React from 'react';\nimport './App.css';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeVanillaApp.js';\n\n\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node' className='G1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <div id='grandchild22Node' className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  return (\n    <div id='child1Node' className=\"C1\" >\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child2(props) {\n  return (  \n    <>\n      <div id='child2Node' className=\"C2\" >\n        <div className='content'>\n          <div className='titleRow'>\n            {props.name}\n          </div>\n          <br/>\n          <div className='buttonRow'>\n            <button onClick={props.onClick}>Click</button>\n          </div>\n          <div className='valueRow'>\n            <p>{props.value}</p>\n          </div>\n        </div>\n      </div>\n      <GrandChild1 name={'Grandchild1'} onClick={props.onClick} value={props.value}></GrandChild1>\n      <GrandChild2 name={'Grandchild2'} onClick={props.onClick} value={props.value}></GrandChild2>\n    </>\n  )  \n}\n\n\nclass Parent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n\n  render() {\n    return (\n      <>\n        <div id='parentNode' className='P' >\n          <div className='content'>\n            <div className='titleRow'>\n              {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state)</b>\n            </div>\n            <br/>\n            <div className='buttonRow'>\n              <button onClick={this.handleClick}>Click</button>\n            </div>\n            <div className='valueRow'>\n              <p>{this.state.count}</p>\n            </div>\n          </div>\n        </div>\n        <Child1 name={'Child1'} onClick={this.handleClick} value={this.state.count}></Child1>\n        <Child2 name={'Child2'} onClick={this.handleClick} value={this.state.count}></Child2>\n        <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      </>\n    )\n  }\n}\n\nclass ReactTreeVanillaApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <span style={{marginLeft: '50px'}}><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '200px'}}>Vanilla</label></span>\n        <Parent name={'Parent'}></Parent>\n        {/* <StyledTreeExample></StyledTreeExample> */}\n      </div>\n    )\n  }\n}\n\n\n\nexport default ReactTreeVanillaApp;\n`\nexport default code;","\nimport React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeContextApp.js';\n\n\nconst userContext = React.createContext();\n\n//does NOT use context\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node'  className='G1' style={{backgroundColor: 'lightgreen'}}>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <userContext.Consumer>\n      {(data) => {\n        return (\n          <div id='grandchild22Node'  className='G2'>\n            <div className='content'>\n              <div className='titleRow'>\n              {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n              </div>\n              <br/>\n              <div className='buttonRow'>\n                <button onClick={data.update}>Click</button>\n              </div>\n              <div className='valueRow'>\n                <p>{data.count}</p>\n              </div>\n            </div>\n          </div>\n        )\n      }}\n    </userContext.Consumer>\n  )\n}\n\nfunction Child1(props) {\n  return (\n    <userContext.Consumer>\n      {(data) => {\n        return (\n          <div id='child1Node'  className='C1'>\n            <div className='content'>\n              <div className='titleRow'>\n                {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n              </div>\n              <br/>\n              <div className='buttonRow'>\n                <button onClick={data.update}>Click</button>\n              </div>\n              <div className='valueRow'>\n                <p>{data.count}</p>\n              </div>\n            </div>\n          </div>\n        )\n      }}\n    </userContext.Consumer>\n  )\n}\n\nclass Child2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n\n  render() {\n    return (  \n      <userContext.Consumer>\n        {(data) => {\n          return (\n            <>\n              <div id='child2Node'  className='C2'>\n                <div className='content'>\n                  <div className='titleRow'>\n                    {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state/ctx)</b>\n                  </div>\n                  <br/>\n                  <div className='buttonRow'>\n                    <button onClick={data.update}>Click</button>\n                  </div>\n                  <div className='valueRow'>\n                    <p>{data.count}</p>\n                  </div>\n                </div>\n              </div>\n              <GrandChild1 name={'Grandchild1'} onClick={this.handleClick} value={this.state.count}></GrandChild1>\n              <GrandChild2 name={'Grandchild2'}></GrandChild2>\n            </>  \n          )\n        }}\n      </userContext.Consumer>\n    )  \n  }\n}\n\nfunction Context(props) {\n  return (\n    <div id='contextNode' className='CON'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <div className='titleRow'>\n          createContext()\n        </div>\n        <div className='titleRow'>\n          Provider/Consumer\n        </div>\n        <br/>\n      </div>\n    </div>\n  )\n}\n\nclass Parent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      update: () => {\n        this.setState((prev) => {\n          return {count: prev.count + 1}; \n        })\n      }\n    }\n  }\n\n//TODO - why is 'this' lost below? \n  // myFunction() {\n  //   this.setState((prev) => {\n  //     return {count: prev.count + 1}; \n  //   });\n  // }\n\n  // handleClick() {\n  //   setTimeout(this.myFunction, 300)\n  // }\n\n\n  render() {\n    return (\n      <>\n        <userContext.Provider value={this.state}>\n          <userContext.Consumer>\n            {(data) => {\n              return (\n                <>\n                  <div id='parentNode' className='P'>\n                    <div className='content'>\n                      <div className='titleRow'>\n                        {this.props.name}\n                      </div>\n                      <div className='titleRow'>\n                        <b style={{color: 'red', paddingLeft: '5px'}}>(state(provider)/ctx)</b>\n                      </div>\n                      <br/>\n                      <div className='buttonRow'>\n                        <button onClick={data.update}>Click</button>\n                      </div>\n                      <div className='valueRow'>\n                        <p>{data.count}</p>\n                      </div>\n                    </div>\n                  </div>\n                  <Context name={'context'}></Context>\n                  <Child1 name={'Child1'}></Child1>\n                  <Child2 name={'Child2'}></Child2>\n                  <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                </>\n              )\n            }}\n          </userContext.Consumer>\n        </userContext.Provider>   \n      </>\n    )\n  }\n}\n\nclass ReactTreeContextApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.openDisplayCode = this.openDisplayCode.bind(this);\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\n    this.state = {\n      showCode: false\n    }\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  openDisplayCode() {\n    this.setState({showCode: true});\n  }\n\n  onCancelDisplayCode() {\n    this.setState({showCode: false});\n  }\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Context</label><button onClick={this.openDisplayCode}>Code</button></span>\n        </div>\n        <Parent name={'Parent'}></Parent>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n        width='1000px' height='700px' title={'ReactTreeContextApp.js'}></DialogContainer>\n\n      </div>\n    )\n  }\n}\n\nexport default ReactTreeContextApp;\n","let code = `\nimport React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeContextApp.js';\n\n\nconst userContext = React.createContext();\n\n//does NOT use context\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node'  className='G1' style={{backgroundColor: 'lightgreen'}}>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <userContext.Consumer>\n      {(data) => {\n        return (\n          <div id='grandchild22Node'  className='G2'>\n            <div className='content'>\n              <div className='titleRow'>\n              {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n              </div>\n              <br/>\n              <div className='buttonRow'>\n                <button onClick={data.update}>Click</button>\n              </div>\n              <div className='valueRow'>\n                <p>{data.count}</p>\n              </div>\n            </div>\n          </div>\n        )\n      }}\n    </userContext.Consumer>\n  )\n}\n\n\nfunction Child1(props) {\n  return (\n    <userContext.Consumer>\n      {(data) => {\n        return (\n          <div id='child1Node'  className='C1'>\n            <div className='content'>\n              <div className='titleRow'>\n                {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n              </div>\n              <br/>\n              <div className='buttonRow'>\n                <button onClick={data.update}>Click</button>\n              </div>\n              <div className='valueRow'>\n                <p>{data.count}</p>\n              </div>\n            </div>\n          </div>\n        )\n      }}\n    </userContext.Consumer>\n  )\n}\n\nclass Child2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n\n  render() {\n    return (  \n      <userContext.Consumer>\n        {(data) => {\n          return (\n            <>\n              <div id='child2Node'  className='C2'>\n                <div className='content'>\n                  <div className='titleRow'>\n                    {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state/ctx)</b>\n                  </div>\n                  <br/>\n                  <div className='buttonRow'>\n                    <button onClick={data.update}>Click</button>\n                  </div>\n                  <div className='valueRow'>\n                    <p>{data.count}</p>\n                  </div>\n                </div>\n              </div>\n              <GrandChild1 name={'Grandchild1'} onClick={this.handleClick} value={this.state.count}></GrandChild1>\n              <GrandChild2 name={'Grandchild2'}></GrandChild2>\n            </>  \n          )\n        }}\n      </userContext.Consumer>\n    )  \n  }\n}\n\nfunction Context(props) {\n\n  return (\n    <div id='contextNode' className='CON'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <div className='titleRow'>\n          createContext()\n        </div>\n        <div className='titleRow'>\n          Provider/Consumer\n        </div>\n        <br/>\n      </div>\n    </div>\n  )\n}\n\n\nclass Parent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      update: () => {\n        this.setState((prev) => {\n          return {count: prev.count + 1}; \n        })\n      }\n    }\n  }\n\n//TODO - why is 'this' lost below? \n  // myFunction() {\n  //   this.setState((prev) => {\n  //     return {count: prev.count + 1}; \n  //   });\n  // }\n\n  // handleClick() {\n  //   setTimeout(this.myFunction, 300)\n  // }\n\n\n  render() {\n    return (\n      <>\n        <userContext.Provider value={this.state}>\n          <userContext.Consumer>\n            {(data) => {\n              return (\n                <>\n                  <div id='parentNode' className='P'>\n                    <div className='content'>\n                      <div className='titleRow'>\n                        {this.props.name}\n                      </div>\n                      <div className='titleRow'>\n                        <b style={{color: 'red', paddingLeft: '5px'}}>(state(provider)/ctx)</b>\n                      </div>\n                      <br/>\n                      <div className='buttonRow'>\n                        <button onClick={data.update}>Click</button>\n                      </div>\n                      <div className='valueRow'>\n                        <p>{data.count}</p>\n                      </div>\n                    </div>\n                  </div>\n                  <Context name={'context'}></Context>\n                  <Child1 name={'Child1'}></Child1>\n                  <Child2 name={'Child2'}></Child2>\n                  <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                </>\n              )\n            }}\n          </userContext.Consumer>\n        </userContext.Provider>   \n      </>\n    )\n  }\n}\n\nclass ReactTreeContextApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.openDisplayCode = this.openDisplayCode.bind(this);\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\n    this.state = {\n      showCode: false\n    }\n\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  openDisplayCode() {\n    this.setState({showCode: true});\n  }\n\n  onCancelDisplayCode() {\n    this.setState({showCode: false});\n  }\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <span style={{marginLeft: '50px'}}><button onClick={this.goBack}>Back</button><button onClick={this.openDisplayCode}>Code</button><label style={{fontSize: '24pt', marginLeft: '200px'}}>Context</label></span>\n        <Parent name={'Parent'}></Parent>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n        width='1000px' height='700px' title={'ReactTreeVanillaApp.js'}></DialogContainer>\n\n      </div>\n    )\n  }\n}\n\n\n\nexport default ReactTreeContextApp;\n`\nexport default code;","export const incrementAction = (name) => ({\r\n  type: \"INCREMENT\",\r\n  name: name\r\n})\r\n\r\nexport const decrementAction = () => ({\r\n  type: \"DECREMENT\"\r\n})\r\n","const reducer = (state = {count:0}, action) => {\r\n  let newState = '';\r\n  switch (action.type) {\r\n    case 'INCREMENT':\r\n      newState = Object.assign({}, state);\r\n      newState.count++;\r\n      return newState;\r\n    case 'DECREMENT':\r\n      newState = Object.assign({}, state);\r\n      newState.count--;\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","\nimport React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport { connect } from 'react-redux';\nimport { incrementAction } from './actions';\nimport { decrementAction } from './actions';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware} from 'redux';\nimport reducer from './reducers.js';\n\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeReduxApp.js';\n\n\nconst store = createStore(reducer);\n\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node' className='G1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.increment}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <div id='grandchild22Node' className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.increment}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  return (\n    <div id='child1Node' className='C1'> \n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.increment}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nclass Child2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n  \n  render() {\n    return (  \n      <>\n        <div id='child2Node' className='C2' style={{backgroundColor: 'lightgreen'}}>\n          <div className='content'>\n            <div className='titleRow'>\n              {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state)</b>\n            </div>\n            <br/>\n            <div className='buttonRow'>\n              <button onClick={this.handleClick}>Click</button>\n            </div>\n            <div className='valueRow'>\n              <p>{this.state.count}</p>\n            </div>\n          </div>\n        </div>\n        <GrandChild1 name={'Grandchild1'}></GrandChild1>\n        <GrandChild2 name={'Grandchild2'}></GrandChild2>\n      </>\n    )  \n  }\n}\n\nfunction Redux(props) {\n\n  return (\n    <div id='reduxNode' className='RED'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <div className='titleRow'>\n          actions/reducers\n        </div>\n        <div className='titleRow'>\n          connect\n        </div>\n        <div className='titleRow'>\n          mapStateToProps\n        </div>\n        <div className='titleRow'>\n          mapDispatchToProps\n        </div>\n        <br/>\n      </div>\n    </div>\n  )\n}\n\nfunction Parent(props) {\n  return (\n    <>\n      <div id='parentNode' className='P'>\n        <div className='content'>\n          <div className='titleRow'>\n            {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n          </div>\n          <br/>\n          <div className='buttonRow'>\n            <button onClick={props.increment}>Click</button>\n          </div>\n          <div className='valueRow'>\n            <p>{props.count}</p>\n          </div>\n        </div>\n      </div>\n      <Redux name={'redux'}></Redux>\n      <Child1 name={'Child1'}></Child1>\n      <Child2 name={'Child2'}></Child2>\n      {/* <Child1 name={'Child1'} onClick={this.handleClick} value={this.state.count}></Child1>\n      <Child2 name={'Child2'} onClick={this.handleClick} value={this.state.count}></Child2> */}\n      <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n\n    </>\n  )\n}\n\nclass ReactTreeReduxApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.openDisplayCode = this.openDisplayCode.bind(this);\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\n    this.state = {\n      showCode: false\n    }\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  openDisplayCode() {\n    this.setState({showCode: true});\n  }\n\n  onCancelDisplayCode() {\n    this.setState({showCode: false});\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Redux</label><button onClick={this.openDisplayCode}>Code</button></span>\n        </div>\n\n        <Parent name={'Parent'}></Parent>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n        width='1000px' height='700px' title={'ReactTreeReduxApp.js'}></DialogContainer>\n        </div>\n      </Provider>\n    )\n  }\n}\n\nconst mapStateToProps_Parent = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_Parent = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nParent = connect(\n  mapStateToProps_Parent,\n  mapDispatchToProps_Parent\n)(Parent)\n\n\nconst mapStateToProps_Child1 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_Child1 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nChild1 = connect(\n  mapStateToProps_Child1,\n  mapDispatchToProps_Child1\n)(Child1)\n\nconst mapStateToProps_Child2 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_Child2 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\n// Child2 = connect(\n//   mapStateToProps_Child2,\n//   mapDispatchToProps_Child2\n// )(Child2)\n\n\nconst mapStateToProps_GrandChild1 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_GrandChild1 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nGrandChild1 = connect(\n  mapStateToProps_GrandChild1,\n  mapDispatchToProps_GrandChild1\n)(GrandChild1)\n\nconst mapStateToProps_GrandChild2 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_GrandChild2 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nGrandChild2 = connect(\n  mapStateToProps_GrandChild2,\n  mapDispatchToProps_GrandChild2\n)(GrandChild2)\n\n\nexport default ReactTreeReduxApp;\n","let code = `\nimport React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport { connect } from 'react-redux';\nimport { incrementAction } from './actions';\nimport { decrementAction } from './actions';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware} from 'redux';\nimport reducer from './reducers.js';\n\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeReduxApp.js';\n\n\nconst store = createStore(reducer);\n\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node' className='G1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.increment}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <div id='grandchild22Node' className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.increment}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  return (\n    <div id='child1Node' className='C1'> \n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.increment}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nclass Child2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n  \n  render() {\n    return (  \n      <>\n        <div id='child2Node' className='C2' style={{backgroundColor: 'lightgreen'}}>\n          <div className='content'>\n            <div className='titleRow'>\n              {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state)</b>\n            </div>\n            <br/>\n            <div className='buttonRow'>\n              <button onClick={this.handleClick}>Click</button>\n            </div>\n            <div className='valueRow'>\n              <p>{this.state.count}</p>\n            </div>\n          </div>\n        </div>\n        <GrandChild1 name={'Grandchild1'}></GrandChild1>\n        <GrandChild2 name={'Grandchild2'}></GrandChild2>\n      </>\n    )  \n  }\n}\n\nfunction Redux(props) {\n\n  return (\n    <div id='reduxNode' className='RED'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <div className='titleRow'>\n          actions/reducers\n        </div>\n        <div className='titleRow'>\n          connect\n        </div>\n        <div className='titleRow'>\n          mapStateToProps\n        </div>\n        <div className='titleRow'>\n          mapDispatchToProps\n        </div>\n        <br/>\n      </div>\n    </div>\n  )\n}\n\nfunction Parent(props) {\n  return (\n    <>\n      <div id='parentNode' className='P'>\n        <div className='content'>\n          <div className='titleRow'>\n            {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(rdx)</b>\n          </div>\n          <br/>\n          <div className='buttonRow'>\n            <button onClick={props.increment}>Click</button>\n          </div>\n          <div className='valueRow'>\n            <p>{props.count}</p>\n          </div>\n        </div>\n      </div>\n      <Redux name={'redux'}></Redux>\n      <Child1 name={'Child1'}></Child1>\n      <Child2 name={'Child2'}></Child2>\n      {/* <Child1 name={'Child1'} onClick={this.handleClick} value={this.state.count}></Child1>\n      <Child2 name={'Child2'} onClick={this.handleClick} value={this.state.count}></Child2> */}\n      <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n\n    </>\n  )\n}\n\nclass ReactTreeReduxApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n          <span style={{marginLeft: '50px'}}><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '200px'}}>Redux</label></span>\n          <Parent name={'Parent'}></Parent>\n        </div>\n      </Provider>\n    )\n  }\n}\n\nconst mapStateToProps_Parent = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_Parent = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nParent = connect(\n  mapStateToProps_Parent,\n  mapDispatchToProps_Parent\n)(Parent)\n\n\nconst mapStateToProps_Child1 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_Child1 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nChild1 = connect(\n  mapStateToProps_Child1,\n  mapDispatchToProps_Child1\n)(Child1)\n\nconst mapStateToProps_Child2 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_Child2 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\n// Child2 = connect(\n//   mapStateToProps_Child2,\n//   mapDispatchToProps_Child2\n// )(Child2)\n\n\nconst mapStateToProps_GrandChild1 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_GrandChild1 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nGrandChild1 = connect(\n  mapStateToProps_GrandChild1,\n  mapDispatchToProps_GrandChild1\n)(GrandChild1)\n\nconst mapStateToProps_GrandChild2 = (state, ownProps) => ({\n  count: state.count,\n  name: ownProps.name\n})\nconst mapDispatchToProps_GrandChild2 = (dispatch) => ({\n  increment: () => {dispatch(incrementAction())},\n  decrement: () => {dispatch(decrementAction())}\n})\nGrandChild2 = connect(\n  mapStateToProps_GrandChild2,\n  mapDispatchToProps_GrandChild2\n)(GrandChild2)\n\n\nexport default ReactTreeReduxApp;\n`\nexport default code;","import React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport {useState,  useEffect, useContext, createContext} from 'react';\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeHooksApp.js';\n\n// HOOKS \n// using useState hook to hold state in 'Parent' and changed all class components to function components\n// prop drilling is still used\n\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node' className='G1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <div id='grandchild22Node' className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n        <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  return (\n    <div id='child1Node' className='C1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child2(props) {\n  return (  \n    <>\n      <div id='child2Node' className='C2'>\n        <div className='content'>\n          <div className='titleRow'>\n            {props.name}\n          </div>\n          <br/>\n          <div className='buttonRow'>\n            <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n          </div>\n          <div className='valueRow'>\n            <p>{props.count}</p>\n          </div>\n        </div>\n      </div>\n      <GrandChild1 name={'Grandchild1'} incrementCount={props.incrementCount} count={props.count}></GrandChild1>\n      <GrandChild2 name={'Grandchild2'} incrementCount={props.incrementCount} count={props.count}></GrandChild2>\n    </>\n  )  \n}\n\nfunction Parent(props) {\n  const [count, setCount] = useState(0);\n  return (\n      <>\n        <div id='parentNode' className='P'>\n          <div className='content'>\n            <div className='titleRow'>\n              {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(useState)</b>\n            </div>\n            <br/>\n            <div className='buttonRow'>\n              <button onClick={() => setCount(count + 1)}>Click</button>\n            </div>\n            <div className='valueRow'>\n              <p>{count}</p>\n            </div>\n          </div>\n        </div>\n        <Child1 name={'Child1'} incrementCount={setCount} count={count}></Child1>\n        <Child2 name={'Child2'} incrementCount={setCount} count={count}></Child2>\n        <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      </>\n  )\n}\n\nclass ReactTreeHooksApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.openDisplayCode = this.openDisplayCode.bind(this);\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\n    this.state = {\n      showCode: false\n    }\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  openDisplayCode() {\n    this.setState({showCode: true});\n  }\n\n  onCancelDisplayCode() {\n    this.setState({showCode: false});\n  }\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Hooks</label><button onClick={this.openDisplayCode}>Code</button></span>\n        </div>\n        <Parent name={'Parent'}></Parent>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n        width='1000px' height='700px' title={'ReactTreeHooksApp.js'}></DialogContainer>\n      </div>\n    )\n  }\n}\n\nexport default ReactTreeHooksApp;\n\n","let code = `\nimport React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport {useState,  useEffect, useContext, createContext} from 'react';\n\n// HOOKS \n// using useState hook to hold state in 'Parent' and changed all class components to function components\n// prop drilling is still used\n\n//TODO above:\n// add context or useContext hook?   \n\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node' className='G1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  return (\n    <div id='grandchild22Node' className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n        <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  return (\n    <div id='child1Node' className='C1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child2(props) {\n  return (  \n    <>\n      <div id='child2Node' className='C2'>\n        <div className='content'>\n          <div className='titleRow'>\n            {props.name}\n          </div>\n          <br/>\n          <div className='buttonRow'>\n            <button onClick={() => props.incrementCount(props.count + 1)}>Click</button>\n          </div>\n          <div className='valueRow'>\n            <p>{props.count}</p>\n          </div>\n        </div>\n      </div>\n      <GrandChild1 name={'Grandchild1'} incrementCount={props.incrementCount} count={props.count}></GrandChild1>\n      <GrandChild2 name={'Grandchild2'} incrementCount={props.incrementCount} count={props.count}></GrandChild2>\n    </>\n  )  \n}\n\nfunction Parent(props) {\n  const [count, setCount] = useState(0);\n  return (\n      <>\n        <div id='parentNode' className='P'>\n          <div className='content'>\n            <div className='titleRow'>\n              {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(useState)</b>\n            </div>\n            <br/>\n            <div className='buttonRow'>\n              <button onClick={() => setCount(count + 1)}>Click</button>\n            </div>\n            <div className='valueRow'>\n              <p>{count}</p>\n            </div>\n          </div>\n        </div>\n        <Child1 name={'Child1'} incrementCount={setCount} count={count}></Child1>\n        <Child2 name={'Child2'} incrementCount={setCount} count={count}></Child2>\n        <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n        <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n      </>\n  )\n}\n\nclass ReactTreeHooksApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <span style={{marginLeft: '50px'}}><button  onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '200px'}}>Hooks</label></span>\n        <Parent name={'Parent'}></Parent>\n      </div>\n    )\n  }\n}\n\nexport default ReactTreeHooksApp;\n`\nexport default code;\n","import React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js'\r\nimport code from './code-HigherOrderFunctionApp.js';\r\n\r\nconst memoize = (originalFunction) => {\r\n  const cache = {};\r\n\r\n  return function(num) {\r\n    if (cache[num] !== undefined) {\r\n      return cache[num] + ' [cache]';\r\n    }\r\n    else {\r\n      const output = originalFunction(num);\r\n      cache[num] = output;\r\n      return output;\r\n    }\r\n  }\r\n}\r\n\r\nclass Memoize extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: 0,\r\n      input: 0\r\n    }\r\n    this.theFunction = 0;// = memoize(props.func);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.theFunction = memoize(this.props.func);\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState({result: this.theFunction(this.state.input)})\r\n  }\r\n\r\n  onInputChange = (e) => {\r\n    this.setState({input: e.target.value})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h3>Memoize (cache) - Function will only do calculation once. Subsequent calls will return cached value</h3>\r\n        <div style={{marginBottom: '10px'}}>\r\n          <label>Function: </label>\r\n          <label>{this.props.func.toString()}</label>\r\n        </div>\r\n        <label>Input value (num): </label>\r\n        <input style={{marginRight: '10px'}} onChange={this.onInputChange} value={this.state.input}></input>\r\n        <button style={{marginRight: '10px'}} onClick={this.handleClick}>Calculate</button>\r\n        <label>Result: </label>\r\n        <span>{this.state.result}</span>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nclass HigherOrderFunctionApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%', marginLeft: '20px'}}>\r\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>HigherOrderFunction</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <Memoize func={(num) => num * 3}></Memoize>  \r\n\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'HigherOrderFunctionApp.js'}>\r\n        </DialogContainer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HigherOrderFunctionApp;\r\n\r\n","let code = `\r\n\r\nimport React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nconst memoize = (originalFunction) => {\r\n  const cache = {};\r\n\r\n  return function(num) {\r\n    if (cache[num] !== undefined) {\r\n      return cache[num] + ' [cache]';\r\n    }\r\n    else {\r\n      const output = originalFunction(num);\r\n      cache[num] = output;\r\n      return output;\r\n    }\r\n  }\r\n}\r\n\r\nclass Memioze extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: 0,\r\n      input: 0\r\n    }\r\n    this.theFunction = 0;// = memoize(props.func);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.theFunction = memoize(this.props.func);\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState({result: this.theFunction(this.state.input)})\r\n  }\r\n\r\n  onInputChange = (e) => {\r\n    this.setState({input: e.target.value})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h3>Memioze</h3>\r\n        <div style={{marginBottom: '10px'}}>\r\n          <label>Function: </label>\r\n          <label>{this.props.func.toString()}</label>\r\n        </div>\r\n        <label>Input value (num): </label>\r\n        <input style={{marginRight: '10px'}} onChange={this.onInputChange} value={this.state.input}></input>\r\n        <button style={{marginRight: '10px'}} onClick={this.handleClick}>Calculate</button>\r\n        <label>Result: </label>\r\n        <span>{this.state.result}</span>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass HigherOrderFunctionApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n    let array = ['a','b','c'];\r\n\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%', marginLeft: '20px'}}>\r\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Playground!</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <Memioze func={(num) => num * 3}></Memioze>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HigherOrderFunctionApp;\r\n`\r\nexport default code;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js';\r\nimport code from './code-JavaScriptExercises.js';\r\n\r\n\r\nfunction RemoveDuplicatesFromArray(props) {\r\n  let result = '';\r\n  result = [...new Set(props.arr)]; //method #1\r\n  result = props.arr.filter((item, index) => {return props.arr.indexOf(item) === index}); //method #2\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>1. Remove Duplicates From Array ([{props.arr.toString()}]) </p>\r\n      <p className='details'>Method #1: [...new Set(arr)]</p>\r\n      <p className='details'>Method #2: arr.filter((item, index) => arr.indexOf(item) === index)</p>\r\n      <p className='details result'>Result: [{result.toString()}]</p>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nfunction ReplaceValueInArray(props) {\r\n  let originalArr = [...props.arr];\r\n  let index = props.arr.indexOf(props.from);\r\n  props.arr[index] = props.to;\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>2. Replace Value In Array ([{originalArr.toString()}], {props.from}, {props.to}) </p>\r\n      <p className='details'>arr[arr.indexOf('banana')] = 'turnip'</p>\r\n      <p className='details result'>Result: [{props.arr.toString()}]</p>\r\n    </>\r\n  )\r\n} \r\n\r\nfunction MapArrayWithoutMap() {\r\n  var friends = [\r\n    { name: 'John', age: 22 },\r\n    { name: 'Peter', age: 23 },\r\n    { name: 'Mark', age: 24 },\r\n    { name: 'Maria', age: 22 },\r\n    { name: 'Monica', age: 21 },\r\n    { name: 'Martha', age: 19 },\r\n  ]\r\n  let originalArr = Array.from(friends, (item) => {\r\n    return ('{ name: ' + item.name + ', ' + 'age: ' + item.age + '}')\r\n  })\r\n  let result = Array.from(friends, ({name}) => name);\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>3. Map Array Without Map ([{originalArr.toString()}])</p>\r\n      <p className='details'>Array.from(friends, (name) => name)</p>\r\n      <p className='details result'>Result: [{result.toString()}]</p>\r\n    </>\r\n  )\r\n} \r\n\r\nfunction EmptyArray(props) {\r\n  let originalArr = [...props.arr];\r\n  props.arr.length = 0;\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>4. Empty Array ([{originalArr.toString()}])</p>\r\n      <p className='details'>Just set length to 0 </p>\r\n      <p className='details result'>Result: [{props.arr}]</p>\r\n    </>\r\n  )\r\n} \r\n\r\nfunction ConvertArrayToObject(props) {\r\n\r\n  let result = {...props.arr};\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>5. Convert Array To Object ([{props.arr.toString()}])</p>\r\n      <p className='details'>...props.arr</p>\r\n      <p className='details result'>Result: {Object.values(result).toString()}</p>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nfunction FillArrayWithData() {\r\n  let arr = new Array(10).fill('7');\r\n  \r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>6. Fill Array With Data</p>\r\n      <p className='details'>new Array(10).fill('7')</p>\r\n      <p className='details result'>Result: {arr.toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction MergeArrays(props) {\r\n  //Method #1\r\n//  let mergedArr = props.arr1.concat(props.arr2);\r\n  //Method #2\r\n  let mergedArr = [...props.arr1, ...props.arr2];\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>7. Merge Arrays ([{props.arr1.toString()}], [{props.arr2.toString()}])</p>\r\n      <p className='details'>Method #1: arr1.concat(arr2)</p>\r\n      <p className='details'>Method #2: newArr = [...arr1, ...arr2]</p>\r\n      <p className='details result'>Result: [{mergedArr.toString()}]</p>\r\n    </>\r\n    )\r\n}\r\n\r\nfunction IntersectionOfTwoArrays(props) {\r\n  let result = props.arr1.filter((x) => {\r\n    return props.arr2.indexOf(x) !== -1;\r\n  })\r\n\r\n  return (\r\n    <>\r\n        <p id='exerciseDescription'>8. Intersection Of Two Arrays ([{props.arr1.toString()}],[{props.arr2.toString()}])</p>\r\n        <p className='details result'>Result: [{result.toString()}]</p>\r\n    </>\r\n    )\r\n}\r\n\r\nfunction RemoveFalsyValuesFromArray(props) {\r\n  return (\r\n    <div>\r\n      <p id='exerciseDescription'>9. Remove Falsy Values From Array ([{props.arr.toString()}])</p>\r\n      <p className='details'>arr.filter(Boolean)</p>\r\n      <p className='details result'>Result: [{props.arr.filter(Boolean).toString()}]</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction GetRandomValueFromArray (props) {\r\n  let result = props.arr[Math.floor(Math.random() * props.arr.length)]\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>10. Get Random Value From Array ([{props.arr.toString()}])</p>\r\n      <p className='details result'>Result: {result}</p>\r\n    </>\r\n    )\r\n}\r\n\r\nfunction GetHammingDistance(props) {\r\n\r\n  let count = 0;\r\n \r\n\r\n  if ((props.x >= 0 && props.x < 231) && (props.y >= 0 && props.y < 231)) { \r\n    let x2 = (('00000000' + props.x.toString(2)).substr(-8));\r\n    let y2 = (('00000000' + props.y.toString(2)).substr(-8));\r\n    let x2Arr = [...x2];\r\n    let y2Arr = [...y2];\r\n    \r\n    console.log(x2Arr);\r\n    console.log(y2Arr);\r\n\r\n    x2Arr.map((item, index) => {\r\n        if (item != y2Arr[index]) {\r\n            count ++;\r\n        }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>11. Get Hamming distance between two integers ({props.x}, {props.y})</p>\r\n      <p className='details'>The Hamming distance between two integers is the number of positions at which the corresponding bits are different</p>\r\n      <p className='details'>1 (0 0 0 1)</p>\r\n      <p className='details'>4 (0 1 0 0)</p>\r\n      <p className='details'>Result: 2</p>\r\n      <p className='details result'>Result: {count}</p>\r\n    </>\r\n    )\r\n}  \r\n\r\nfunction NimGame(props) {\r\n\r\n  let canIWin = ((props.n % 4) != 0); //if n is evenly divisible by 4 - you will lose\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>12. Nim Game ({props.n})</p>\r\n      <p className='details'>You are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones.</p>\r\n      <p className='details'>The one who removes the last stone will be the winner.</p>\r\n      <p className='details'>You will take the first turn to remove the stones.</p>\r\n      <p className='details'>Ex. If n=4, you can't win.</p>\r\n      <p className='details result'>Result: {canIWin.toString()}</p>\r\n    </>\r\n    )\r\n\r\n}  \r\n\r\n\r\nfunction ReverseArray(props) {\r\n  // let loopCount = Math.floor(props.arr.length / 2);\r\n  // let result = props.arr.slice();\r\n\r\n  // for(let i = 0; i < loopCount; i ++) {\r\n  //   let temp = result[i];\r\n  //   result[i] = result[result.length - 1 - i];\r\n  //   result[result.length - 1 - i] = temp;   \r\n  // }\r\n  // let result = props.arr.reverse();\r\n  let result = props.arr.slice().reverse();\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>12. Reverse Array</p>\r\n      <p className='details'>The old fashioned way - looping and swapping.</p>\r\n      <p className='details'>Or the new fashioned way - let newArr = arr.reverse().</p>\r\n      <p className='details'>Or the don't modify the original way - let newArr = [...arr].reverse().</p>\r\n      <p className='details'>Or the don't modify the original way - let newArr = colors.slice().reverse().</p>\r\n      <p className='details result'>Result: [{result.toString()}]</p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction LastIndexOf(props) {\r\n  let result = props.arr.lastIndexOf(props.val);\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>13. Last Index Of ([{props.arr.toString()}], {props.val})</p>\r\n      <p className='details result'>Result: [{result.toString()}]</p>\r\n    </>\r\n    )\r\n}\r\n\r\nfunction SumAllValuesInArray(props) {\r\n  let result = props.arr.reduce((x,y) => x + y);\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>14. Sum All Values In Array ([{props.arr.toString()}])</p>\r\n      <p className='details'>arr.reduce((x,y) => x + y)</p>\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n    )\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////\r\n\r\nclass LinkedListNode {\r\n  constructor(data) {\r\n      this.data = data;\r\n      this.next = null;\r\n  }\r\n}\r\n\r\nclass LinkedList {\r\n  constructor() {\r\n      this.head = null;\r\n  }\r\n\r\n  add(data) {\r\n    let newNode = new LinkedListNode(data)  \r\n\r\n    if (this.head === null) {\r\n      this.head = newNode;\r\n    }\r\n    else {\r\n      let current = this.head;\r\n      while (current.next !== null) {\r\n        current = current.next;\r\n      }\r\n      current.next = newNode;\r\n    }\r\n  }\r\n}  \r\n\r\nfunction CreateLinkedLists(list1Arr, list2Arr) {\r\n  let lists = {\r\n    list1: null,\r\n    list2: null\r\n  }\r\n  if (list1Arr !== null) {\r\n    lists.list1 = new LinkedList();\r\n    list1Arr.map((x) => lists.list1.add(x))\r\n  }\r\n  if (list2Arr !== null) {\r\n    lists.list2 = new LinkedList();\r\n    list2Arr.map((x) => lists.list2.add(x))\r\n  }\r\n  return lists;\r\n}\r\n\r\nfunction AssembleResult(result) {\r\n  let arr = [];\r\n  let currentNode = result;\r\n  while(currentNode !== null) {\r\n    arr.push(currentNode.data);\r\n    currentNode = currentNode.next;\r\n  }\r\n  return arr;\r\n}\r\n\r\nfunction MergeLinkedLists(props) {    \r\n  let resultHead = null;\r\n\r\n  if ((props.list1Arr.length == 0) && (props.list1Arr.length == 0)) {\r\n    return;\r\n  }\r\n\r\n  let lists = CreateLinkedLists(props.list1Arr, props.list2Arr);\r\n  let currentNode = null; //cNx in diagram\r\n  let otherNode = null;  //oNx in diagram\r\n\r\n  if (lists.list1.head.data <= lists.list2.head.data) { \r\n    currentNode = lists.list1.head;\r\n    otherNode = lists.list2.head\r\n  }\r\n  else {\r\n    currentNode = lists.list2.head;\r\n    otherNode = lists.list1.head;\r\n  }\r\n  resultHead = currentNode;\r\n\r\n  while (currentNode.next !== null) {\r\n    if (otherNode.data <= currentNode.next.data) {\r\n      //save my next, change my next. go to my new next\r\n      let tempNode = currentNode.next;\r\n      currentNode.next = otherNode;\r\n      otherNode = tempNode;\r\n      currentNode = currentNode.next;\r\n    }\r\n    else {\r\n      //go to my next\r\n      currentNode = currentNode.next;\r\n    }\r\n  }\r\n  currentNode.next = otherNode;\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>15. MergeLinkedLists ([{props.list1Arr.toString()}], [{props.list2Arr.toString()}])</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {AssembleResult(resultHead).toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction CreateCycleList(arr) {\r\n  let lists = CreateLinkedLists(arr, null);\r\n  let currentNode = lists.list1.head;\r\n  while (currentNode.next !== null) {\r\n    currentNode = currentNode.next;\r\n  }\r\n  currentNode.next = lists.list1.head;\r\n  return lists.list1.head;\r\n}\r\n\r\n\r\nfunction CreateMergedLists(arr1, arr2) {\r\n  let lists = CreateLinkedLists(arr1, arr2);\r\n\r\n  let currentNode1 = lists.list1.head;\r\n  if (currentNode1.next !== null) {\r\n    currentNode1 = currentNode1.next;\r\n  }\r\n\r\n  let currentNode2 = lists.list2.head;\r\n  if (currentNode2.next !== null) {\r\n    currentNode2 = currentNode2.next;\r\n  }\r\n  currentNode2.next = currentNode1;\r\n\r\n  return lists;  \r\n}\r\n\r\nfunction CycleDetection(props) {    \r\n  let cycle = false;\r\n\r\n  let list = CreateCycleList(props.arr);\r\n  let cache = [];\r\n  let currentNode = list;\r\n  cache.push(currentNode);\r\n  while ((currentNode.next !== null) && (!cache.includes(currentNode.next))) {\r\n    currentNode = currentNode.next;\r\n    cache.push(currentNode);\r\n  }\r\n  if (cache.includes(currentNode.next)) {\r\n    cycle = true;\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>16. CycleDetection ([{props.arr.toString()}])</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {cycle.toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction DeleteDuplicates(props) {\r\n  let lists = CreateLinkedLists(props.arr, null);\r\n\r\n  let currentNode = lists.list1.head;\r\n  while (currentNode.next !== null) {\r\n\r\n    if (currentNode.next.data === currentNode.data) {\r\n      let tempNode = currentNode.next;\r\n\r\n      while ((tempNode.next !== null) && (tempNode.next.data == tempNode.data)) {  \r\n        tempNode = tempNode.next;\r\n      }\r\n      currentNode.next = tempNode.next !== null ? tempNode.next : null;\r\n    }\r\n    else {\r\n      currentNode = currentNode.next;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>17. DeleteDuplicates ([{props.arr.toString()}])</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {AssembleResult(lists.list1.head).toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction MaximumElement(props) {\r\n\r\n  let results = [];\r\n  let stack = [];\r\n\r\n  props.arr.map((item) => {\r\n    switch(item.op) {\r\n      case 1:\r\n        stack.push(item.val);\r\n        break;\r\n      case 2:\r\n        stack.pop();\r\n        break;\r\n      case 3:\r\n        results.push(Math.max(...stack));\r\n    }\r\n  })\r\n\r\n  let originalArr = Array.from(props.arr, (item) => {\r\n    return ('{ op: ' + item.op + ', ' + 'val: ' + item.val + '}')\r\n  })\r\n\r\n  return (\r\n    <>\r\n    <p id='exerciseDescription'>18. MaximumElement (Count: {props.n}, [{originalArr.toString()}])</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {results.toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction MergePoint(props) {\r\n\r\n\r\n  //5 -> 7 -> 10\r\n  //     ^\r\n  //1 -> 4    6\r\n\r\n \r\n  let lists = CreateMergedLists(props.arr1, props.arr2);\r\n  let result = 7;\r\n\r\n  let currentNode1 = lists.list1.head;\r\n  let currentNode2 = lists.list2.head;\r\n  while (currentNode1.next !== null && currentNode2.next !== null) {\r\n    if (currentNode1.next === currentNode2.next) {\r\n      result = currentNode2;\r\n      break;\r\n    }\r\n    else if (currentNode2.next === currentNode1.next) {\r\n      result = currentNode1;\r\n      break;\r\n    }\r\n    currentNode1 = currentNode1.next;\r\n    currentNode2 = currentNode2.next;\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>19. MergePoint ([{props.arr1.toString()}], [{props.arr2.toString()}])</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nfunction SuperReducedString(props) {\r\n  let arr = props.str.split('');\r\n  // let result = arr.join();  \r\n\r\n  let result = [];\r\n  arr.map((item) => {\r\n    if (result.length == 0) {\r\n      result.push(item);\r\n    }\r\n    else if (result[result.length - 1] !== item) {\r\n      result.push(item);\r\n    }\r\n  })\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>20. SuperReducedString ({props.str})</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\nfunction ArrayManipulation(props) {\r\n  let result = 0;\r\n\r\n  let arrResult = Array(props.n).fill(0);\r\n  props.arr.map((item) => {\r\n    for (let i = item[0] - 1; i <= item[1] - 1; i++) {\r\n      arrResult[i] += item[2];\r\n    }\r\n  })\r\n \r\n  result = Math.max(...arrResult);\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>21. ArrayManipulation ({props.n}, {props.arr.toString()} )</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Shuffle(props) {\r\n  let result = [...props.arr];\r\n  var n = result.length, t, i;\r\n  while (n) {\r\n    i = Math.random() * n-- | 0; // 0 ≤ i < n\r\n//    i = Math.floor(Math.random) * n--;\r\n    t = result[n];\r\n    result[n] = result[i];\r\n    result[i] = t;\r\n  }\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>22. Shuffle ({[props.arr.toString()]})</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction BalancedBraces(props) {\r\n  let result = '';\r\n  let stack = [];\r\n  let balanced = true;\r\n\r\n//put string \r\n  let values = props.str.split('');\r\n\r\n  for (let j = 0; j < values.length; j++) {\r\n    if ((values[j] == '{') || (values[j] == '[') || (values[j] == '(')) {\r\n      stack.push(values[j]);\r\n    }\r\n    else if ((values[j] == '}') || (values[j] == ']') || (values[j] == ')')) { \r\n      if (stack.length == 0) {\r\n        balanced = false;\r\n        break;\r\n      }\r\n      if ((values[j] == '}') && (stack[stack.length-1] == '{')) {\r\n        stack.pop();\r\n      }\r\n      else if ((values[j] == ']') && (stack[stack.length-1] == '[')) {\r\n        stack.pop();\r\n      }  \r\n      else if ((values[j] == ')') && (stack[stack.length-1] == '(')) {\r\n        stack.pop();\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!balanced || stack.length != 0) {\r\n    result = 'NO';\r\n  }\r\n  else { \r\n    result = 'YES';\r\n  }\r\n\r\n//  result = (orphanStack.length == 0 ? 'YES' : 'NO');\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>23. Balanced Braces '{[props.str]}'</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\nclass BinaryTreeNode {\r\n  constructor(data) {\r\n      this.data = data;\r\n      this.left = null;\r\n      this.right = null;\r\n  }\r\n}\r\n \r\n\r\nfunction maxDepth(node)  \r\n{  \r\n    if (node !== null) {\r\n      console.log(node.data);\r\n    }\r\n\r\n    if (node == null)  \r\n        return 0;  \r\n    else\r\n    {  \r\n        /* compute the depth of each subtree */\r\n        let lDepth = maxDepth(node.left);  \r\n        let rDepth = maxDepth(node.right);  \r\n      console.log(lDepth, rDepth);\r\n\r\n\r\n\r\n        return Math.max(lDepth, rDepth) + 1;\r\n        // /* use the larger one */\r\n        // if (lDepth > rDepth)  {\r\n        //   return(lDepth + 1);\r\n        // }  \r\n        // else {\r\n        //   return(rDepth + 1);  \r\n        // }\r\n    }  \r\n}  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction BinaryTreeDepth() {\r\n  let result = 0;\r\n\r\n  let root = new BinaryTreeNode(3);  \r\n  \r\n  root.left = new BinaryTreeNode(7);  \r\n  root.right = new BinaryTreeNode(3);  \r\n  root.left.left = new BinaryTreeNode(4);  \r\n  root.left.right = new BinaryTreeNode(5);  \r\n  root.left.right.right = new BinaryTreeNode(9);  \r\n\r\n  result = maxDepth(root);\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>24. Binary Tree Depth</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Countdown(value) {\r\n\r\n  let result = 0;\r\n\r\n  if (value == 0) {\r\n    return;\r\n  }\r\n  Countdown(value - 1);\r\n}\r\n\r\nfunction RecursiveCountdown() {\r\n\r\n  let result = 0;\r\n\r\n  Countdown(10);\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>25. Recursive Countdown</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n  )\r\n\r\n} \r\n\r\n\r\nfunction Pangram(props) {\r\n  let result = 'pangram';\r\n\r\n  let strArr = props.str.split('');\r\n\r\n  let alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\r\n\r\n  for (let i = 0; i < alphabet.length; i++) {\r\n    if (!strArr.includes(alphabet[i])) {\r\n      result = 'not pangram';\r\n      break;\r\n    }\r\n  }\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>26. Pangram '{[props.str]}'</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result}</p>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\nfunction LonelyInteger(props) {\r\n\r\n  let myMap = {};\r\n\r\n  let strArr = props.str.split('');\r\n  strArr.map((item) => {\r\n    myMap[item] = myMap[item] ? myMap[item] + 1 : 1;\r\n  })\r\n\r\n  let result = Object.keys(myMap).find((key, i) => {\r\n    console.log('>' + i);  \r\n    return myMap[key] === 1;\r\n  });\r\n  \r\n\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>27. Lonely Integer '{[props.str]}'</p>\r\n      <p className='details result'>Result: {result}</p>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction InsertionSort(props) {\r\n  \r\n  let result = [];\r\n  let arr = [...props.str];\r\n\r\n  let insertVal = arr[arr.length - 1]\r\n\r\n\r\n  for (let i = arr.length - 1; i >= 0; i--) {\r\n    if (arr[i - 1] > insertVal) {\r\n      arr[i] = arr[i - 1];\r\n      result.push([...arr]);\r\n    }\r\n    else {\r\n      arr[i] = insertVal;\r\n      result.push([...arr]);\r\n      break;\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>28. Insertion Sort '{[props.str]}'</p>\r\n      <p className='details result'>Result: {result.map((v) => '[' + v + '] ')}</p>\r\n    </>\r\n  )\r\n\r\n\r\n}\r\n\r\n\r\nclass x {\r\n  get Y() {return 42;}\r\n}\r\n\r\nfunction TestArea() {\r\n\r\n\r\n \r\n  function MyFunc() {\r\n    let x = 4;\r\n    setTimeout(() => {console.log('timeout ' + x)}, 0)\r\n  }\r\n\r\n  console.log('1');\r\n  MyFunc();\r\n  console.log('2');\r\n\r\n\r\n\r\n  class Creature {\r\n    creatureMethod() {console.log('creature')}\r\n  }\r\n\r\n  class Animal extends Creature {\r\n    animalMethod() {console.log('animal')} \r\n  }\r\n\r\n  class Dog extends Animal {\r\n    dogMethod() {console.log('dog')}\r\n  }\r\n\r\n  let myDog = new Dog();\r\n  myDog.bite = 'teeth';\r\n  console.log(myDog.__proto__ === Dog.prototype);\r\n  console.log(myDog.protoType);\r\n  console.log(myDog.__proto__);\r\n  console.log(myDog.__proto__.__proto__);\r\n  console.log(myDog.__proto__.__proto__.__proto__);\r\n\r\n  let mySecondDog = new Dog();\r\n\r\n  Dog.prototype.poop = function() {console.log('poo')}\r\n\r\n\r\n  myDog.poop();\r\n  mySecondDog.poop();\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>Hi</div>\r\n\r\n  )\r\n}\r\n\r\nclass JavaScriptExercises extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id='mainContainer'>\r\n        {/* <div style={{height: '100%', position: 'absolute', width: '100%', marginLeft: '20px', backgroundColor: '#333333', color: 'white'}}> */}\r\n          <div id='exercisesTitleDiv'>\r\n            <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>JavaScriptExercises</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n          </div>\r\n\r\n          <div id='exercisesMainDiv'>\r\n            <div className='exerciseDiv'>\r\n              <RemoveDuplicatesFromArray arr={[2,3,1,4,3,6,2,9]}></RemoveDuplicatesFromArray>\r\n            </div>  \r\n\r\n            <div className='exerciseDiv'>\r\n              <ReplaceValueInArray arr={['apple', 'orange', 'banana', 'peach' ]} from={'banana'} to={'turnip'}></ReplaceValueInArray>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <MapArrayWithoutMap></MapArrayWithoutMap>\r\n            </div>\r\n            <div className='exerciseDiv'>\r\n              <EmptyArray arr={[1,2,3,4]}></EmptyArray>\r\n            </div>\r\n            <div className='exerciseDiv'>\r\n              <ConvertArrayToObject arr={[1,2,3,4]}></ConvertArrayToObject>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <FillArrayWithData></FillArrayWithData>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <MergeArrays arr1={[1,2,3,4]} arr2={[5,6,7,8]}></MergeArrays>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <IntersectionOfTwoArrays arr1={['a','b','c','d']} arr2={['d','e','f','g','b']}></IntersectionOfTwoArrays>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <RemoveFalsyValuesFromArray arr={[0, 'blue', '', NaN, 9, true, undefined, 'white', false]}></RemoveFalsyValuesFromArray>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <GetRandomValueFromArray arr={['a', 'b', 'c', 'd', 'e', 'f']}></GetRandomValueFromArray>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <GetHammingDistance x={13} y={8}></GetHammingDistance>\r\n            </div>\r\n            \r\n            <div className='exerciseDiv'>\r\n              <NimGame n={2}></NimGame>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <ReverseArray arr={['1', '2', '3', '4']}></ReverseArray>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <LastIndexOf arr={[1, 5, 2, 6, 3, 5, 2, 3, 6, 5, 2, 7]} val={5}></LastIndexOf>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <SumAllValuesInArray arr={[1, 5, 2, 6, 3, 5, 2, 3, 6, 5, 2, 7]}></SumAllValuesInArray>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <MergeLinkedLists list1Arr={[5,7,10]} list2Arr={[1,4,6]}></MergeLinkedLists>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <CycleDetection arr={[5,7,10,3,7]}></CycleDetection>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <DeleteDuplicates arr={[5,7,9,9,10,10]}></DeleteDuplicates>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <MaximumElement n={10} arr={[{op: 1, val: 97}, {op: 2, val: null}, {op: 1, val: 20}, {op: 2, val: null}, {op: 1, val: 26}, {op: 1, val: 20}, {op: 2, val: null}, {op: 3, val: null}, {op: 1, val: 91}, {op: 3, val: null} ]}></MaximumElement>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <MergePoint arr1={[5,7,10]} arr2={[1,4,6]}></MergePoint>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <SuperReducedString str={'abbcbeef'}></SuperReducedString>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <ArrayManipulation n={10} arr={[[1, 2, 100], [2, 5, 100], [3, 4, 100]]}></ArrayManipulation>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <Shuffle arr={[1,2,3,4,5,6,7,8,9,10]}></Shuffle>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <BalancedBraces str={'[()]{)}[]'}></BalancedBraces>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <BinaryTreeDepth></BinaryTreeDepth>\r\n            </div>\r\n            \r\n            <div className='exerciseDiv'>\r\n              <RecursiveCountdown></RecursiveCountdown>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <Pangram str={'The quick bron fox jumps over the lazy dog'}></Pangram>\r\n            </div>\r\n\r\n            \r\n            <div className='exerciseDiv'>\r\n              <LonelyInteger str={'1443321'}></LonelyInteger>\r\n            </div>\r\n            \r\n            <div className='exerciseDiv'>\r\n              <InsertionSort str={'124563'}></InsertionSort>\r\n            </div>\r\n\r\n            <div className='exerciseDiv'>\r\n              <TestArea></TestArea>\r\n            </div>\r\n            \r\n\r\n          </div>\r\n        </div>\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'JavaScriptExercises.js'}>\r\n        </DialogContainer>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default JavaScriptExercises;","let code = `\r\n\r\nimport React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js'\r\nimport code from './code-JavaScriptExercises.js';\r\n\r\n\r\nfunction RemoveDuplicatesFromArray(props) {\r\n  let result = '';\r\n  result = [...new Set(props.arr)]; //method #1\r\n  result = props.arr.filter((item, index) => {return props.arr.indexOf(item) === index}); //method #2\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>1. Remove Duplicates From Array ([{props.arr.toString()}]) </p>\r\n      <p className='details'>Method #1: [...new Set(arr)]</p>\r\n      <p className='details'>Method #2: arr.filter((item, index) => arr.indexOf(item) === index)</p>\r\n      <p className='details result'>Result: [{result.toString()}]</p>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nfunction ReplaceValueInArray(props) {\r\n  let originalArr = [...props.arr];\r\n  let index = props.arr.indexOf(props.from);\r\n  props.arr[index] = props.to;\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>2. Replace Value In Array ([{originalArr.toString()}], {props.from}, {props.to}) </p>\r\n      <p className='details'>arr[arr.indexOf('banana')] = 'turnip'</p>\r\n      <p className='details result'>Result: [{props.arr.toString()}]</p>\r\n    </>\r\n  )\r\n} \r\n\r\nfunction MapArrayWithoutMap() {\r\n  var friends = [\r\n    { name: 'John', age: 22 },\r\n    { name: 'Peter', age: 23 },\r\n    { name: 'Mark', age: 24 },\r\n    { name: 'Maria', age: 22 },\r\n    { name: 'Monica', age: 21 },\r\n    { name: 'Martha', age: 19 },\r\n  ]\r\n  let originalArr = Array.from(friends, (item) => {\r\n    return ('{ name: ' + item.name + ', ' + 'age: ' + item.age + '}')\r\n  })\r\n  let result = Array.from(friends, ({name}) => name);\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>3. Map Array Without Map ([{originalArr.toString()}])</p>\r\n      <p className='details'>Array.from(friends, (name) => name)</p>\r\n      <p className='details result'>Result: [{result.toString()}]</p>\r\n    </>\r\n  )\r\n} \r\n\r\nfunction EmptyArray(props) {\r\n  let originalArr = [...props.arr];\r\n  props.arr.length = 0;\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>4. Empty Array ([{originalArr.toString()}])</p>\r\n      <p className='details'>Just set length to 0 </p>\r\n      <p className='details result'>Result: [{props.arr}]</p>\r\n    </>\r\n  )\r\n} \r\n\r\nfunction ConvertArrayToObject(props) {\r\n\r\n  let result = {...props.arr};\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>5. Convert Array To Object ([{props.arr.toString()}])</p>\r\n      <p className='details'>...props.arr</p>\r\n      <p className='details result'>Result: {Object.values(result).toString()}</p>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nfunction FillArrayWithData() {\r\n  let arr = new Array(10).fill('7');\r\n  \r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>6. Fill Array With Data</p>\r\n      <p className='details'>new Array(10).fill('7')</p>\r\n      <p className='details result'>Result: {arr.toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction MergeArrays(props) {\r\n  //Method #1\r\n//  let mergedArr = props.arr1.concat(props.arr2);\r\n  //Method #2\r\n  let mergedArr = [...props.arr1, ...props.arr2];\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>7. Merge Arrays ([{props.arr1.toString()}], [{props.arr2.toString()}])</p>\r\n      <p className='details'>Method #1: arr1.concat(arr2)</p>\r\n      <p className='details'>Method #2: newArr = [...arr1, ...arr2]</p>\r\n      <p className='details result'>Result: [{mergedArr.toString()}]</p>\r\n    </>\r\n    )\r\n}\r\n\r\nfunction IntersectionOfTwoArrays(props) {\r\n  let result = props.arr1.filter((x) => {\r\n    return props.arr2.indexOf(x) !== -1;\r\n  })\r\n\r\n  return (\r\n    <>\r\n        <p id='exerciseDescription'>8. Intersection Of Two Arrays ([{props.arr1.toString()}],[{props.arr2.toString()}])</p>\r\n        <p className='details result'>Result: [{result.toString()}]</p>\r\n    </>\r\n    )\r\n}\r\n\r\nfunction RemoveFalsyValuesFromArray(props) {\r\n  return (\r\n    <div>\r\n      <p id='exerciseDescription'>9. Remove Falsy Values From Array ([{props.arr.toString()}])</p>\r\n      <p className='details'>arr.filter(Boolean)</p>\r\n      <p className='details result'>Result: [{props.arr.filter(Boolean).toString()}]</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction GetRandomValueFromArray (props) {\r\n  let result = props.arr[Math.floor(Math.random() * props.arr.length)]\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>10. Get Random Value From Array ([{props.arr.toString()}])</p>\r\n      <p className='details result'>Result: {result}</p>\r\n    </>\r\n    )\r\n}\r\n\r\nfunction GetHammingDistance(props) {\r\n\r\n  let count = 0;\r\n \r\n\r\n  if ((props.x >= 0 && props.x < 231) && (props.y >= 0 && props.y < 231)) { \r\n    let x2 = (('00000000' + props.x.toString(2)).substr(-8));\r\n    let y2 = (('00000000' + props.y.toString(2)).substr(-8));\r\n    let x2Arr = [...x2];\r\n    let y2Arr = [...y2];\r\n    \r\n    console.log(x2Arr);\r\n    console.log(y2Arr);\r\n\r\n    x2Arr.map((item, index) => {\r\n        if (item != y2Arr[index]) {\r\n            count ++;\r\n        }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>11. Get Hamming distance between two integers ({props.x}, {props.y})</p>\r\n      <p className='details'>The Hamming distance between two integers is the number of positions at which the corresponding bits are different</p>\r\n      <p className='details'>1 (0 0 0 1)</p>\r\n      <p className='details'>4 (0 1 0 0)</p>\r\n      <p className='details'>Result: 2</p>\r\n      <p className='details result'>Result: {count}</p>\r\n    </>\r\n    )\r\n}  \r\n\r\nfunction NimGame(props) {\r\n\r\n  let canIWin = ((props.n % 4) != 0); //if n is evenly divisible by 4 - you will lose\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>12. Nim Game ({props.n})</p>\r\n      <p className='details'>You are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones.</p>\r\n      <p className='details'>The one who removes the last stone will be the winner.</p>\r\n      <p className='details'>You will take the first turn to remove the stones.</p>\r\n      <p className='details'>Ex. If n=4, you can't win.</p>\r\n      <p className='details result'>Result: {canIWin.toString()}</p>\r\n    </>\r\n    )\r\n\r\n}  \r\n\r\n\r\nfunction ReverseArray(props) {\r\n  // let loopCount = Math.floor(props.arr.length / 2);\r\n  // let result = props.arr.slice();\r\n\r\n  // for(let i = 0; i < loopCount; i ++) {\r\n  //   let temp = result[i];\r\n  //   result[i] = result[result.length - 1 - i];\r\n  //   result[result.length - 1 - i] = temp;   \r\n  // }\r\n  // let result = props.arr.reverse();\r\n  let result = props.arr.slice().reverse();\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>12. Reverse Array</p>\r\n      <p className='details'>The old fashioned way - looping and swapping.</p>\r\n      <p className='details'>Or the new fashioned way - let newArr = arr.reverse().</p>\r\n      <p className='details'>Or the don't modify the original way - let newArr = [...arr].reverse().</p>\r\n      <p className='details'>Or the don't modify the original way - let newArr = colors.slice().reverse().</p>\r\n      <p className='details result'>Result: [{result.toString()}]</p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction LastIndexOf(props) {\r\n  let result = props.arr.lastIndexOf(props.val);\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>13. Last Index Of ([{props.arr.toString()}], {props.val})</p>\r\n      <p className='details result'>Result: [{result.toString()}]</p>\r\n    </>\r\n    )\r\n}\r\n\r\nfunction SumAllValuesInArray(props) {\r\n  let result = props.arr.reduce((x,y) => x + y);\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>14. Sum All Values In Array ([{props.arr.toString()}])</p>\r\n      <p className='details'>arr.reduce((x,y) => x + y)</p>\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n    )\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////\r\n\r\nclass LinkedListNode {\r\n  constructor(data) {\r\n      this.data = data;\r\n      this.next = null;\r\n  }\r\n}\r\n\r\nclass LinkedList {\r\n  constructor() {\r\n      this.head = null;\r\n  }\r\n\r\n  add(data) {\r\n    let newNode = new LinkedListNode(data)  \r\n\r\n    if (this.head === null) {\r\n      this.head = newNode;\r\n    }\r\n    else {\r\n      let current = this.head;\r\n      while (current.next !== null) {\r\n        current = current.next;\r\n      }\r\n      current.next = newNode;\r\n    }\r\n  }\r\n}  \r\n\r\nfunction CreateLinkedLists(list1Arr, list2Arr) {\r\n  let lists = {\r\n    list1: null,\r\n    list2: null\r\n  }\r\n  if (list1Arr !== null) {\r\n    lists.list1 = new LinkedList();\r\n    list1Arr.map((x) => lists.list1.add(x))\r\n  }\r\n  if (list2Arr !== null) {\r\n    lists.list2 = new LinkedList();\r\n    list2Arr.map((x) => lists.list2.add(x))\r\n  }\r\n  return lists;\r\n}\r\n\r\nfunction AssembleResult(result) {\r\n  let arr = [];\r\n  let currentNode = result;\r\n  while(currentNode !== null) {\r\n    arr.push(currentNode.data);\r\n    currentNode = currentNode.next;\r\n  }\r\n  return arr;\r\n}\r\n\r\nfunction MergeLinkedLists(props) {    \r\n  let resultHead = null;\r\n\r\n  if ((props.list1Arr.length == 0) && (props.list1Arr.length == 0)) {\r\n    return;\r\n  }\r\n\r\n  let lists = CreateLinkedLists(props.list1Arr, props.list2Arr);\r\n  let currentNode = null; //cNx in diagram\r\n  let otherNode = null;  //oNx in diagram\r\n\r\n  if (lists.list1.head.data <= lists.list2.head.data) { \r\n    currentNode = lists.list1.head;\r\n    otherNode = lists.list2.head\r\n  }\r\n  else {\r\n    currentNode = lists.list2.head;\r\n    otherNode = lists.list1.head;\r\n  }\r\n  resultHead = currentNode;\r\n\r\n  while (currentNode.next !== null) {\r\n    if (otherNode.data <= currentNode.next.data) {\r\n      //save my next, change my next. go to my new next\r\n      let tempNode = currentNode.next;\r\n      currentNode.next = otherNode;\r\n      otherNode = tempNode;\r\n      currentNode = currentNode.next;\r\n    }\r\n    else {\r\n      //go to my next\r\n      currentNode = currentNode.next;\r\n    }\r\n  }\r\n  currentNode.next = otherNode;\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>15. MergeLinkedLists ([{props.list1Arr.toString()}], [{props.list2Arr.toString()}])</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {AssembleResult(resultHead).toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction CreateCycleList(arr) {\r\n  let lists = CreateLinkedLists(arr, null);\r\n  let currentNode = lists.list1.head;\r\n  while (currentNode.next !== null) {\r\n    currentNode = currentNode.next;\r\n  }\r\n  currentNode.next = lists.list1.head;\r\n  return lists.list1.head;\r\n}\r\n\r\n\r\nfunction CreateMergedLists(arr1, arr2) {\r\n  let lists = CreateLinkedLists(arr1, arr2);\r\n\r\n  let currentNode1 = lists.list1.head;\r\n  if (currentNode1.next !== null) {\r\n    currentNode1 = currentNode1.next;\r\n  }\r\n\r\n  let currentNode2 = lists.list2.head;\r\n  if (currentNode2.next !== null) {\r\n    currentNode2 = currentNode2.next;\r\n  }\r\n  currentNode2.next = currentNode1;\r\n\r\n  return lists;  \r\n}\r\n\r\nfunction CycleDetection(props) {    \r\n  let cycle = false;\r\n\r\n  let list = CreateCycleList(props.arr);\r\n  let cache = [];\r\n  let currentNode = list;\r\n  cache.push(currentNode);\r\n  while ((currentNode.next !== null) && (!cache.includes(currentNode.next))) {\r\n    currentNode = currentNode.next;\r\n    cache.push(currentNode);\r\n  }\r\n  if (cache.includes(currentNode.next)) {\r\n    cycle = true;\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>16. CycleDetection ([{props.arr.toString()}])</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {cycle.toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction DeleteDuplicates(props) {\r\n  let lists = CreateLinkedLists(props.arr, null);\r\n\r\n  let currentNode = lists.list1.head;\r\n  while (currentNode.next !== null) {\r\n\r\n    if (currentNode.next.data === currentNode.data) {\r\n      let tempNode = currentNode.next;\r\n\r\n      while ((tempNode.next !== null) && (tempNode.next.data == tempNode.data)) {  \r\n        tempNode = tempNode.next;\r\n      }\r\n      currentNode.next = tempNode.next !== null ? tempNode.next : null;\r\n    }\r\n    else {\r\n      currentNode = currentNode.next;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>17. DeleteDuplicates ([{props.arr.toString()}])</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {AssembleResult(lists.list1.head).toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction MaximumElement(props) {\r\n\r\n  let results = [];\r\n  let stack = [];\r\n\r\n  props.arr.map((item) => {\r\n    switch(item.op) {\r\n      case 1:\r\n        stack.push(item.val);\r\n        break;\r\n      case 2:\r\n        stack.pop();\r\n        break;\r\n      case 3:\r\n        results.push(Math.max(...stack));\r\n    }\r\n  })\r\n\r\n  let originalArr = Array.from(props.arr, (item) => {\r\n    return ('{ op: ' + item.op + ', ' + 'val: ' + item.val + '}')\r\n  })\r\n\r\n  return (\r\n    <>\r\n    <p id='exerciseDescription'>18. MaximumElement (Count: {props.n}, [{originalArr.toString()}])</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {results.toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction MergePoint(props) {\r\n\r\n\r\n  //5 -> 7 -> 10\r\n  //     ^\r\n  //1 -> 4    6\r\n\r\n \r\n  let lists = CreateMergedLists(props.arr1, props.arr2);\r\n  let result = 7;\r\n\r\n  let currentNode1 = lists.list1.head;\r\n  let currentNode2 = lists.list2.head;\r\n  while (currentNode1.next !== null && currentNode2.next !== null) {\r\n    if (currentNode1.next === currentNode2.next) {\r\n      result = currentNode2;\r\n      break;\r\n    }\r\n    else if (currentNode2.next === currentNode1.next) {\r\n      result = currentNode1;\r\n      break;\r\n    }\r\n    currentNode1 = currentNode1.next;\r\n    currentNode2 = currentNode2.next;\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>19. MergePoint ([{props.arr1.toString()}], [{props.arr2.toString()}])</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nfunction SuperReducedString(props) {\r\n  let arr = props.str.split('');\r\n  // let result = arr.join();  \r\n\r\n  let result = [];\r\n  arr.map((item) => {\r\n    if (result.length == 0) {\r\n      result.push(item);\r\n    }\r\n    else if (result[result.length - 1] !== item) {\r\n      result.push(item);\r\n    }\r\n  })\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>20. SuperReducedString ({props.str})</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\nfunction ArrayManipulation(props) {\r\n  let result = 0;\r\n\r\n  let arrResult = Array(props.n).fill(0);\r\n  props.arr.map((item) => {\r\n    for (let i = item[0] - 1; i <= item[1] - 1; i++) {\r\n      arrResult[i] += item[2];\r\n    }\r\n  })\r\n \r\n  result = Math.max(...arrResult);\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>21. ArrayManipulation ({props.n}, {props.arr.toString()} )</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Shuffle(props) {\r\n  let result = [...props.arr];\r\n  var n = result.length, t, i;\r\n  while (n) {\r\n    i = Math.random() * n-- | 0; // 0 ≤ i < n\r\n//    i = Math.floor(Math.random) * n--;\r\n    t = result[n];\r\n    result[n] = result[i];\r\n    result[i] = t;\r\n  }\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>22. Shuffle ({[props.arr.toString()]})</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction BalancedBraces(props) {\r\n  let result = '';\r\n  let stack = [];\r\n  let balanced = true;\r\n\r\n//put string \r\n  let values = props.str.split('');\r\n\r\n  for (let j = 0; j < values.length; j++) {\r\n    if ((values[j] == '{') || (values[j] == '[') || (values[j] == '(')) {\r\n      stack.push(values[j]);\r\n    }\r\n    else if ((values[j] == '}') || (values[j] == ']') || (values[j] == ')')) { \r\n      if (stack.length == 0) {\r\n        balanced = false;\r\n        break;\r\n      }\r\n      if ((values[j] == '}') && (stack[stack.length-1] == '{')) {\r\n        stack.pop();\r\n      }\r\n      else if ((values[j] == ']') && (stack[stack.length-1] == '[')) {\r\n        stack.pop();\r\n      }  \r\n      else if ((values[j] == ')') && (stack[stack.length-1] == '(')) {\r\n        stack.pop();\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!balanced || stack.length != 0) {\r\n    result = 'NO';\r\n  }\r\n  else { \r\n    result = 'YES';\r\n  }\r\n\r\n//  result = (orphanStack.length == 0 ? 'YES' : 'NO');\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>23. Balanced Braces '{[props.str]}'</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\nclass BinaryTreeNode {\r\n  constructor(data) {\r\n      this.data = data;\r\n      this.left = null;\r\n      this.right = null;\r\n  }\r\n}\r\n \r\n\r\nfunction maxDepth(node)  \r\n{  \r\n    if (node !== null) {\r\n      console.log(node.data);\r\n    }\r\n\r\n    if (node == null)  \r\n        return 0;  \r\n    else\r\n    {  \r\n        /* compute the depth of each subtree */\r\n        let lDepth = maxDepth(node.left);  \r\n        let rDepth = maxDepth(node.right);  \r\n      console.log(lDepth, rDepth);\r\n\r\n\r\n\r\n        return Math.max(lDepth, rDepth) + 1;\r\n        // /* use the larger one */\r\n        // if (lDepth > rDepth)  {\r\n        //   return(lDepth + 1);\r\n        // }  \r\n        // else {\r\n        //   return(rDepth + 1);  \r\n        // }\r\n    }  \r\n}  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction BinaryTreeDepth() {\r\n  let result = 0;\r\n\r\n  let root = new BinaryTreeNode(3);  \r\n  \r\n  root.left = new BinaryTreeNode(7);  \r\n  root.right = new BinaryTreeNode(3);  \r\n  root.left.left = new BinaryTreeNode(4);  \r\n  root.left.right = new BinaryTreeNode(5);  \r\n  root.left.right.right = new BinaryTreeNode(9);  \r\n\r\n  result = maxDepth(root);\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>24. Binary Tree Depth</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Countdown(value) {\r\n\r\n  let result = 0;\r\n\r\n  if (value == 0) {\r\n    return;\r\n  }\r\n  Countdown(value - 1);\r\n}\r\n\r\nfunction RecursiveCountdown() {\r\n\r\n  let result = 0;\r\n\r\n  Countdown(10);\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>25. Recursive Countdown</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result.toString()}</p>\r\n    </>\r\n  )\r\n\r\n} \r\n\r\n\r\nfunction Pangram(props) {\r\n  let result = 'pangram';\r\n\r\n  let strArr = props.str.split('');\r\n\r\n  let alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\r\n\r\n  for (let i = 0; i < alphabet.length; i++) {\r\n    if (!strArr.includes(alphabet[i])) {\r\n      result = 'not pangram';\r\n      break;\r\n    }\r\n  }\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>26. Pangram '{[props.str]}'</p>\r\n      {/* <p className='details result'>Result: {JSON.stringify(lists)}</p> */}\r\n      <p className='details result'>Result: {result}</p>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\nfunction LonelyInteger(props) {\r\n\r\n  let myMap = {};\r\n\r\n  let strArr = props.str.split('');\r\n  strArr.map((item) => {\r\n    myMap[item] = myMap[item] ? myMap[item] + 1 : 1;\r\n  })\r\n\r\n  let result = Object.keys(myMap).find((key, i) => {\r\n    console.log('>' + i);  \r\n    return myMap[key] === 1;\r\n  });\r\n  \r\n\r\n\r\n  return ( \r\n    <>\r\n      <p id='exerciseDescription'>27. Lonely Integer '{[props.str]}'</p>\r\n      <p className='details result'>Result: {result}</p>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nfunction InsertionSort(props) {\r\n  \r\n  let result = [];\r\n  let arr = [...props.str];\r\n\r\n  let insertVal = arr[arr.length - 1]\r\n\r\n\r\n  for (let i = arr.length - 1; i >= 0; i--) {\r\n    if (arr[i - 1] > insertVal) {\r\n      arr[i] = arr[i - 1];\r\n      result.push([...arr]);\r\n    }\r\n    else {\r\n      arr[i] = insertVal;\r\n      result.push([...arr]);\r\n      break;\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <p id='exerciseDescription'>28. Insertion Sort '{[props.str]}'</p>\r\n      <p className='details result'>Result: {result.map((v) => '[' + v + '] ')}</p>\r\n    </>\r\n  )\r\n\r\n\r\n}\r\n\r\n\r\nclass x {\r\n  get Y() {return 42;}\r\n}\r\n\r\nfunction TestArea() {\r\n\r\n\r\n  /////////////////////////\r\n\r\n  function MyFunc() {\r\n    let x = 4;\r\n    setTimeout(() => {console.log('timeout ' + x)}, 0)\r\n  }\r\n\r\n  console.log('1');\r\n  MyFunc();\r\n  console.log('2');\r\n\r\n\r\n\r\n  class Creature {\r\n    creatureMethod() {console.log('creature')}\r\n  }\r\n\r\n  class Animal extends Creature {\r\n    animalMethod() {console.log('animal')} \r\n  }\r\n\r\n  class Dog extends Animal {\r\n    dogMethod() {console.log('dog')}\r\n  }\r\n\r\n  let myDog = new Dog();\r\n  myDog.bite = 'teeth';\r\n  console.log(myDog.__proto__ === Dog.prototype);\r\n  console.log(myDog.protoType);\r\n  console.log(myDog.__proto__);\r\n  console.log(myDog.__proto__.__proto__);\r\n  console.log(myDog.__proto__.__proto__.__proto__);\r\n\r\n  let mySecondDog = new Dog();\r\n\r\n  Dog.prototype.poop = function() {console.log('poo')}\r\n\r\n\r\n  myDog.poop();\r\n  mySecondDog.poop();\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>Hi</div>\r\n\r\n  )\r\n}\r\n\r\nclass JavaScriptExercises extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='mainContainer'>\r\n      {/* <div style={{height: '100%', position: 'absolute', width: '100%', marginLeft: '20px', backgroundColor: '#333333', color: 'white'}}> */}\r\n        <div id='exercisesTitleDiv'>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>JavaScriptExercises</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n\r\n        <div id='exercisesMainDiv'>\r\n          <div className='exerciseDiv'>\r\n            <RemoveDuplicatesFromArray arr={[2,3,1,4,3,6,2,9]}></RemoveDuplicatesFromArray>\r\n          </div>  \r\n\r\n          <div className='exerciseDiv'>\r\n            <ReplaceValueInArray arr={['apple', 'orange', 'banana', 'peach' ]} from={'banana'} to={'turnip'}></ReplaceValueInArray>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <MapArrayWithoutMap></MapArrayWithoutMap>\r\n          </div>\r\n          <div className='exerciseDiv'>\r\n            <EmptyArray arr={[1,2,3,4]}></EmptyArray>\r\n          </div>\r\n          <div className='exerciseDiv'>\r\n            <ConvertArrayToObject arr={[1,2,3,4]}></ConvertArrayToObject>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <FillArrayWithData></FillArrayWithData>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <MergeArrays arr1={[1,2,3,4]} arr2={[5,6,7,8]}></MergeArrays>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <IntersectionOfTwoArrays arr1={['a','b','c','d']} arr2={['d','e','f','g','b']}></IntersectionOfTwoArrays>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <RemoveFalsyValuesFromArray arr={[0, 'blue', '', NaN, 9, true, undefined, 'white', false]}></RemoveFalsyValuesFromArray>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <GetRandomValueFromArray arr={['a', 'b', 'c', 'd', 'e', 'f']}></GetRandomValueFromArray>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <GetHammingDistance x={13} y={8}></GetHammingDistance>\r\n          </div>\r\n          \r\n          <div className='exerciseDiv'>\r\n            <NimGame n={2}></NimGame>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <ReverseArray arr={['1', '2', '3', '4']}></ReverseArray>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <LastIndexOf arr={[1, 5, 2, 6, 3, 5, 2, 3, 6, 5, 2, 7]} val={5}></LastIndexOf>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <SumAllValuesInArray arr={[1, 5, 2, 6, 3, 5, 2, 3, 6, 5, 2, 7]}></SumAllValuesInArray>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <MergeLinkedLists list1Arr={[5,7,10]} list2Arr={[1,4,6]}></MergeLinkedLists>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <CycleDetection arr={[5,7,10,3,7]}></CycleDetection>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <DeleteDuplicates arr={[5,7,9,9,10,10]}></DeleteDuplicates>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <MaximumElement n={10} arr={[{op: 1, val: 97}, {op: 2, val: null}, {op: 1, val: 20}, {op: 2, val: null}, {op: 1, val: 26}, {op: 1, val: 20}, {op: 2, val: null}, {op: 3, val: null}, {op: 1, val: 91}, {op: 3, val: null} ]}></MaximumElement>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <MergePoint arr1={[5,7,10]} arr2={[1,4,6]}></MergePoint>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <SuperReducedString str={'abbcbeef'}></SuperReducedString>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <ArrayManipulation n={10} arr={[[1, 2, 100], [2, 5, 100], [3, 4, 100]]}></ArrayManipulation>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <Shuffle arr={[1,2,3,4,5,6,7,8,9,10]}></Shuffle>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <BalancedBraces str={'[()]{)}[]'}></BalancedBraces>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <BinaryTreeDepth></BinaryTreeDepth>\r\n          </div>\r\n          \r\n          <div className='exerciseDiv'>\r\n            <RecursiveCountdown></RecursiveCountdown>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <Pangram str={'The quick bron fox jumps over the lazy dog'}></Pangram>\r\n          </div>\r\n\r\n          \r\n          <div className='exerciseDiv'>\r\n            <LonelyInteger str={'1443321'}></LonelyInteger>\r\n          </div>\r\n          \r\n          <div className='exerciseDiv'>\r\n            <InsertionSort str={'124563'}></InsertionSort>\r\n          </div>\r\n\r\n          <div className='exerciseDiv'>\r\n            <TestArea></TestArea>\r\n          </div>\r\n          \r\n\r\n        </div>\r\n\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'JavaScriptExercises.js'}>\r\n        </DialogContainer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default JavaScriptExercises;\r\n`\r\nexport default code;\r\n\r\n","\r\nlet code = `\r\nimport React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\nimport { bounce, shake, hinge } from 'react-animations';\r\nimport styled, {keyframes} from 'styled-components';\r\nimport DialogContainer from './DialogContainer';\r\nimport './DialogContainer.css';\r\n\r\n\r\nfunction HingeText(props) {\r\n\r\n  return (\r\n    <div style={{marginLeft: '500px', marginTop: '250px', width: '150px', border: '3px solid black'}}>\r\n        <pre>\r\n          <code>\r\n            {code}\r\n          </code>\r\n        </pre>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Dummy() {\r\n  return (\r\n    <pre>\r\n      <code>\r\n    <div>{code}</div>\r\n      </code>\r\n    </pre>\r\n  )\r\n}\r\n\r\n\r\n\r\nclass PlaygroundApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.goCode = this.goCode.bind(this);\r\n    this.onCancelLogout = this.onCancelLogout.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  goCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelLogout() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <span style={{marginLeft: '50px'}}><button onClick={this.goBack}>Back</button><button onClick={this.goCode}>Code</button><label style={{fontSize: '24pt', marginLeft: '200px'}}>Playground!</label></span>\r\n        <HingeText>\r\n          Hello\r\n        </HingeText>\r\n      \r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelLogout} dialogContent={<Dummy \r\n          onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='1000px' title={'Code'}></DialogContainer>\r\n\r\n\r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PlaygroundApp;\r\n`\r\nexport default code;","import React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport { bounce, shake, hinge } from 'react-animations';\nimport styled, {keyframes} from 'styled-components';\n\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-playground.js';\n\nimport {useState, useEffect} from 'react';\n\nconst Bounce = styled.div`animation: 1S ${keyframes`${bounce}`} infinite`;\nconst Shake = styled.div`animation: 2S ${keyframes`${shake}`} infinite`;\nconst Hinge = styled.div`animation: 4S ${keyframes`${hinge}`} infinite`;\n\nfunction HingeText(props) {\n  return (\n    <div style={{marginLeft: '500px', marginTop: '250px', width: '150px', border: '3px solid black'}}>\n      <Hinge>\n        <div style={{fontSize:'48pt'}}>{props.children}</div>\n      </Hinge>\n    </div>\n  )\n}\n\n//useStateHook\nconst Recruit = (props) => {\n  const [count, setCount] = useState({vvalue: 2});\n  const handleClick = () => {\n    setCount((count.vvalue + 1) % props.array.length)\n  }\n  return (\n    <div>\n      <button onClick={handleClick}>useStateHook</button>\n      <span> {props.array[count.vvalue]}</span>\n    </div>\n  )\n}\n\n\n\n// class TestClass {\n//   constructor() {\n//     this.x = 'hello';  \n//   }\n\n//   method1() {\n//     console.log(this.x);\n//   }\n// }\n\n// let tc = new TestClass();\n// tc.method1();\n// // innerFunc(); //undefined\n\n\n// let x = 7;\n// function TestFunc() {\n//   let x = 'see ya later';\n\n//   function innerFunc() {  \n//     console.log(this.x);\n//   }\n//   innerFunc();\n\n// }\n// TestFunc();\n\n\n\n\n\nclass MiscApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.openDisplayCode = this.openDisplayCode.bind(this);\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\n    this.state = {\n      showCode: false\n    }\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  openDisplayCode() {\n    this.setState({showCode: true});\n  }\n\n  onCancelDisplayCode() {\n    this.setState({showCode: false});\n  }\n\n  render() {\n    let array = ['a','b','c'];\n\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Misc</label><button onClick={this.openDisplayCode}>Code</button></span>\n        </div>\n\n        <HingeText>\n          Hello\n        </HingeText>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n          width='1000px' height='700px' title={'MiscApp.js'}>\n        </DialogContainer>\n\n        <Recruit array={array}>\n        </Recruit>\n\n     </div>\n    )\n  }\n}\n\n\nexport default MiscApp;\n","\nimport React, {useContext} from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeHooksAndContextApp.js';\n\n\nconst userContext = React.createContext();\n\n//does NOT use context\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node'  className='G1' style={{backgroundColor: 'lightgreen'}}>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  const data = useContext(userContext);\n\n  return (\n    <div id='grandchild22Node'  className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n        {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={data.update}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{data.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  const data = useContext(userContext);\n  return (\n    <div id='child1Node'  className='C1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={data.update}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{data.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nclass Child2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n\n  //this doesn't work in classes\n  //const data = useContext(userContext);\n  \n  //should use this, but it doesn't work - yet\n  //static contextType = userContext\n\n  render() {\n    return (  \n      <userContext.Consumer>\n        {(data) => {\n          return (\n\n            <>\n              <div id='child2Node'  className='C2'>\n                <div className='content'>\n                  <div className='titleRow'>\n                    {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state/ctx)</b>\n                  </div>\n                  <br/>\n                  <div className='buttonRow'>\n                    <button onClick={data.update}>Click</button>\n                  </div>\n                  <div className='valueRow'>\n                    <p>{data.count}</p>\n                  </div>\n                </div>\n              </div>\n              <GrandChild1 name={'Grandchild1'} onClick={this.handleClick} value={this.state.count}></GrandChild1>\n              <GrandChild2 name={'Grandchild2'}></GrandChild2>\n            </>  \n          )\n        }}\n      </userContext.Consumer>\n    )\n  }\n}\n\nfunction Context(props) {\n  return (\n    <div id='contextNode' className='CON'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <div className='titleRow'>\n          createContext()\n        </div>\n        <div className='titleRow'>\n          Provider\n        </div>\n        <div className='titleRow'>\n          Consumer/useContext\n        </div>\n        <br/>\n      </div>\n    </div>\n  )\n}\n\n\nclass Parent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      update: () => {\n        this.setState((prev) => {\n          return {count: prev.count + 1}; \n        })\n      }\n    }\n  }\n\n  //this doesn't work in classes\n  //const data = useContext(userContext);\n  \n  //should use this, but it doesn't work - yet\n  //static contextType = userContext\n\n  render() {\n    return (\n      <>\n        <userContext.Provider value={this.state}>\n          <userContext.Consumer>\n            {(data) => {\n              return (\n                <>\n                  {console.log(this.context)}\n                  <div id='parentNode' className='P'>\n                    <div className='content'>\n                      <div className='titleRow'>\n                        {this.props.name}\n                      </div>\n                      <div className='titleRow'>\n                        <b style={{color: 'red', paddingLeft: '5px'}}>(state(provider)/ctx)</b>\n                      </div>\n                      <br/>\n                      <div className='buttonRow'>\n                        <button onClick={data.update}>Click</button>\n                      </div>\n                      <div className='valueRow'>\n                        <p>{data.count}</p>\n                      </div>\n                    </div>\n                  </div>\n                  <Context name={'context'}></Context>\n                  <Child1 name={'Child1'}></Child1>\n                  <Child2 name={'Child2'}></Child2>\n                  <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                </>\n              )\n            }}\n            </userContext.Consumer>\n        </userContext.Provider>   \n      </>\n    )\n  }\n}\n\nclass ReactTreeHooksAndContextApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.openDisplayCode = this.openDisplayCode.bind(this);\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\n    this.state = {\n      showCode: false\n    }\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  openDisplayCode() {\n    this.setState({showCode: true});\n  }\n\n  onCancelDisplayCode() {\n    this.setState({showCode: false});\n  }\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Hooks + Context</label><button onClick={this.openDisplayCode}>Code</button></span>\n        </div>\n        <Parent name={'Parent'}></Parent>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n        width='1000px' height='700px' title={'ReactTreeHooksAndContextApp.js'}></DialogContainer>\n      </div>\n    )\n  }\n}\n\n\n\nexport default ReactTreeHooksAndContextApp;\n","let code = `\nimport React, {useContext} from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\nimport {Line, LineTo, SteppedLineTo} from 'react-lineto';\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js'\nimport code from './code-ReactTreeHooksAndContextApp.js';\n\n\nconst userContext = React.createContext();\n\n//does NOT use context\nfunction GrandChild1(props) {\n  return (\n    <div id='grandchild21Node'  className='G1' style={{backgroundColor: 'lightgreen'}}>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={props.onClick}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{props.value}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction GrandChild2(props) {\n  const data = useContext(userContext);\n\n  return (\n    <div id='grandchild22Node'  className='G2'>\n      <div className='content'>\n        <div className='titleRow'>\n        {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={data.update}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{data.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Child1(props) {\n  const data = useContext(userContext);\n  return (\n    <div id='child1Node'  className='C1'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(ctx)</b>\n        </div>\n        <br/>\n        <div className='buttonRow'>\n          <button onClick={data.update}>Click</button>\n        </div>\n        <div className='valueRow'>\n          <p>{data.count}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nclass Child2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    this.setState((prev) => {\n      return {count: prev.count + 1}; \n    });\n  }\n\n  handleClick() {\n    setTimeout(this.myFunction, 300)\n  }\n\n  //this doesn't work in classes\n  //const data = useContext(userContext);\n  \n  //should use this, but it doesn't work - yet\n  //static contextType = userContext\n\n  render() {\n    return (  \n      <userContext.Consumer>\n        {(data) => {\n          return (\n\n            <>\n              <div id='child2Node'  className='C2'>\n                <div className='content'>\n                  <div className='titleRow'>\n                    {this.props.name}<b style={{color: 'red', paddingLeft: '5px'}}>(state/ctx)</b>\n                  </div>\n                  <br/>\n                  <div className='buttonRow'>\n                    <button onClick={data.update}>Click</button>\n                  </div>\n                  <div className='valueRow'>\n                    <p>{data.count}</p>\n                  </div>\n                </div>\n              </div>\n              <GrandChild1 name={'Grandchild1'} onClick={this.handleClick} value={this.state.count}></GrandChild1>\n              <GrandChild2 name={'Grandchild2'}></GrandChild2>\n            </>  \n          )\n        }}\n      </userContext.Consumer>\n    )\n  }\n}\n\nfunction Context(props) {\n  return (\n    <div id='contextNode' className='CON'>\n      <div className='content'>\n        <div className='titleRow'>\n          {props.name}\n        </div>\n        <div className='titleRow'>\n          createContext()\n        </div>\n        <div className='titleRow'>\n          Provider\n        </div>\n        <div className='titleRow'>\n          Consumer/useContext\n        </div>\n        <br/>\n      </div>\n    </div>\n  )\n}\n\n\nclass Parent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      update: () => {\n        this.setState((prev) => {\n          return {count: prev.count + 1}; \n        })\n      }\n    }\n  }\n\n  //this doesn't work in classes\n  //const data = useContext(userContext);\n  \n  //should use this, but it doesn't work - yet\n  //static contextType = userContext\n\n  render() {\n    return (\n      <>\n        <userContext.Provider value={this.state}>\n          <userContext.Consumer>\n            {(data) => {\n              return (\n                <>\n                  {console.log(this.context)}\n                  <div id='parentNode' className='P'>\n                    <div className='content'>\n                      <div className='titleRow'>\n                        {this.props.name}\n                      </div>\n                      <div className='titleRow'>\n                        <b style={{color: 'red', paddingLeft: '5px'}}>(state(provider)/ctx)</b>\n                      </div>\n                      <br/>\n                      <div className='buttonRow'>\n                        <button onClick={data.update}>Click</button>\n                      </div>\n                      <div className='valueRow'>\n                        <p>{data.count}</p>\n                      </div>\n                    </div>\n                  </div>\n                  <Context name={'context'}></Context>\n                  <Child1 name={'Child1'}></Child1>\n                  <Child2 name={'Child2'}></Child2>\n                  <SteppedLineTo from=\"P\" to=\"C2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"P\" to=\"C1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G1\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                  <SteppedLineTo from=\"C2\" to=\"G2\" borderColor=\"#000\" borderStyle=\"solid\" borderWidth={1} fromAnchor=\"bottom center\" toAnchor=\"top center\" delay='0'/>\n                </>\n              )\n            }}\n            </userContext.Consumer>\n        </userContext.Provider>   \n      </>\n    )\n  }\n}\n\nclass ReactTreeHooksAndContextApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  render() {\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%', border: '3px solid white'}}>\n        <span style={{marginLeft: '50px'}}><button onClick={this.goBack}>Back</button><button onClick={this.openDisplayCode}>Code</button><label style={{fontSize: '24pt', marginLeft: '200px'}}>Hooks + Context</label></span>\n        <Parent name={'Parent'}></Parent>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n        width='1000px' height='700px' title={'ReactTreeHooksAndContextApp.js'}></DialogContainer>\n      </div>\n    )\n  }\n}\n\n\n\nexport default ReactTreeHooksAndContextApp;\n`\nexport default code;\n","let code = `\r\nimport React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js';\r\nimport code from './code-playground.js';\r\nimport * as d3 from \"d3\";\r\n\r\n\r\nimport { range as d3range } from \"d3-array\";\r\nimport { randomNormal as d3randomNormal } from \"d3-random\";\r\nimport { color } from 'd3';\r\n\r\nclass D3Circles extends React.Component {\r\n  constructor(props) { \r\n    super(props);\r\n    this.timer = null;\r\n    this.state = {\r\n      data: []\r\n    };\r\n  }\r\n\r\n  getData = (totalPoints = 100) => {\r\n    return (  \r\n      d3range(totalPoints).map((d, i) => {\r\n        return { x: d, y: d3randomNormal()()};\r\n      })\r\n    )\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.timer = setInterval(() => {\r\n      this.setState({data: this.getData(3)});\r\n     }, 100)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updateChart();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  updateChart = () => {\r\n    let colors = [\"#ff0000\", \"#00ff00\", \"#0000ff\", \"#fbb13c\"];\r\n\r\n    //scales\r\n    const xScale = d3\r\n      .scaleBand()\r\n      .domain(d3.range(0, this.state.data.length))\r\n      .range([0, this.props.width]);\r\n\r\n    const yScale = d3\r\n      .scaleLinear()\r\n      .domain([-3, 3])\r\n      .range([0, this.props.height]);\r\n\r\n    //create a selector and attach data to it\r\n    let svgContainer = d3\r\n      .select('svg')\r\n      .selectAll(\"rect\")\r\n      .data(this.state.data);\r\n\r\n    svgContainer\r\n      .append(\"circle\")\r\n      .attr('cx', 1000)\r\n      .attr('cy', 500)  \r\n      .attr('r', 5)\r\n      .style('fill', 'blue')\r\n      \r\n    svgContainer\r\n      .enter()\r\n      .append(\"circle\")\r\n//      .attr(\"transform\", ${`translate(${`this.props.width/2`}, ${`this.props.height/2`})`})\r\n      .merge(svgContainer)\r\n      .transition()\r\n      .duration(3500)\r\n      .attr(\"cx\", d => xScale(d.x))\r\n      .attr(\"cy\", d => yScale(d.y)) \r\n      .attr(\"r\", xScale.bandwidth())\r\n      .style(\"fill\", (d, i) => colors[i])\r\n      .remove();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <svg width={this.props.width} height={this.props.height}></svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass DrawStuff extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.myData = [{x:2, y:2, r:25}, {x:5, y:4, r:20}, {x:7, y:6, r:3}];\r\n    this.drawStuff = this.drawStuff.bind(this);\r\n    this.timer = null;\r\n    this.state = {\r\n      data: ''\r\n    }\r\n  }\r\n\r\n  getRandomColor = () => {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }\r\n\r\n  myGetData = (totalPoints = 100) => {\r\n    return (  \r\n      d3range(totalPoints).map((d, i) => {\r\n        return { x: (Math.random() * 10) - 5, y: (Math.random() * 10) - 5, r: Math.random() * 10, c: Math.floor(Math.random() * 5)};\r\n      })\r\n    )\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.timer = setInterval(() => {\r\n      this.setState({data: this.myGetData(3)});\r\n     }, 0)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.drawStuff();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  drawStuff() { \r\n    const xScale = d3\r\n      // .scaleBand()\r\n      .scaleLinear()\r\n      .domain([0, 10])\r\n      .range([0, this.props.width]);\r\n\r\n    const yScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 10])\r\n      .range([0, this.props.height]);\r\n\r\n    const rScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 10])\r\n      .range([0, 20]);\r\n\r\n    //update\r\n    let svgContainer = d3.select('svg')\r\n      .selectAll('rect')\r\n      .data(this.state.data);\r\n\r\n    //enter\r\n    svgContainer\r\n     .enter() \r\n     .append('circle')\r\n     .attr(\"transform\", ${`translate(${`this.props.width/2`}, ${`this.props.height/2`})`})\r\n     .transition()\r\n     .duration(3000)\r\n     .attr(\"cx\", (d) => xScale(d.x))\r\n     .attr(\"cy\", (d) => yScale(d.y))\r\n     .attr(\"r\", (d) => rScale(d.r))\r\n     .style('fill', (d) => this.getRandomColor()) //green\r\n     .transition()\r\n     .duration(1000)\r\n     .attr(\"r\", (d) => rScale(0))\r\n     .remove() \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <svg width={this.props.width} height={this.props.height} id='content'></svg>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nclass D3Example extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false,\r\n      dimensions: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({         \r\n      dimensions: {     //get the dimensions of the containing div so we can pass them to DrawStuff to set the size of the svg\r\n        width: this.container.offsetWidth,\r\n        height: this.container.offsetHeight,\r\n      },\r\n    });\r\n  }\r\n\r\n  //we're rendering this after this component mounts so we can get the dimensions of the parent div\r\n  renderContent() {\r\n    return (\r\n      <DrawStuff width={this.state.dimensions.width} height={this.state.dimensions.height}></DrawStuff>\r\n//      <D3Circles width={this.state.dimensions.width} height={this.state.dimensions.height}></D3Circles> \r\n    );\r\n  }  \r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n    // let screenWidth = window.screen.width;\r\n    // let screenHeight = window.screen.height;\r\n\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <div style={{height: '5%', textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>D3</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'D3Example.js'}>\r\n        </DialogContainer>\r\n\r\n        <div style={{height: '90%', position: 'absolute', width: '100%'}} ref={el => (this.container = el)}>\r\n          {this.state.dimensions && this.renderContent()} \r\n        </div>    \r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default D3Example;\r\n`\r\nexport default code;","import React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js';\r\nimport code from './code-D3Example.js';\r\nimport * as d3 from \"d3\";\r\n\r\n\r\nimport { range as d3range } from \"d3-array\";\r\nimport { randomNormal as d3randomNormal } from \"d3-random\";\r\nimport { color } from 'd3';\r\n\r\nclass D3Circles extends React.Component {\r\n  constructor(props) { \r\n    super(props);\r\n    this.timer = null;\r\n    this.state = {\r\n      data: []\r\n    };\r\n  }\r\n\r\n  getData = (totalPoints = 100) => {\r\n    return (  \r\n      d3range(totalPoints).map((d, i) => {\r\n        return { x: d, y: d3randomNormal()()};\r\n      })\r\n    )\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.timer = setInterval(() => {\r\n      this.setState({data: this.getData(3)});\r\n     }, 100)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updateChart();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  updateChart = () => {\r\n    let colors = [\"#ff0000\", \"#00ff00\", \"#0000ff\", \"#fbb13c\"];\r\n\r\n    //scales\r\n    const xScale = d3\r\n      .scaleBand()\r\n      .domain(d3.range(0, this.state.data.length))\r\n      .range([0, this.props.width]);\r\n\r\n    const yScale = d3\r\n      .scaleLinear()\r\n      .domain([-3, 3])\r\n      .range([0, this.props.height]);\r\n\r\n    //create a selector and attach data to it\r\n    let svgContainer = d3\r\n      .select('svg')\r\n      .selectAll(\"rect\")\r\n      .data(this.state.data);\r\n\r\n    svgContainer\r\n      .append(\"circle\")\r\n      .attr('cx', 1000)\r\n      .attr('cy', 500)  \r\n      .attr('r', 5)\r\n      .style('fill', 'blue')\r\n      \r\n    svgContainer\r\n      .enter()\r\n      .append(\"circle\")\r\n//      .attr(\"transform\", `translate(${this.props.width/2}, ${this.props.height/2})`)\r\n      .merge(svgContainer)\r\n      .transition()\r\n      .duration(3500)\r\n      .attr(\"cx\", d => xScale(d.x))\r\n      .attr(\"cy\", d => yScale(d.y)) \r\n      .attr(\"r\", xScale.bandwidth())\r\n      .style(\"fill\", (d, i) => colors[i])\r\n      .remove();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <svg width={this.props.width} height={this.props.height}></svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass DrawStuff extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.myData = [{x:2, y:2, r:25}, {x:5, y:4, r:20}, {x:7, y:6, r:3}];\r\n    this.drawStuff = this.drawStuff.bind(this);\r\n    this.timer = null;\r\n    this.state = {\r\n      data: ''\r\n    }\r\n  }\r\n\r\n  getRandomColor = () => {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }\r\n\r\n  myGetData = (totalPoints = 100) => {\r\n    return (  \r\n      d3range(totalPoints).map((d, i) => {\r\n        return { x: (Math.random() * 10) - 5, y: (Math.random() * 10) - 5, r: Math.random() * 10, c: Math.floor(Math.random() * 5)};\r\n      })\r\n    )\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.timer = setInterval(() => {\r\n      this.setState({data: this.myGetData(3)});\r\n     }, 0)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.drawStuff();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  drawStuff() { \r\n    const xScale = d3\r\n      // .scaleBand()\r\n      .scaleLinear()\r\n      .domain([0, 10])\r\n      .range([0, this.props.width]);\r\n\r\n    const yScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 10])\r\n      .range([0, this.props.height]);\r\n\r\n    const rScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 10])\r\n      .range([0, 20]);\r\n\r\n    //update\r\n    let svgContainer = d3.select('svg')\r\n      .selectAll('rect')\r\n      .data(this.state.data);\r\n\r\n    //enter\r\n    svgContainer\r\n     .enter() \r\n     .append('circle')\r\n     .attr(\"transform\", `translate(${this.props.width/2}, ${this.props.height/2})`)\r\n     .transition()\r\n     .duration(3000)\r\n     .attr(\"cx\", (d) => xScale(d.x))\r\n     .attr(\"cy\", (d) => yScale(d.y))\r\n     .attr(\"r\", (d) => rScale(d.r))\r\n     .style('fill', (d) => this.getRandomColor()) //green\r\n     .transition()\r\n     .duration(1000)\r\n     .attr(\"r\", (d) => rScale(0))\r\n     .remove() \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <svg width={this.props.width} height={this.props.height} id='content'></svg>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nclass D3Example extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false,\r\n      dimensions: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({         \r\n      dimensions: {     //get the dimensions of the containing div so we can pass them to DrawStuff to set the size of the svg\r\n        width: this.container.offsetWidth,\r\n        height: this.container.offsetHeight,\r\n      },\r\n    });\r\n  }\r\n\r\n  //we're rendering this after this component mounts so we can get the dimensions of the parent div\r\n  renderContent() {\r\n    return (\r\n      <DrawStuff width={this.state.dimensions.width} height={this.state.dimensions.height}></DrawStuff>\r\n//      <D3Circles width={this.state.dimensions.width} height={this.state.dimensions.height}></D3Circles> \r\n    );\r\n  }  \r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n    // let screenWidth = window.screen.width;\r\n    // let screenHeight = window.screen.height;\r\n\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <div style={{height: '5%', textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>D3</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'D3Example.js'}>\r\n        </DialogContainer>\r\n\r\n        <div style={{height: '90%', position: 'absolute', width: '100%'}} ref={el => (this.container = el)}>\r\n          {this.state.dimensions && this.renderContent()} \r\n        </div>    \r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default D3Example;","let code = `\r\nimport React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js'\r\nimport code from './code-playground.js';\r\nimport * as d3 from \"d3\";\r\n\r\n\r\n// import { range as d3range } from \"d3-array\";\r\n// import { randomNormal as d3randomNormal } from \"d3-random\";\r\n// import { color } from 'd3';\r\nlet colors = ['green', 'red', 'blue', 'yellow'];\r\n\r\nclass DrawStuff extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data1: [\r\n          {x:0, y:0, w:30, h:30},\r\n          {x:3, y:3, w:30, h:30},\r\n          {x:6, y:6, w:30, h:30},\r\n          {x:9, y:9, w:30, h:30},\r\n        ],\r\n      data2: [\r\n          {x:0, y:0, w:30, h:30},\r\n          {x:3, y:3, w:30, h:30},\r\n          {x:6, y:6, w:30, h:30},\r\n          {x:9, y:9, w:30, h:30},\r\n        ]\r\n\r\n      }\r\n        // [\r\n        //   {x:0, y:0, w:30, h:30},\r\n        //   {x:3, y:3, w:30, h:30},\r\n        //   {x:6, y:6, w:30, h:30},\r\n        //   {x:9, y:9, w:30, h:30},\r\n        // ]\r\n    //}\r\n    this.drawStuff = this.drawStuff.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.drawStuff();\r\n  }\r\n\r\n  \r\n  drawStuff() { \r\n\r\n    const xScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 10])\r\n      .range([0, 100]);\r\n\r\n    const yScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 10])\r\n      .range([0, 100]);\r\n\r\n////////////////////////////////////////////////////////////////\r\n    //update\r\n    let svgContainer1 = d3.select('svg')\r\n      // .selectAll('rect')\r\n      // .data(this.state.data1)\r\n\r\n\r\n    svgContainer1.selectAll('.rect1')// Select specifically blue dots\r\n      .data(this.state.data1)\r\n      .enter()\r\n      .append(\"rect\")\r\n       .attr(\"class\", \"rect1\")// Assign two classes\r\n      .attr(\"transform\", ${`translate(${`this.props.width/2`}, ${`this.props.height/2`})`})\r\n      .transition()\r\n      .delay(function(d, i) { \r\n         return i * 400;\r\n       })\r\n      .duration(1000)\r\n      .attr(\"x\", (d) => xScale(d.x))\r\n      .attr(\"y\", (d) =>  yScale(d.y))\r\n      .attr(\"width\", (d) => d.w)\r\n      .attr(\"height\", (d) => d.h)\r\n      .style('fill', (d, i) => colors[i])\r\n     .transition()\r\n     .duration(2000)\r\n     .style('fill', (d, i) => 'white')\r\n\r\n      \r\n    svgContainer1.selectAll('.rect2')// Select specifically blue dots\r\n      .data(this.state.data2)\r\n      .enter()\r\n      .append(\"rect\")\r\n       .attr(\"class\", \"rect2\")// Assign two classes\r\n      .attr(\"transform\", ${`translate(${`this.props.width/4`}, ${`this.props.height/2`})`})\r\n      .transition()\r\n      .delay(function(d, i) { \r\n         return i * 400;\r\n       })\r\n      .duration(1000)\r\n      .attr(\"x\", (d) => xScale(d.x))\r\n      .attr(\"y\", (d) =>  yScale(d.y))\r\n      .attr(\"width\", (d) => d.w)\r\n      .attr(\"height\", (d) => d.h)\r\n      .style('fill', (d, i) => colors[3 - i])\r\n     .transition()\r\n     .duration(2000)\r\n     .style('fill', (d, i) => 'white')\r\n\r\n\r\n\r\n    //enter\r\n    // svgContainer1\r\n    //  .enter() \r\n    //  .append('rect')\r\n    //   .attr(\"class\", \"rect\")// Assign two classes\r\n    //  .attr(\"transform\", ${`translate(${`this.props.width/2`}, ${`this.props.height/2`})`})\r\n    //  .transition()\r\n    //  .delay(function(d, i) { \r\n    //     return i * 400;\r\n    //   })\r\n    //  .duration(1000)\r\n    //  .attr(\"x\", (d) => xScale(d.x))\r\n    //  .attr(\"y\", (d) =>  yScale(d.y))\r\n    //  .attr(\"width\", (d) => d.w)\r\n    //  .attr(\"height\", (d) => d.h)\r\n    //  .style('fill', (d, i) => colors[i])\r\n    //  .transition()\r\n    //  .duration(1000)\r\n    //  .style('fill', (d, i) => 'white')\r\n////////////////////////////////////////////////////////////////\r\n\r\n    //enter\r\n    // svgContainer1\r\n    //  .enter() \r\n    //  .append('rect')\r\n    //  .attr(\"transform\", ${`translate(${`this.props.width/4`}, ${`this.props.height/4`})`})\r\n    //  .transition()\r\n    //  .delay(function(d, i) { \r\n    //     return i * 400;\r\n    //   })\r\n    //  .duration(1000)\r\n    //  .attr(\"x\", (d) => xScale(d.data2.x))\r\n    //  .attr(\"y\", (d) =>  yScale(d.data2.y))\r\n    //  .attr(\"width\", (d) => d.data2.w)\r\n    //  .attr(\"height\", (d) => d.data2.h)\r\n    //  .style('fill', (d, i) => colors[i])\r\n    //  .transition()\r\n    //  .duration(1000)\r\n    //  .style('fill', (d, i) => 'white')\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <svg width={this.props.width} height={this.props.height} id='content'></svg>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nclass D3Playground extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false,\r\n      dimensions: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(React.version);\r\n    this.setState({         \r\n      dimensions: {     //get the dimensions of the containing div so we can pass them to DrawStuff to set the size of the svg\r\n        width: this.container.offsetWidth,\r\n        height: this.container.offsetHeight,\r\n      },\r\n    });\r\n  }\r\n\r\n  //we're rendering this after this component mounts so we can get the dimensions of the parent div\r\n  renderContent() {\r\n    return (\r\n      <DrawStuff width={this.state.dimensions.width} height={this.state.dimensions.height}></DrawStuff>\r\n//      <D3Circles width={this.state.dimensions.width} height={this.state.dimensions.height}></D3Circles> \r\n    );\r\n  }  \r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n    // let screenWidth = window.screen.width;\r\n    // let screenHeight = window.screen.height;\r\n\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <div style={{height: '5%', textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>D3</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'D3Example.js'}>\r\n        </DialogContainer>\r\n\r\n        <div style={{height: '90%', position: 'absolute', width: '100%'}} ref={el => (this.container = el)}>\r\n          {this.state.dimensions && this.renderContent()} \r\n        </div>    \r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default D3Playground;\r\n`\r\nexport default code;","import React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js'\r\nimport code from './code-D3Playground.js';\r\nimport * as d3 from \"d3\";\r\n\r\n\r\n// import { range as d3range } from \"d3-array\";\r\n// import { randomNormal as d3randomNormal } from \"d3-random\";\r\n// import { color } from 'd3';\r\nlet colors = ['green', 'red', 'blue', 'yellow'];\r\n\r\nclass DrawStuff extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data1: [\r\n          {x:0, y:0, w:30, h:30},\r\n          {x:3, y:3, w:30, h:30},\r\n          {x:6, y:6, w:30, h:30},\r\n          {x:9, y:9, w:30, h:30},\r\n        ],\r\n      data2: [\r\n          {x:0, y:0, w:30, h:30},\r\n          {x:3, y:3, w:30, h:30},\r\n          {x:6, y:6, w:30, h:30},\r\n          {x:9, y:9, w:30, h:30},\r\n        ]\r\n\r\n      }\r\n        // [\r\n        //   {x:0, y:0, w:30, h:30},\r\n        //   {x:3, y:3, w:30, h:30},\r\n        //   {x:6, y:6, w:30, h:30},\r\n        //   {x:9, y:9, w:30, h:30},\r\n        // ]\r\n    //}\r\n    this.drawStuff = this.drawStuff.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.drawStuff();\r\n  }\r\n\r\n  \r\n  drawStuff() { \r\n\r\n    const xScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 10])\r\n      .range([0, 100]);\r\n\r\n    const yScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 10])\r\n      .range([0, 100]);\r\n\r\n////////////////////////////////////////////////////////////////\r\n    //update\r\n    let svgContainer1 = d3.select('svg')\r\n      // .selectAll('rect')\r\n      // .data(this.state.data1)\r\n\r\n\r\n    svgContainer1.selectAll('.rect1')// Select specifically blue dots\r\n      .data(this.state.data1)\r\n      .enter()\r\n      .append(\"rect\")\r\n       .attr(\"class\", \"rect1\")// Assign two classes\r\n      .attr(\"transform\", `translate(${this.props.width/2}, ${this.props.height/2})`)\r\n      .transition()\r\n      .delay(function(d, i) { \r\n         return i * 400;\r\n       })\r\n      .duration(1000)\r\n      .attr(\"x\", (d) => xScale(d.x))\r\n      .attr(\"y\", (d) =>  yScale(d.y))\r\n      .attr(\"width\", (d) => d.w)\r\n      .attr(\"height\", (d) => d.h)\r\n      .style('fill', (d, i) => colors[i])\r\n     .transition()\r\n     .duration(2000)\r\n     .style('fill', (d, i) => 'white')\r\n\r\n      \r\n    svgContainer1.selectAll('.rect2')// Select specifically blue dots\r\n      .data(this.state.data2)\r\n      .enter()\r\n      .append(\"rect\")\r\n       .attr(\"class\", \"rect2\")// Assign two classes\r\n      .attr(\"transform\", `translate(${this.props.width/4}, ${this.props.height/2})`)\r\n      .transition()\r\n      .delay(function(d, i) { \r\n         return i * 400;\r\n       })\r\n      .duration(1000)\r\n      .attr(\"x\", (d) => xScale(d.x))\r\n      .attr(\"y\", (d) =>  yScale(d.y))\r\n      .attr(\"width\", (d) => d.w)\r\n      .attr(\"height\", (d) => d.h)\r\n      .style('fill', (d, i) => colors[3 - i])\r\n     .transition()\r\n     .duration(2000)\r\n     .style('fill', (d, i) => 'white')\r\n\r\n\r\n\r\n    //enter\r\n    // svgContainer1\r\n    //  .enter() \r\n    //  .append('rect')\r\n    //   .attr(\"class\", \"rect\")// Assign two classes\r\n    //  .attr(\"transform\", `translate(${this.props.width/2}, ${this.props.height/2})`)\r\n    //  .transition()\r\n    //  .delay(function(d, i) { \r\n    //     return i * 400;\r\n    //   })\r\n    //  .duration(1000)\r\n    //  .attr(\"x\", (d) => xScale(d.x))\r\n    //  .attr(\"y\", (d) =>  yScale(d.y))\r\n    //  .attr(\"width\", (d) => d.w)\r\n    //  .attr(\"height\", (d) => d.h)\r\n    //  .style('fill', (d, i) => colors[i])\r\n    //  .transition()\r\n    //  .duration(1000)\r\n    //  .style('fill', (d, i) => 'white')\r\n////////////////////////////////////////////////////////////////\r\n\r\n    //enter\r\n    // svgContainer1\r\n    //  .enter() \r\n    //  .append('rect')\r\n    //  .attr(\"transform\", `translate(${this.props.width/4}, ${this.props.height/4})`)\r\n    //  .transition()\r\n    //  .delay(function(d, i) { \r\n    //     return i * 400;\r\n    //   })\r\n    //  .duration(1000)\r\n    //  .attr(\"x\", (d) => xScale(d.data2.x))\r\n    //  .attr(\"y\", (d) =>  yScale(d.data2.y))\r\n    //  .attr(\"width\", (d) => d.data2.w)\r\n    //  .attr(\"height\", (d) => d.data2.h)\r\n    //  .style('fill', (d, i) => colors[i])\r\n    //  .transition()\r\n    //  .duration(1000)\r\n    //  .style('fill', (d, i) => 'white')\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <svg width={this.props.width} height={this.props.height} id='content'></svg>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nclass D3Playground extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false,\r\n      dimensions: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(React.version);\r\n    this.setState({         \r\n      dimensions: {     //get the dimensions of the containing div so we can pass them to DrawStuff to set the size of the svg\r\n        width: this.container.offsetWidth,\r\n        height: this.container.offsetHeight,\r\n      },\r\n    });\r\n  }\r\n\r\n  //we're rendering this after this component mounts so we can get the dimensions of the parent div\r\n  renderContent() {\r\n    return (\r\n      <DrawStuff width={this.state.dimensions.width} height={this.state.dimensions.height}></DrawStuff>\r\n//      <D3Circles width={this.state.dimensions.width} height={this.state.dimensions.height}></D3Circles> \r\n    );\r\n  }  \r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n    // let screenWidth = window.screen.width;\r\n    // let screenHeight = window.screen.height;\r\n\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <div style={{height: '5%', textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>D3-Playground</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'D3Playground.js'}>\r\n        </DialogContainer>\r\n\r\n        <div style={{height: '90%', position: 'absolute', width: '100%'}} ref={el => (this.container = el)}>\r\n          {this.state.dimensions && this.renderContent()} \r\n        </div>    \r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default D3Playground;","let code = `\r\nimport React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js'\r\nimport code from './code-JavaScriptExercises.js';\r\nimport * as d3 from \"d3\";\r\n\r\nconst weatherBitApiKey = '679dcaf864aa415c812b8a4fe23ba67f';\r\nconst openWeatherApiKey = '1b58f5b9571fb5391ba5406c9caff375';\r\nconst openCageApiKey = '7ae329bc80d64fd08e86461e4bd249e1';\r\n\r\nclass D3Weather extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      city: 'Los Angeles, CA',\r\n      lat: 0,\r\n      lng: 0,\r\n      lineArr: [],\r\n      returnedCity: 'Los Angeles, CA'\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getWeather();\r\n  }\r\n\r\n  onCityChange = (e) => {\r\n    this.setState({city: e.target.value})\r\n  }\r\n\r\n  getWeather = () => {\r\n\r\n    let openCageUrl = ${`https://api.opencagedata.com/geocode/v1/json?q=${`this.state.city`}&countrycode=us&limit=1&key=${`openCageApiKey`}`};\r\n    let selectedData = [];\r\n    let returnedCity = ' ';\r\n\r\n    fetch(openCageUrl)\r\n    .then(res => res.json())\r\n    .then(json => {\r\n\r\n\r\n      returnedCity = json.results[0].formatted + ' ' + '(' + json.results[0].annotations.timezone.short_name + ')';\r\n      let openWeatherUrl = ${`https://api.openweathermap.org/data/2.5/onecall?lat=${`json.results[0].geometry.lat`}&lon=${`json.results[0].geometry.lng`}&exclude=daily,minutely,current&units=imperial&appid=${`openWeatherApiKey`}`};\r\n      fetch(openWeatherUrl)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        let tempArr = []; \r\n\r\n        let temperatures = [];\r\n        json.hourly.map((item) => {\r\n          temperatures.push({time: new Date(item.dt * 1000).getHours(), data: item.temp, color: 'orangered'})\r\n        })\r\n        tempArr.push(temperatures); \r\n\r\n\r\n        let humidities = [];\r\n        json.hourly.map((item) => {\r\n          humidities.push({time: new Date(item.dt * 1000).getHours(), data: item.humidity, color: 'blue'})\r\n        })\r\n        tempArr.push(humidities); \r\n\r\n        let wind = [];\r\n        json.hourly.map((item) => {\r\n          wind.push({time: new Date(item.dt * 1000).getHours(), data: item.wind_speed, color: 'green'})\r\n        })\r\n        tempArr.push(wind); \r\n\r\n\r\n        this.setState({lineArr: tempArr, returnedCity: returnedCity})\r\n        this.drawChart();  \r\n\r\n      })\r\n      .catch(error => this.setState({returnedCity: ${`Error locating forecast for: ${`this.state.city`}`}))\r\n    })\r\n    .catch(error => this.setState({returnedCity: ${`Error locating forecast for: ${`this.state.city`}`}))\r\n  } \r\n\r\n\r\n  drawChart = () => {\r\n\r\n    let svgContainer = d3.select('svg');\r\n    let margin = 50;\r\n    let graphWidth = svgContainer.node().getBoundingClientRect().width - (2 * margin);\r\n    let graphHeight = svgContainer.node().getBoundingClientRect().height - (2 * margin);\r\n    let origin = {x: margin, y: graphHeight + margin};\r\n\r\n    // Add X axis\r\n    let x = d3.scaleTime().domain([Date.now(), Date.now() + 48 * 60 * 60 * 1000]).range([origin.x, graphWidth]).nice();\r\n    svgContainer\r\n      .append(\"g\")\r\n      .attr(\"transform\", ${`translate(0, ${`origin.y`}`})\r\n      .call(d3.axisBottom(x).ticks(24));\r\n\r\n    // Add Y axis\r\n    let y = d3.scaleLinear().domain([0, 140]).range([ origin.y, origin.y - graphHeight]).nice();\r\n    svgContainer\r\n      .append(\"g\")\r\n      .attr(\"transform\", ${`translate(${`origin.x`}, 0)`})\r\n      .call(d3.axisLeft(y).ticks(20));\r\n\r\n    //origin  \r\n    svgContainer\r\n      .append('circle')\r\n      .attr('cx', origin.x)\r\n      .attr('cy', origin.y)  \r\n      .attr('r', 3)\r\n\r\n    svgContainer.append(\"text\")             \r\n      .attr(\"transform\",\r\n            \"translate(\" + (origin.x + (graphWidth/2)) + \" ,\" + \r\n                           (origin.y + 35) + \")\")\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"48-Hour\");\r\n\r\n    svgContainer.append('text')\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .attr(\"y\", 0)\r\n      .attr(\"x\", 0 - (graphHeight + 40) / 2)\r\n      .attr(\"dy\", \"1em\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .append(\"tspan\").style(\"fill\", \"orangered\").text('Temperature (F)')\r\n      .append(\"tspan\").style(\"fill\", \"black\").text('  -  ')\r\n      .append(\"tspan\").style(\"fill\", \"blue\").text('Humidity (%)')\r\n      .append(\"tspan\").style(\"fill\", \"black\").text('  -  ')\r\n      .append(\"tspan\").style(\"fill\", \"green\").text('Wind Speed (mph)')\r\n\r\n    const gridlines = d3.axisLeft()\r\n      .tickFormat(\"\")\r\n      .tickSize(-graphWidth + margin)\r\n      .scale(y);\r\n\r\n    svgContainer.append(\"g\")\r\n      .attr(\"class\", \"grid\")\r\n      .attr(\"transform\", ${`translate(${`origin.x`}, 0)`})\r\n       .call(gridlines);\r\n \r\n////////////////////////////\r\n\r\n    const xScale = d3.scaleLinear()\r\n      .domain([0, 47])\r\n      .range([origin.x, graphWidth]) \r\n\r\n    const yScale = d3.scaleLinear()\r\n      .domain([0, 140])\r\n      .range([origin.y, origin.y - graphHeight]) \r\n\r\n    const line = d3.line()\r\n      .x((d, i) => xScale(i))\r\n      .y(d => yScale(d.data))\r\n      .curve(d3.curveMonotoneX)\r\n\r\n    d3.selectAll('#line').remove();  \r\n\r\n    //draw the lines\r\n    this.state.lineArr.map((item, i) => {\r\n      let path = svgContainer\r\n        .append('path') \r\n        .datum(item)\r\n        .attr('d', line) // do your magic, line!\r\n        .attr('stroke', item[i].color)\r\n        .attr(\"id\", \"line\")\r\n        .style('stroke-width', 2)\r\n        .attr(\"fill\", \"none\")\r\n        \r\n      path  \r\n      .attr('stroke-dasharray', (d) => path.node().getTotalLength())\r\n      .attr('stroke-dashoffset', (d) => path.node().getTotalLength())\r\n      .transition()\r\n      .duration(4000)\r\n      .ease(d3.easeLinear)\r\n      .attr('stroke-dashoffset', '0')\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <>\r\n        <div id='d3div1'>\r\n          <label>City: </label>\r\n          <input onChange={this.onCityChange} style={{width: '20%', marginLeft: '10px', marginRight: '10px'}} value={this.state.city}></input>\r\n          <button onClick={this.getWeather}>Get Weather</button>\r\n        </div>\r\n        <div id='d3div2'>\r\n          <label>{this.state.returnedCity}</label>\r\n        </div>\r\n        <div style={{textAlign: 'center', height: '95%', width: '100%', marginLeft: '0px', marginTop: '0px', marginRight: '0px', marginBottom: '0px', borderStyle: 'solid', borderColor: '#ff0000', borderWidth: '0px'}}>\r\n          <svg style={{align: 'center', width: '1000', height: '590', marginTop: '10px', borderStyle: 'solid', borderColor: '#ffffff', borderWidth: '2px', backgroundColor: '#cccccc'}}></svg>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nclass D3WeatherApp extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    };\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n\r\n    let screenWidth = window.screen.width;\r\n    let screenHeight = window.screen.height;\r\n\r\n\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <div style={{height: '5%', textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>D3</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'D3Example.js'}>\r\n        </DialogContainer>\r\n\r\n        <div style={{height: '90%', position: 'absolute', width: '100%'}}>\r\n          <D3Weather></D3Weather>\r\n        </div>    \r\n\r\n     </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default D3WeatherApp;\r\n`\r\nexport default code;","import React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js'\r\nimport code from './code-D3Weather.js';\r\nimport * as d3 from \"d3\";\r\n\r\nconst weatherBitApiKey = '679dcaf864aa415c812b8a4fe23ba67f';\r\nconst openWeatherApiKey = '1b58f5b9571fb5391ba5406c9caff375';\r\nconst openCageApiKey = '7ae329bc80d64fd08e86461e4bd249e1';\r\n\r\nclass D3Weather extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      city: 'Los Angeles, CA',\r\n      lat: 0,\r\n      lng: 0,\r\n      lineArr: [],\r\n      returnedCity: 'Los Angeles, CA'\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getWeather();\r\n  }\r\n\r\n  onCityChange = (e) => {\r\n    this.setState({city: e.target.value})\r\n  }\r\n\r\n  getWeather = () => {\r\n\r\n    let openCageUrl = `https://api.opencagedata.com/geocode/v1/json?q=${this.state.city}&countrycode=us&limit=1&key=${openCageApiKey}`;\r\n    let selectedData = [];\r\n    let returnedCity = ' ';\r\n\r\n    fetch(openCageUrl)\r\n    .then(res => res.json())\r\n    .then(json => {\r\n\r\n\r\n      returnedCity = json.results[0].formatted + ' ' + '(' + json.results[0].annotations.timezone.short_name + ')';\r\n      let openWeatherUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${json.results[0].geometry.lat}&lon=${json.results[0].geometry.lng}&exclude=daily,minutely,current&units=imperial&appid=${openWeatherApiKey}`;\r\n      fetch(openWeatherUrl)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        let tempArr = []; \r\n\r\n        let temperatures = [];\r\n        json.hourly.map((item) => {\r\n          temperatures.push({time: new Date(item.dt * 1000).getHours(), data: item.temp, color: 'orangered'})\r\n        })\r\n        tempArr.push(temperatures); \r\n\r\n\r\n        let humidities = [];\r\n        json.hourly.map((item) => {\r\n          humidities.push({time: new Date(item.dt * 1000).getHours(), data: item.humidity, color: '#03bafc'})\r\n        })\r\n        tempArr.push(humidities); \r\n\r\n        let wind = [];\r\n        json.hourly.map((item) => {\r\n          wind.push({time: new Date(item.dt * 1000).getHours(), data: item.wind_speed, color: 'green'})\r\n        })\r\n        tempArr.push(wind); \r\n\r\n\r\n        this.setState({lineArr: tempArr, returnedCity: returnedCity})\r\n        this.drawChart();  \r\n\r\n      })\r\n      .catch(error => this.setState({returnedCity: `Error locating forecast for: ${this.state.city}`}))\r\n    })\r\n    .catch(error => this.setState({returnedCity: `Error locating forecast for: ${this.state.city}`}))\r\n  } \r\n\r\n\r\n  // gradientColor = (p) => {\r\n  //   var bounds = d3.extent(dataum, d => d.value);\r\n  //   var interval = bounds[1]-bounds[0];\r\n  \r\n  //   return d3.interpolateHslLong(\"red\", \"blue\")((p[0].value-bounds[0])/interval);\r\n  // };\r\n\r\n\r\n  drawChart = () => {\r\n\r\n    let svgContainer = d3.select('svg');\r\n    let margin = 50;\r\n    let graphWidth = svgContainer.node().getBoundingClientRect().width - (2 * margin);\r\n    let graphHeight = svgContainer.node().getBoundingClientRect().height - (2 * margin);\r\n    let origin = {x: margin, y: graphHeight + margin};\r\n\r\n\r\n    // Add X axis\r\n    let x = d3.scaleTime().domain([Date.now(), Date.now() + 48 * 60 * 60 * 1000]).range([origin.x, graphWidth]).nice();\r\n    svgContainer\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(0, ${origin.y})`)\r\n      .call(d3.axisBottom(x).ticks(24));\r\n\r\n    // Add Y axis\r\n    let y = d3.scaleLinear().domain([0, 140]).range([ origin.y, origin.y - graphHeight]).nice();\r\n    svgContainer\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${origin.x}, 0)`)\r\n      .call(d3.axisLeft(y).ticks(20));\r\n\r\n    //origin  \r\n    svgContainer\r\n      .append('circle')\r\n      .attr('cx', origin.x)\r\n      .attr('cy', origin.y)  \r\n      .attr('r', 3)\r\n\r\n    svgContainer.append(\"text\")             \r\n      .attr(\"transform\",\r\n            \"translate(\" + (origin.x + (graphWidth/2)) + \" ,\" + \r\n                           (origin.y + 35) + \")\")\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\"48-Hour\");\r\n\r\n    svgContainer.append('text')\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .attr(\"y\", 0)\r\n      .attr(\"x\", 0 - (graphHeight + 40) / 2)\r\n      .attr(\"dy\", \"1em\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .append(\"tspan\").style(\"fill\", \"#ff0000\").text('Temperature (F)')\r\n      .append(\"tspan\").style(\"fill\", \"black\").text('  -  ')\r\n      .append(\"tspan\").style(\"fill\", \"#03bafc\").text('Humidity (%)')\r\n      .append(\"tspan\").style(\"fill\", \"black\").text('  -  ')\r\n      .append(\"tspan\").style(\"fill\", \"green\").text('Wind Speed (mph)')\r\n\r\n    const gridlines = d3.axisLeft()\r\n      .tickFormat(\"\")\r\n      .tickSize(-graphWidth + margin)\r\n      .scale(y);\r\n\r\n    svgContainer.append(\"g\")\r\n      .attr(\"class\", \"grid\")\r\n      .attr(\"transform\", `translate(${origin.x}, 0)`)\r\n       .call(gridlines);\r\n \r\n////////////////////////////\r\n\r\n    const xScale = d3.scaleLinear()\r\n      .domain([0, 47])\r\n      .range([origin.x, graphWidth]) \r\n\r\n    const yScale = d3.scaleLinear()\r\n      .domain([0, 140])\r\n      .range([origin.y, origin.y - graphHeight]) \r\n\r\n    const line = d3.line()\r\n      .x((d, i) => xScale(i))\r\n      .y(d => yScale(d.data))\r\n      .curve(d3.curveMonotoneX)\r\n\r\n    d3.selectAll('#line').remove();  \r\n\r\n    var colorRange = ['#ff0000', '#ff9933', '#ffffbf', '#66ffff', '#034afc'] //['#ffffcc', '#a1dab4', '#41b6c4', '#2c7fb8', '#253494']\r\n\r\n    var color = d3.scaleLinear().range(colorRange).domain([1, 2, 3, 4, 5]);\r\n\r\n    var linearGradient = svgContainer.append(\"defs\")\r\n    .append(\"linearGradient\")\r\n    .attr(\"id\", \"linear-gradient\")\r\n    .attr(\"gradientTransform\", \"rotate(90)\");\r\n\r\n    linearGradient.append(\"stop\")\r\n        .attr(\"offset\", \"0%\")\r\n        .attr(\"stop-color\", color(1));\r\n\r\n    // linearGradient.append(\"stop\")\r\n    //     .attr(\"offset\", \"25%\")\r\n    //     .attr(\"stop-color\", color(2));\r\n\r\n    linearGradient.append(\"stop\")\r\n        .attr(\"offset\", \"50%\")\r\n        .attr(\"stop-color\", color(3));\r\n\r\n    // linearGradient.append(\"stop\")\r\n    //     .attr(\"offset\", \"75%\")\r\n    //     .attr(\"stop-color\", color(4));\r\n\r\n    linearGradient.append(\"stop\")\r\n        .attr(\"offset\", \"100%\")\r\n        .attr(\"stop-color\", color(5));\r\n\r\n\r\n    //draw the lines\r\n    this.state.lineArr.map((item, i) => {\r\n        let color = (i == 0 ? 'url(#linear-gradient)' : item[i].color);\r\n        let path = svgContainer\r\n          .append('path') \r\n          .datum(item)\r\n          .attr('d', line) // do your magic, line!\r\n          .attr('stroke', color)//item[i].color)\r\n          .attr(\"id\", \"line\")\r\n          .style('stroke-width', 3)\r\n          .attr(\"fill\", \"none\")\r\n          \r\n        path  \r\n        .attr('stroke-dasharray', (d) => path.node().getTotalLength())\r\n        .attr('stroke-dashoffset', (d) => path.node().getTotalLength())\r\n        .transition()\r\n        .duration(4000)\r\n        .ease(d3.easeLinear)\r\n        .attr('stroke-dashoffset', '0')\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <>\r\n        <div id='d3div1'>\r\n          <label>City: </label>\r\n          <input onChange={this.onCityChange} style={{width: '20%', marginLeft: '10px', marginRight: '10px'}} value={this.state.city}></input>\r\n          <button onClick={this.getWeather}>Get Weather</button>\r\n        </div>\r\n        <div id='d3div2'>\r\n          <label>{this.state.returnedCity}</label>\r\n        </div>\r\n        <div style={{textAlign: 'center', height: '95%', width: '100%', marginLeft: '0px', marginTop: '0px', marginRight: '0px', marginBottom: '0px', borderStyle: 'solid', borderColor: '#ff0000', borderWidth: '0px'}}>\r\n          <svg style={{align: 'center', width: '1000', height: '590', marginTop: '10px', borderStyle: 'solid', borderColor: '#ffffff', borderWidth: '2px', backgroundColor: '#cccccc'}}></svg>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nclass D3WeatherApp extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    };\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n\r\n    let screenWidth = window.screen.width;\r\n    let screenHeight = window.screen.height;\r\n\r\n\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <div style={{height: '5%', textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>D3-Weather</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'D3Weather.js'}>\r\n        </DialogContainer>\r\n\r\n        <div style={{height: '90%', position: 'absolute', width: '100%'}}>\r\n          <D3Weather></D3Weather>\r\n        </div>    \r\n\r\n     </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default D3WeatherApp;","import React from 'react';\r\nimport './App.css';\r\nimport './DragAndDrop.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js';\r\nimport code from './code-DragAndDropApp.js';\r\n\r\n\r\nfunction Task(props) {\r\n\r\n  const onDragStart = (e) => {\r\n    const target = e.target;\r\n    e.dataTransfer.setData('data', target.id);\r\n    e.dataTransfer.setData('containerId', props.dropId)\r\n  }\r\n\r\n  const onMouseOver = (e) => {\r\n    e.target.style.cursor='pointer';\r\n  }\r\n\r\n  const onDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = 'none';\r\n\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <div id={props.id} className={'task'} draggable={'true'} onDragStart={onDragStart} onMouseOver={onMouseOver} onDragOver={onDragOver} >\r\n        <img id={props.id} src={process.env.PUBLIC_URL + props.src} alt=\"Pineapple\" style={{width:'200px', height:'200px', display: 'inline-block'}}></img>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction DragDropBox(props) {\r\n  let dropId = null;\r\n\r\n  const drop = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = e.dataTransfer.getData('data');\r\n    const element = document.getElementById(data);\r\n    element.style.display =  'block';\r\n\r\n    // if (e.target.getAttribute('draggable') == 'true') {//if dropping on already dropped element - drop on element's parent\r\n    //   e.target.parentElement.appendChild(element);\r\n    // }\r\n    // else {\r\n    //   e.target.appendChild(element);\r\n    // }  \r\n    document.getElementById(dropId).appendChild(element);\r\n    console.log('>' + dropId);\r\n\r\n  }\r\n\r\n  const dragOver = (e) => {\r\n    e.preventDefault();\r\n\r\n  }\r\n\r\n  const onDragEnter = (e) => {\r\n    if (e.target.className == 'dropzone') {\r\n      dropId = e.target.id;\r\n      console.log(dropId);\r\n    }\r\n  }\r\n\r\n   return(\r\n    <div id={props.id} className={props.className} onDragEnter={onDragEnter} onDrop={drop} onDragOver={(e) => dragOver(e)}>\r\n      {props.tasksArr.map((item) => {return (<Task key={item.id} dropId={props.id} id={item.id} src={item.src}></Task>)})}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nlet tasksArr = [\r\n  {\r\n    id: 'shed',\r\n    src: '/images/shed1.jpg'\r\n  },\r\n  {\r\n    id: 'sv650',\r\n    src: '/images/sv650.jpg'\r\n  }\r\n]\r\n\r\nclass DragAndDrop extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id='mainDiv'>\r\n        <DragDropBox id={'todos'} className={'dropzone'} tasksArr={tasksArr}>\r\n        </DragDropBox>\r\n\r\n        <DragDropBox id={'completed'} className={'dropzone'} tasksArr={[]}>\r\n        </DragDropBox>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass DragAndDropApp extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n    // let screenWidth = window.screen.width;\r\n    // let screenHeight = window.screen.height;\r\n\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <div style={{height: '5%', textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Drag and Drop</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'DragAndDropApp.js'}>\r\n        </DialogContainer>\r\n\r\n        <div style={{height: '90%', position: 'absolute', width: '100%'}}>\r\n          <DragAndDrop></DragAndDrop>\r\n        </div>    \r\n\r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DragAndDropApp;","let code = `\nimport React from 'react';\nimport './App.css';\nimport './DragAndDrop.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeApp from './ReactTreeApp';\n\nimport DialogContainer from './DialogContainer.js';\nimport DisplayCode from './DisplayCode.js';\nimport code from './code-DragAndDropApp.js';\n\n\nfunction Task(props) {\n\n  const onDragStart = (e) => {\n    const target = e.target;\n    e.dataTransfer.setData('data', target.id);\n    e.dataTransfer.setData('containerId', props.dropId)\n  }\n\n  const onMouseOver = (e) => {\n    e.target.style.cursor='pointer';\n  }\n\n  const onDragOver = (e) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'none';\n\n  }\n\n  return(\n    <>\n      <div id={props.id} className={'task'} draggable={'true'} onDragStart={onDragStart} onMouseOver={onMouseOver} onDragOver={onDragOver} >\n        <img id={props.id} src={process.env.PUBLIC_URL + props.src} alt=\"Pineapple\" style={{width:'200px', height:'200px', display: 'inline-block'}}></img>\n      </div>\n    </>\n  )\n}\n\nfunction DragDropBox(props) {\n  let dropId = null;\n\n  const drop = (e) => {\n    e.preventDefault();\n\n    const data = e.dataTransfer.getData('data');\n    const element = document.getElementById(data);\n    element.style.display =  'block';\n\n    // if (e.target.getAttribute('draggable') == 'true') {//if dropping on already dropped element - drop on element's parent\n    //   e.target.parentElement.appendChild(element);\n    // }\n    // else {\n    //   e.target.appendChild(element);\n    // }  \n    document.getElementById(dropId).appendChild(element);\n    console.log('>' + dropId);\n\n  }\n\n  const dragOver = (e) => {\n    e.preventDefault();\n\n  }\n\n  const onDragEnter = (e) => {\n    if (e.target.className == 'dropzone') {\n      dropId = e.target.id;\n      console.log(dropId);\n    }\n  }\n\n   return(\n    <div id={props.id} className={props.className} onDragEnter={onDragEnter} onDrop={drop} onDragOver={(e) => dragOver(e)}>\n      {props.tasksArr.map((item) => {return (<Task key={item.id} dropId={props.id} id={item.id} src={item.src}></Task>)})}\n    </div>\n  )\n\n}\n\nlet tasksArr = [\n  {\n    id: 'shed',\n    src: '/images/shed1.jpg'\n  },\n  {\n    id: 'sv650',\n    src: '/images/sv650.jpg'\n  }\n]\n\nclass DragAndDrop extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return(\n      <div id='mainDiv'>\n        <DragDropBox id={'todos'} className={'dropzone'} tasksArr={tasksArr}>\n        </DragDropBox>\n\n        <DragDropBox id={'completed'} className={'dropzone'} tasksArr={[]}>\n        </DragDropBox>\n      </div>\n    )\n  }\n}\n\nclass DragAndDropApp extends React.Component {\n    constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n    this.openDisplayCode = this.openDisplayCode.bind(this);\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\n    this.state = {\n      showCode: false\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  goBack() {\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\n  }\n\n  openDisplayCode() {\n    this.setState({showCode: true});\n  }\n\n  onCancelDisplayCode() {\n    this.setState({showCode: false});\n  }\n\n  render() {\n    // let screenWidth = window.screen.width;\n    // let screenHeight = window.screen.height;\n\n    return (\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\n        <div style={{height: '5%', textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Drag and Drop</label><button onClick={this.openDisplayCode}>Code</button></span>\n        </div>\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \n          code={code} onCancel={this.onCancelLogout}/>}\n          width='1000px' height='700px' title={'DragAndDropApp.js'}>\n        </DialogContainer>\n\n        <div style={{height: '90%', position: 'absolute', width: '100%'}}>\n          <DragAndDrop></DragAndDrop>\n        </div>    \n\n     </div>\n    )\n  }\n}\n\nexport default DragAndDropApp;\n`\nexport default code;","\r\nimport React from 'react';\r\nimport './App.css';\r\nimport './DragAndDropFiles.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js'\r\nimport code from './code-playground.js';\r\nimport * as d3 from \"d3\";\r\n\r\n////////////////////\r\n// ************************ Drag and drop ***************** //\r\n// let dropArea = document.getElementById(\"drop-area\");\r\n\r\n// // Prevent default drag behaviors\r\n// ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\r\n//   dropArea.addEventListener(eventName, preventDefaults, false)   \r\n//   document.body.addEventListener(eventName, preventDefaults, false)\r\n// });\r\n\r\n// // Highlight drop area when item is dragged over it\r\n// ['dragenter', 'dragover'].forEach(eventName => {\r\n//   dropArea.addEventListener(eventName, highlight, false)\r\n// });\r\n\r\n// ['dragleave', 'drop'].forEach(eventName => {\r\n//   dropArea.addEventListener(eventName, unhighlight, false)\r\n// })\r\n\r\n// // Handle dropped files\r\n// dropArea.addEventListener('drop', handleDrop, false)\r\n\r\n// function preventDefaults (e) {\r\n//   e.preventDefault()\r\n//   e.stopPropagation()\r\n// }\r\n\r\n// function highlight(e) {\r\n//   dropArea.classList.add('highlight')\r\n// }\r\n\r\n// function unhighlight(e) {\r\n//   dropArea.classList.remove('active')\r\n// }\r\n\r\n// function handleDrop(e) {\r\n//   var dt = e.dataTransfer\r\n//   var files = dt.files\r\n\r\n//   handleFiles(files)\r\n// }\r\n\r\n// let uploadProgress = []\r\n// let progressBar = document.getElementById('progress-bar')\r\n\r\n// function initializeProgress(numFiles) {\r\n//   progressBar.value = 0\r\n//   uploadProgress = []\r\n\r\n//   for(let i = numFiles; i > 0; i--) {\r\n//     uploadProgress.push(0)\r\n//   }\r\n// }\r\n\r\n// function updateProgress(fileNumber, percent) {\r\n//   uploadProgress[fileNumber] = percent\r\n//   let total = uploadProgress.reduce((tot, curr) => tot + curr, 0) / uploadProgress.length\r\n//   console.debug('update', fileNumber, percent, total)\r\n//   progressBar.value = total\r\n// }\r\n\r\n// function handleFiles(files) {\r\n//   files = [...files]\r\n//   initializeProgress(files.length)\r\n//   files.forEach(uploadFile)\r\n//   files.forEach(previewFile)\r\n// }\r\n\r\n// function previewFile(file) {\r\n//   let reader = new FileReader()\r\n//   reader.readAsDataURL(file)\r\n//   reader.onloadend = function() {\r\n//     let img = document.createElement('img')\r\n//     img.src = reader.result\r\n//     document.getElementById('gallery').appendChild(img)\r\n//   }\r\n// }\r\n\r\n// function uploadFile(file, i) {\r\n//   var url = 'https://api.cloudinary.com/v1_1/joezimim007/image/upload'\r\n//   var xhr = new XMLHttpRequest()\r\n//   var formData = new FormData()\r\n//   xhr.open('POST', url, true)\r\n//   xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\r\n\r\n//   // Update progress (can be used to show progress indicator)\r\n//   xhr.upload.addEventListener(\"progress\", function(e) {\r\n//     updateProgress(i, (e.loaded * 100.0 / e.total) || 100)\r\n//   })\r\n\r\n//   xhr.addEventListener('readystatechange', function(e) {\r\n//     if (xhr.readyState == 4 && xhr.status == 200) {\r\n//       updateProgress(i, 100) // <- Add this\r\n//     }\r\n//     else if (xhr.readyState == 4 && xhr.status != 200) {\r\n//       // Error. Inform the user\r\n//     }\r\n//   })\r\n\r\n//   formData.append('upload_preset', 'ujpu6gyk')\r\n//   formData.append('file', file)\r\n//   xhr.send(formData)\r\n// }\r\n\r\n\r\n\r\n////////////////////\r\n\r\n\r\nclass DragAndDrop extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  };\r\n\r\n  dragEnter = (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    document.getElementById('drop-area').classList.add('highlight')\r\n  \r\n  };\r\n\r\n  dragOver = (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    document.getElementById('drop-area').classList.add('highlight')\r\n  \r\n  }\r\n\r\n  dragLeave = (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    let classList = document.getElementById('drop-area').classList;\r\n    document.getElementById('drop-area').classList.remove('highlight')\r\n  \r\n  }\r\n\r\n  drop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    let dt = e.dataTransfer;\r\n    let files = dt.files;\r\n\r\n    let reader = new FileReader()\r\n    reader.readAsDataURL(files[0])\r\n    reader.onloadend = function() {\r\n      let img = document.createElement('img')\r\n      img.src = reader.result\r\n      document.getElementById('drop-area').appendChild(img)\r\n    }\r\n\r\n\r\n    console.log('drop');\r\n    document.getElementById('drop-area').classList.remove('highlight')\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id='mainDiv'>\r\n        <div id='drop-area' className='' onDragEnter={this.dragEnter} onDragOver={this.dragOver} onDragLeave={this.dragLeave} onDrop={this.drop}>\r\n        {/* <div id=\"gallery\"></div> */}\r\n        </div>\r\n       </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nclass DragAndDropFiles extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n    // let screenWidth = window.screen.width;\r\n    // let screenHeight = window.screen.height;\r\n\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <div style={{height: '5%', textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>D3</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'D3Example.js'}>\r\n        </DialogContainer>\r\n\r\n        <div style={{height: '90%', position: 'absolute', width: '100%'}}>\r\n          <DragAndDrop></DragAndDrop>\r\n        </div>    \r\n\r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DragAndDropFiles;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nclass DummyApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>Dummy</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DummyApp;\r\n","\r\nlet code = `\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js'\r\nimport code from './code-GiphyGetterApp.js';\r\n\r\n\r\nclass Giphy extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: '', \r\n      quantity: 1,\r\n      widthAndHeight: 200,\r\n      height: 200,\r\n      images: []\r\n    };\r\n    this.apikey = 'wiqQ9XrBQa6g4PW28ZkNYVDmSlSjx4v5';\r\n  }\r\n\r\n  onChangeSearch = (e) => {\r\n    this.setState({search: e.target.value});\r\n  }\r\n\r\n  onChangeQty = (e) => {\r\n    this.setState({quantity: e.target.value});\r\n  }\r\n\r\n  onChangeWidthAndHeight = (e) => {\r\n    this.setState({widthAndHeight: e.target.value});\r\n  }\r\n\r\n  onFetch = () => {\r\n    let url = ${`https://api.giphy.com/v1/gifs/search?q=${`this.state.search`}&api_key=${`this.apikey`}&limit=${`this.state.quantity`}`};\r\n    let tempImages = [];\r\n    fetch(url)\r\n    .then(res => {\r\n      if (res.status === 200) {\r\n        return res.json()\r\n      }\r\n    })\r\n    .then(json => {\r\n      json.data.map((imageObj) => {\r\n          tempImages.push(imageObj.images.original.url);\r\n          this.setState({images: tempImages});\r\n      })\r\n    })\r\n    .catch(error => console.log(error))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id='searchDiv'>  \r\n          <label>Search: </label>\r\n          <input id='searchInput' onChange={this.onChangeSearch} value={this.state.search}></input>\r\n          <label>How many?: </label>\r\n          <input id='quantityInput' onChange={this.onChangeQty} value={this.state.quantity}></input>\r\n          <label>Width/Height: </label>\r\n          <input id='quantityInput' onChange={this.onChangeWidthAndHeight} value={this.state.widthAndHeight}></input>\r\n          <button id='goButton' onClick={this.onFetch}>Go Get Giphy!</button>\r\n        </div>\r\n        <div id=\"imageDiv\">\r\n          {this.state.images.map((image, index) => {\r\n            return (\r\n            <img key={index} id={'img'} src={image} alt={'nope'} width={this.state.widthAndHeight} height={this.state.widthAndHeight}></img>  \r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass GiphyGetterApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>GiphyGetter</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'GiphyGetterApp.js'}>\r\n        </DialogContainer>\r\n\r\n        <Giphy></Giphy>\r\n\r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default GiphyGetterApp;\r\n\r\n`\r\nexport default code;","\r\nimport React from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactTreeApp from './ReactTreeApp';\r\n\r\nimport DialogContainer from './DialogContainer.js';\r\nimport DisplayCode from './DisplayCode.js'\r\nimport code from './code-GiphyGetterApp.js';\r\n\r\n\r\nclass Giphy extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: '', \r\n      quantity: 1,\r\n      widthAndHeight: 200,\r\n      height: 200,\r\n      images: []\r\n    };\r\n    this.apikey = 'wiqQ9XrBQa6g4PW28ZkNYVDmSlSjx4v5';\r\n  }\r\n\r\n  onChangeSearch = (e) => {\r\n    this.setState({search: e.target.value});\r\n  }\r\n\r\n  onChangeQty = (e) => {\r\n    this.setState({quantity: e.target.value});\r\n  }\r\n\r\n  onChangeWidthAndHeight = (e) => {\r\n    this.setState({widthAndHeight: e.target.value});\r\n  }\r\n\r\n  onFetch = () => {\r\n    let url = `https://api.giphy.com/v1/gifs/search?q=${this.state.search}&api_key=${this.apikey}&limit=${this.state.quantity}`;\r\n    let tempImages = [];\r\n    fetch(url)\r\n    .then(res => {\r\n      if (res.status === 200) {\r\n        return res.json()\r\n      }\r\n    })\r\n    .then(json => {\r\n      json.data.map((imageObj) => {\r\n          tempImages.push(imageObj.images.original.url);\r\n          this.setState({images: tempImages});\r\n      })\r\n    })\r\n    .catch(error => console.log(error))\r\n\r\n\r\n    let x = 1;\r\n    let y = 24;\r\n\r\n    let x2 = (('00000000' + x.toString(2)).substr(-8));\r\n    let y2 = (('00000000' + y.toString(2)).substr(-8));\r\n    let x2Arr = [...x2];\r\n    let y2Arr = [...y2];\r\n    \r\n    console.log(x2Arr);\r\n    console.log(y2Arr);\r\n\r\n    let count = 0;\r\n    x2Arr.map((item, index) => {\r\n        if (item != y2Arr[index]) {\r\n            count ++;\r\n        }\r\n    })\r\n\r\n    console.log(count);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id='searchDiv'>  \r\n          <label>Search: </label>\r\n          <input id='searchInput' onChange={this.onChangeSearch} value={this.state.search}></input>\r\n          <label>How many?: </label>\r\n          <input id='quantityInput' onChange={this.onChangeQty} value={this.state.quantity}></input>\r\n          <label>Width/Height: </label>\r\n          <input id='quantityInput' onChange={this.onChangeWidthAndHeight} value={this.state.widthAndHeight}></input>\r\n          <button id='goButton' onClick={this.onFetch}>Go Get Giphy!</button>\r\n        </div>\r\n        <div id=\"imageDiv\">\r\n          {this.state.images.map((image, index) => {\r\n            return (\r\n            <img key={index} id={'img'} src={image} alt={'nope'} width={this.state.widthAndHeight} height={this.state.widthAndHeight}></img>  \r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass GiphyGetterApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.openDisplayCode = this.openDisplayCode.bind(this);\r\n    this.onCancelDisplayCode = this.onCancelDisplayCode.bind(this);\r\n    this.state = {\r\n      showCode: false\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    ReactDOM.render(<ReactTreeApp/>, document.getElementById('root'));\r\n  }\r\n\r\n  openDisplayCode() {\r\n    this.setState({showCode: true});\r\n  }\r\n\r\n  onCancelDisplayCode() {\r\n    this.setState({showCode: false});\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div style={{height: '100%', position: 'absolute', width: '100%'}}>\r\n        <div style={{textAlign: 'center', backgroundColor: 'lightGreen', paddingTop: '15px', paddingBottom: '15px'}}>\r\n          <span><button onClick={this.goBack}>Back</button><label style={{fontSize: '24pt', marginLeft: '50px', marginRight: '50px'}}>GiphyGetter</label><button onClick={this.openDisplayCode}>Code</button></span>\r\n        </div>\r\n        <DialogContainer show={this.state.showCode} onCancel={this.onCancelDisplayCode} dialogContent={<DisplayCode \r\n          code={code} onCancel={this.onCancelLogout}/>}\r\n          width='1000px' height='700px' title={'GiphyGetterApp.js'}>\r\n        </DialogContainer>\r\n\r\n        <Giphy></Giphy>\r\n\r\n     </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default GiphyGetterApp;\r\n","\nimport React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport ReactTreeVanillaApp from './ReactTreeVanillaApp';\nimport ReactTreeContextApp from './ReactTreeContextApp';\nimport ReactTreeReduxApp from './ReactTreeReduxApp';\nimport ReactTreeHooksApp from './ReactTreeHooksApp';\nimport HigherOrderFunctionApp from './HigherOrderFunctionApp.js';\nimport JavaScriptExercises from './JavaScriptExercises.js';\nimport MiscApp from './MiscApp';\nimport ReactTreeHooksAndContextApp from './ReactTreeHooksAndContextApp';\nimport D3Example from './D3Example.js';\nimport D3Playground from './D3Playground.js';\nimport D3WeatherApp from './D3Weather.js';\nimport DragAndDropApp from './DragAndDropApp.js';\nimport DragAndDropFiles from './DragAndDropFiles.js';\n\nimport DummyApp from './DummyApp.js';\nimport GiphyGetterApp from './GiphyGetterApp.js';\n\nlet git = true;\n\nclass ReactTreeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(type) {\n    const componentsMap = {\n      vanilla: ReactTreeVanillaApp,\n      context: ReactTreeContextApp,\n      hooks: ReactTreeHooksApp,\n      redux: ReactTreeReduxApp,\n      hof: HigherOrderFunctionApp,\n      exercises: JavaScriptExercises,\n      misc: MiscApp,\n      giphy: GiphyGetterApp,\n      hookscontext: ReactTreeHooksAndContextApp,\n      draganddrop: DragAndDropApp,\n      draganddropfiles: DragAndDropFiles,\n      d3: D3Example,\n      d3playground: D3Playground,\n      d32: D3WeatherApp,\n      dummy: DummyApp\n    };\n    const DynamicComponent = componentsMap[type];\n    ReactDOM.render(<DynamicComponent/>, document.getElementById('root'));\n  }\n\n  render() {\n    return (\n      <div id='mainContainer'>\n        <h1 style={{marginLeft: '50px', marginTop: '10px',  marginBottom: '10px', padding: '0px'}}>React/Javascript Playground</h1>\n        <h2 style={{marginLeft: '50px', marginTop: '10px'}}>State Management Options, Hooks, D3, Drag and Drop, Misc.</h2>\n        <div id='mainSubContainer'>\n          <ul id='mainMenu'>\n            <div style={{backgroundColor: 'lightgreen', paddingTop: '5px', paddingLeft: '5px', paddingRight: '5px', paddingBottom: '0px', marginTop: '-5px'}}>\n              <li>\n                <button className='button' onClick={() => this.onClick('vanilla')}>Vanilla</button>\n              </li>\n              <li>\n                <button className='button' onClick={() => this.onClick('context')}>Context</button>\n              </li>\n              <li>\n                <button className='button' onClick={() => this.onClick('redux')}>Redux</button>\n              </li>\n              <li>\n                <button className='button' style={{marginTop: '0px'}} onClick={() => this.onClick('hooks')}>Hooks</button>\n              </li>\n              <li>\n                <button className='button' style={{marginTop: '0px', marginBottom: '5px'}} onClick={() => this.onClick('hookscontext')}>Context+Hooks</button>\n              </li>\n            </div>\n            <li>\n              <button className='button' style={{marginTop: '15px'}} onClick={() => this.onClick('draganddrop')}>DragAndDrop</button>\n            </li>\n            {git !== true ? (\n            <li>\n              <button className='button' style={{marginTop: '0px'}} onClick={() => this.onClick('draganddropfiles')}>DragAndDropFiles</button>\n            </li>\n            ) : ''}\n            </ul>\n          <ul id='mainMenu'>\n            <li>\n              <button className='button' onClick={() => this.onClick('hof')}>HigherOrderFunction</button>\n            </li>\n            {/* {git !== true ? ( */}\n             <li>\n              <button className='button' onClick={() => this.onClick('exercises')}>JavaScriptExercises</button>\n            </li>\n            {/* ) : ''} */}\n\n            <li>\n              <button className='button' style={{marginTop: '0px'}} onClick={() => this.onClick('giphy')}>GiphyGetter</button>\n            </li>\n            <li>\n              <button className='button' style={{marginTop: '0px'}} onClick={() => this.onClick('misc')}>Misc</button>\n            </li>\n            <li>\n              <button className='button' style={{marginTop: '0px'}} onClick={() => this.onClick('d3')}>D3</button>\n            </li>\n            <li>\n              <button className='button' style={{marginTop: '0px'}} onClick={() => this.onClick('d3playground')}>D3-Playground</button>\n            </li>\n            <li>\n              <button className='button' style={{marginTop: '0px'}} onClick={() => this.onClick('d32')}>D3-Weather</button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\nexport default ReactTreeApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport ReactTreeApp from './ReactTreeApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<ReactTreeApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}